"undefined"===typeof LimelightPlayerUtil&&("undefined"===typeof JSON&&(this.JSON={},function(){function z(c){return 10>c?"0"+c:c}function F(c){B.lastIndex=0;return B.test(c)?'"'+c.replace(B,function(c){var p=G[c];return"string"===typeof p?p:"\\u"+("0000"+c.charCodeAt(0).toString(16)).slice(-4)})+'"':'"'+c+'"'}function C(c,r){var p,l,s,D,m=n,h,g=r[c];g&&("object"===typeof g&&"function"===typeof g.toJSON)&&(g=g.toJSON(c));"function"===typeof u&&(g=u.call(r,c,g));switch(typeof g){case "string":return F(g);
case "number":return isFinite(g)?String(g):"null";case "boolean":case "null":return String(g);case "object":if(!g)return"null";n+=w;h=[];if("[object Array]"===Object.prototype.toString.apply(g)){D=g.length;for(p=0;p<D;p+=1)h[p]=C(p,g)||"null";s=0===h.length?"[]":n?"[\n"+n+h.join(",\n"+n)+"\n"+m+"]":"["+h.join(",")+"]";n=m;return s}if(u&&"object"===typeof u)for(D=u.length,p=0;p<D;p+=1)l=u[p],"string"===typeof l&&(s=C(l,g))&&h.push(F(l)+(n?": ":":")+s);else for(l in g)Object.hasOwnProperty.call(g,l)&&
(s=C(l,g))&&h.push(F(l)+(n?": ":":")+s);s=0===h.length?"{}":n?"{\n"+n+h.join(",\n"+n)+"\n"+m+"}":"{"+h.join(",")+"}";n=m;return s}}"function"!==typeof Date.prototype.toJSON&&(Date.prototype.toJSON=function(){return isFinite(this.valueOf())?this.getUTCFullYear()+"-"+z(this.getUTCMonth()+1)+"-"+z(this.getUTCDate())+"T"+z(this.getUTCHours())+":"+z(this.getUTCMinutes())+":"+z(this.getUTCSeconds())+"Z":null},String.prototype.toJSON=Number.prototype.toJSON=Boolean.prototype.toJSON=function(){return this.valueOf()});
var E=/[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,B=/[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,n,w,G={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r",'"':'\\"',"\\":"\\\\"},u;"function"!==typeof JSON.stringify&&(JSON.stringify=function(c,r,p){var l;w=n="";if("number"===typeof p)for(l=0;l<p;l+=1)w+=" ";else"string"===typeof p&&(w=p);if((u=r)&&"function"!==
typeof r&&("object"!==typeof r||"number"!==typeof r.length))throw Error("JSON.stringify");return C("",{"":c})});"function"!==typeof JSON.parse&&(JSON.parse=function(c,n){function p(c,l){var m,h,g=c[l];if(g&&"object"===typeof g)for(m in g)Object.hasOwnProperty.call(g,m)&&(h=p(g,m),void 0!==h?g[m]=h:delete g[m]);return n.call(c,l,g)}var l;c=String(c);E.lastIndex=0;E.test(c)&&(c=c.replace(E,function(c){return"\\u"+("0000"+c.charCodeAt(0).toString(16)).slice(-4)}));if(/^[\],:{}\s]*$/.test(c.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
"@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,"]").replace(/(?:^|:|,)(?:\s*\[)+/g,"")))return l=eval("("+c+")"),"function"===typeof n?p({"":l},""):l;throw new SyntaxError("JSON.parse");})}()),LimelightPlayerUtil=function(){function z(a,e,b,q,d){g(a,function(f){var v={service:{}};a.playlistService&&(v.service.playlistService=a.playlistService);a.metricsCollectionService&&(v.service.metricsCollectionService=a.metricsCollectionService);a.cuePointService&&(v.service.cuePointService=
a.cuePointService);a.beaconingService&&(v.service.beaconingService=a.beaconingService);return LimelightPlayer=DelvePlayer=f=f.createPlayer(e,b,q,d,v)})}function F(a,e,b,q){b.postStartSessionEvent();w(a,e,D,b,function(a,f){var e=f.mediaList[0],c=document.createElement("TABLE");c.style="border-style:none";var g=c.appendChild(document.createElement("TR")).appendChild(document.createElement("TD")).appendChild(document.createElement("A"));g.href="#";g.appendChild(document.createElement("IMG")).src=encodeURI(e.thumbnailImageUrl);
var k=c.appendChild(document.createElement("TR")).appendChild(document.createElement("TD"));k.style="text-align:center";k=k.appendChild(document.createElement("A"));k.href="#";k.appendChild(document.createTextNode("Click to play"));var t=function(){b.postPlayStateEvent(x.PLAY,0,function(){window.location=e.mobileUrls[0].mobileUrl});return!1};g.onclick=t;k.onclick=t;q(c)})}function C(a,e,b,q,d,f){w(a,q,h.htmlCodec,d,function(a,q){d.postStartSessionEvent();var c=q.mediaList[0],k=document.createElement("VIDEO");
k.src=encodeURI(c.mobileUrls[0].mobileUrl);k.width=e;k.height=b;k.poster=encodeURI(c.previewImageUrl);k.controls=!0;k.addEventListener("click",k.play);k.addEventListener("play",function(){d.postPlayStateEvent(x.PLAY,Math.round(1E3*k.currentTime));d.startHeartbeat({quality:a,getPosition:function(){return Math.round(1E3*k.currentTime)},isPlaying:function(){return!k.paused}})});k.addEventListener("pause",function(){k.ended||d.postPlayStateEvent(x.PAUSE,Math.round(1E3*k.currentTime));d.stopHeartbeat()});
k.addEventListener("ended",function(){d.postEvent(x.MEDIA_COMPLETE);d.stopHeartbeat()});var t=0;k.addEventListener("timeupdate",function(){var a=k.currentTime;if(k.seeking&&a!==t){var f=Math.round(1E3*t),e=Math.round(1E3*a);f!==e&&d.postEvent(x.SEEK,{offsetBefore:f,offsetAfter:e,heatmapDisplayed:!1,spectrumType:"",spectrumColor:0,relatedConcepts:""})}t=a});f(k)})}function E(a){a=a||{};a.wmode=a.wmode||"window";a.id=a.id||"limelight_player_"+Math.floor(1E9*Math.random());a.resources=a.resources||{};
a.resources.beaconingService=a.resources.beaconingService||p;a.resources.cuePointService=a.resources.cuePointService||r;a.resources.metricsCollectionService=a.resources.metricsCollectionService||c;a.resources.playlistService=a.resources.playlistService||u;a.resources.htmlPlayerLocation=a.resources.htmlPlayerLocation||h.loadingProtocol+l;a.resources.playerIframeLocation=a.resources.playerIframeLocation||h.loadingProtocol+s;return a}function B(a,e,b,q,d,f,v,c,g){var k=x.create(e.metricsCollectionService,
q,g);switch(g){case "iframe":return L(e,v,d,f,q,k,a);case "html":return z(e,v,d,f,null!==b?b:q);case "video":C(e,d,f,q,k,a);break;case "link":F(e,q,k,a);break;case "install-flash":h.Flash.canUpgrade?(e=!0===h.Flash.isActiveX?"ActiveX":"PlugIn",document.title=document.title.slice(0,47)+" - Flash Player Installation",n(a,"http://assets.delvenetworks.com/player/playerProductInstall.swf","MMredirectURL="+window.location+"&MMplayerType="+e+"&MMdoctitle="+document.title,d,f,v,c)):a('<table width="'+d+'" height="'+
f+'" bgcolor="black" style="background-color:black; margin-left:auto; margin-right:auto"><tr><td align="center" style="text-align:center; vertical-align:middle"><a href="http://www.adobe.com/go/getflash/" style="text-decoration:underline; color:white"><span style="font-size:12px; color:white">You need to have the latest version of Adobe Flash Player to view this content.<br/>Please click here to continue.</span></a></td></tr></table>')}return null}function n(a,e,b,q,d,f,c){var g="",h;if("string"===
typeof b)g=b;else if("object"===typeof b)for(h in b)g+=encodeURIComponent(h)+"="+encodeURIComponent(b[h])+"&";a('<object type="application/x-shockwave-flash" id="'+f+'" name="'+f+'" width="'+q+'" height="'+d+'" data="'+e+'"><param name="movie" value="'+e+'"/><param name="wmode" value="'+c+'"/><param name="allowScriptAccess" value="always"/><param name="allowFullScreen" value="true"/><param name="flashVars" value="'+g+'"/></object>');return document.getElementById(f)}function w(a,e,b,q,d){var f;e.mediaId?
f=a.playlistService+"/media/"+e.mediaId+"/getMobilePlaylistByMediaId?platform="+b:e.channelId?f=a.playlistService+"/channel/"+e.channelId+"/getFirstAvailableMobilePlaylistByChannelId?platform="+b:e.channelListId&&(f=a.playlistService+"/channel_list/"+e.channelListId+"/getFirstAvailableMobilePlaylistByChannelListId?platform="+b);M(f,function(a){a&&a.mediaList&&a.mediaList[0]?(a.id&&q.setChannelId(a.id),a.mediaList[0].mediaId&&q.setMediaId(a.mediaList[0].mediaId),0<a.mediaList[0].mobileUrls.length?
d(b,a):showError("Video Not Available For This Device")):showError("Video Not Available")})}function G(a){function e(a){return("object"===typeof a||"function"===typeof a)&&a.nodeType}if("undefined"===typeof a)return function(a){e(a)?document.body.appendChild(a):document.write(a)};"string"===typeof a&&(a=document.getElementById(a));if(e(a)){if("OBJECT"===a.nodeName){var b=a.parentNode,q=a.nextSibling,d=!1;return function(f){var c=document.createElement("DIV");e(f)?c.appendChild(f):c.innerHTML=f;d||
(b.replaceChild(c.firstChild,a),d=!0);for(;c.firstChild;)b.insertBefore(c.firstChild,q)}}return function(f){e(f)?a.appendChild(f):a.innerHTML+=f}}return null}var u="//production-ps.lvp.llnw.net/r/PlaylistService",c="//production-mcs.lvp.llnw.net/r/MetricsCollectionService",r="//cps.lvp.llnw.net/r/CuePointService",p="//production-eqbc.lvp.llnw.net",l="//videoplatform.limelight.com/player/html-player.js",s="//assets.delvenetworks.com/player/resources/iframe.html",D="Mobile3gp",m=navigator,h=function(){var a=
m.userAgent.toLowerCase(),e=m.platform.toLowerCase(),b=/android \d+\x2E\d+/.test(a),c=/android [2-9]+\x2E\d+/.test(a),d=/blackberry/.test(a);/playbook/.test(a);var f=/msie/.test(a),g=/msie\s\d\d/.test(a),h=/iemobile/.test(a),p=/ipad/.test(a),k=/iphone|ipad|ipod/.test(a),t=/silk/.test(a),H=/linux/.test(e?e:a),e=/opera mobi|opera tablet/.test(a),A=/fennec/.test(a),l=/symbian|series60/.test(a),n=/nintendo wiiu/.test(a),I=/mobile/.test(a)||b,d=b||k||t||d||l||e||A||n||h||I,h=[0,0,0];if(k&&(a=a.match(/os (.*) like mac os x/))&&
1<a.length){var h=[],a=a[1].split("_"),y;for(y in a)h.push(parseInt(a[y]));for(;3>h.length;)h.push(0)}y=function(){var a=document.createElement("VIDEO");return a.canPlayType?a.canPlayType('video/mp4; codecs="avc1.42E01E, mp4a.40.2"'):""}();A=(c||t||k)&&!A;c=function(){var a=document.createElement("VIDEO");return a.canPlayType?a.canPlayType("application/vnd.apple.mpegurl"):""}();t="probably"===c||k?"HttpLiveStreaming":"MobileH264";a=function(){var a=function(){var a=null;if("undefined"!==typeof m.plugins&&
"object"==typeof m.plugins["Shockwave Flash"]){if((a=m.plugins["Shockwave Flash"].description)&&("undefined"===typeof m.mimeTypes||!m.mimeTypes["application/x-shockwave-flash"]||m.mimeTypes["application/x-shockwave-flash"].enabledPlugin))return a=a.replace(/^.*\s+(\S+\s+\S+$)/,"$1"),[parseInt(a.replace(/^(.*)\..*$/,"$1"),10),parseInt(a.replace(/^.*\.(.*)\s.*$/,"$1"),10),/[a-zA-Z]/.test(a)?parseInt(a.replace(/^.*[a-zA-Z]+(.*)$/,"$1"),10):0]}else if("undefined"!==typeof window.ActiveXObject)try{var f=
new ActiveXObject("ShockwaveFlash.ShockwaveFlash");if(f&&(a=f.GetVariable("$version")))return a=a.split(" ")[1].split(","),[parseInt(a[0],10),parseInt(a[1],10),parseInt(a[2],10)]}catch(e){}return[0,0,0]}();return function(f,e,b){return a[0]>f||a[0]==f&&(a[1]>e||a[1]==e&&a[2]>=b)}}();f={canUpgrade:!H&&a(6,0,65),H264:a(9,0,115),hasAdaptiveStreaming:a(10,0,0),isActiveX:f};b=f.H264&&!b?"flash":d?"probably"===y||A?e||k&&!p&&5>h[0]?"video":"html":"link":"install-flash";"install-flash"===b&&(g&&"assets.delvenetworks.com"!==
window.location.host)&&(b="iframe");return{Metrics:{H264:y,HLS:c},embedMode:b,htmlCodec:t,Flash:f,loadingProtocol:"https:"===document.location.protocol?"https:":"http:"}}(),g=function(){var a=[];return function(e,b){if(void 0!==LimelightPlayerUtil.Player)b(LimelightPlayerUtil.Player);else if(a.push(b),void 0===LimelightPlayerUtil.playerLoadedCallback){var c=document.getElementsByTagName("head")[0]||document.documentElement,d=document.createElement("SCRIPT");d.type="text/javascript";d.src=e.htmlPlayerLocation;
d.charset="utf-8";LimelightPlayerUtil.playerLoadedCallback=function(f){LimelightPlayerUtil.Player=f;delete LimelightPlayerUtil.playerLoadedCallback;c&&c.removeChild(d);a.forEach(function(a){a(f)});a=[]};d.onerror=function(){a.forEach(function(a){a(null)});a=[]};c.insertBefore(d,c.firstChild)}}}(),L=function(){var a=[];return function(e,c,g,d,f,h,p){function l(a){var f={},e;for(e in a)f[e]="object"===typeof a[e]&&a[e]?l(a[e]):a[e];return f}var k=document.createElement("IFRAME");k.id=c;k.width=g;k.height=
d;k.src=e.playerIframeLocation;k.style.border="none";p(k);var t=document.getElementById(c).contentWindow,H={},A={},n={},m=0,I={},y=0,s=1,r=null,J=null,K=void 0;window.addEventListener("message",function(c){var b,d=c.data.state;d&&(d.channelList&&(H=d.channelList),d.channel&&(A=d.channel),d.media&&(n=d.media),d.index&&(m=d.index),d.playState&&(I=d.playState),d.position&&(y=d.position),d.volume&&(s=d.volume),d.quality&&(r=d.quality),d.actualQuality&&(J=d.actualQuality),d.customEvents&&(K=d.customEvents));
switch(c.data.type){case "event":"function"===typeof limelightPlayerCallback?limelightPlayerCallback(c.data.id,c.data.eventName,c.data.data):"function"===typeof delvePlayerCallback&&delvePlayerCallback(c.data.id,c.data.eventName,c.data.data);break;case "init":t.postMessage({type:"init",embed:"../embed.js",flashVars:f,resourceLocations:e},"*");break;case "api":b={};for(var g in c.data.funcs){var d=c.data.funcs[g],h=function(a){return function(){t.postMessage({type:"func",name:a,args:Array.prototype.slice.call(arguments)},
"*")}}(d);b[d]=h}b.registerPlayer=function(){};b.getPlayers=function(){return a};b.doGetActualQuality=function(){return J?J.name:null};b.doGetQuality=function(){return r?r.name:null};b.doGetQualityDetails=function(){return l({actual:J,selected:r})};b.doGetCurrentIndex=function(){return m};b.doGetCurrentMedia=function(){return l(n)};b.doGetCurrentChannel=function(){return l(A)};b.doGetCurrentChannelList=function(){return l(H)};b.doGetCurrentPlayState=function(){return l(I)};b.doGetCustomEvents=function(){return l(K)};
b.doGetPlayheadPositionInMilliseconds=function(){return y};b.doSetVolume=function(){var a=b.doSetVolume;return function(b){b||(b=0);if("number"===typeof b)return 0>b&&(b=0),1<b&&(b=1),s=b,a(b)}}();b.doGetVolume=function(){return s};delete b.doGetChannels;delete b.doGetChannelMedia;b.getPlayer=function(){return b};b.getPlayerNodeByIdOrName=function(a){var b=document.getElementById(a);return b&&b.doPlay?b:(a=document.getElementsByName(a))&&null!=a.length?a[0]:null};LimelightPlayer=DelvePlayer=b;for(var q in b)k[q]=
b[q];a.push(b)}})}}(),x=function(){function a(a){var b=document.cookie.indexOf(a+"="),e=b+a.length+1;if(!b&&a!=document.cookie.substring(0,a.length)||-1==b)return null;a=document.cookie.indexOf(";",e);-1==a&&(a=document.cookie.length);return unescape(document.cookie.substring(e,a))}function e(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(a){var b=16*Math.random()|0;return("x"==a?b:b&3|8).toString(16)}).toUpperCase()}function b(a,b){if(void 0!==a){var e=!1;return function(){e||
(e=!0,a.apply(b||this,arguments))}}}var c=e(),d={H264:h.Metrics.H264,HLS:h.Metrics.HLS},f=m.userAgent,g=m.platform,l=function(){var b=a("Limelight_Embed_Code_UserId");return function(){if(!b){var a=b=e(),d=365,c=new Date;c.setTime(c.getTime());d&&(d*=864E5);c=new Date(c.getTime()+d);document.cookie="Limelight_Embed_Code_UserId="+escape(a)+(d?";expires="+c.toGMTString():"")+""}return b}}(),p=function(){var a=+new Date;return function(){return new Date-a}}(),k=function(){var a=0;return function(b,e,
d){var c="_limelight_embed_ajax_"+a++,f=document.createElement("IFRAME");f.id=c;f.name=c;f.style.cssText="display:none;width:0px;height:0px;";(document.getElementsByTagName("body")[0]||document.documentElement).appendChild(f);var g=document.createElement("FORM");g.setAttribute("target",c);g.setAttribute("method","POST");g.setAttribute("action",b);for(field in e)b=document.createElement("INPUT"),b.setAttribute("type","hidden"),b.setAttribute("name",field),b.setAttribute("value",JSON.stringify(e[field])),
g.appendChild(b);f.appendChild(g);f.onload=function(){void 0!==d&&d();setTimeout(function(){f.parentNode.removeChild(f)},0)};g.submit()}}();return{HEARTBEAT:"Heartbeat",MEDIA_COMPLETE:"MediaComplete",PLAY:"Play",PAUSE:"Pause",SEEK:"Seek",START_SESSION:"StartSession",create:function(a,e,h){var n={},m=null;d.embedMode=h;var r={postEvent:function(b,d,f){var g={channelListId:n.channelListId||e.channelListId,channelId:n.channelId||e.channelId,mediaId:n.mediaId||e.mediaId,millisecondsElapsed:p()},h;for(h in g)void 0===
g[h]&&(g[h]="");for(h in d)g[h]=void 0===d[h]?"":d[h];k(a+"/recordMetricsEvent",{sourceInstanceId:c,source:"Limelight Embed Code",sourceVersion:1,eventType:b,data:g},f)},postStartSessionEvent:function(){this.postEvent(x.START_SESSION,{adConfigurationChannelId:e.adConfigurationChannelId,htmlCapabilities:JSON.stringify(d),pageURL:window.location.href,platform:g,playerProviderId:"Delve Networks",userAgent:f,userId:l(),version:"1.6"})},postPlayStateEvent:function(a,e,d){var c=b(d);this.postEvent(a,{positionInMilliseconds:e},
c);void 0!==d&&setTimeout(c,1E3)},setChannelListId:function(a){n.channelListId=a},setChannelId:function(a){n.channelId=a},setMediaId:function(a){n.mediaId=a},startHeartbeat:function(a){null!==m&&clearInterval(m);m=setInterval(function(){a.isPlaying()&&r.postEvent(x.HEARTBEAT,{droppedFrames:0,droppedFramesRatio:"",selectedMediaQuality:a.quality,positionInMilliseconds:a.getPosition(),maxBytesPerSecond:"",currentBitrate:""})},3E4)},stopHeartbeat:function(){null!==m&&clearInterval(m);m=null}};return r}}}(),
M=function(){var a=0;return function(e,b){var c="_"+a++;e+="&jsonp=LimelightPlayerUtil.jsonpCallback."+c;var d=document.getElementsByTagName("head")[0]||document.documentElement,f=document.createElement("SCRIPT");f.type="text/javascript";f.src=e;f.charset="utf-8";LimelightPlayerUtil.jsonpCallback[c]=function(a){delete LimelightPlayerUtil.jsonpCallback[c];b(a);d&&d.removeChild(f)};f.onerror=function(){b(null)};d.insertBefore(f,d.firstChild)}}();return{jsonpCallback:[],initEmbed:function(a,e){e=e||
{};var b=document.getElementById(a);if(null===b)return console&&(console.error&&"function"===typeof console.error)&&console.error("No such element: "+a),null;var c=b.width,d=b.height,f=b.firstChild;e.id=a;for(var g="",l={};null!==f;){if("PARAM"===f.nodeName)switch(f.name){case "flashVars":for(var g=f.value,l={},n=g.split("&"),k=0;k<n.length;k++){var m=n[k],p=m.indexOf("=");-1===p?l[decodeURIComponent(m)]="true":l[decodeURIComponent(m.substring(0,p))]=decodeURIComponent(m.substring(p+1))}break;case "wmode":e.wmode=
f.value}f=f.nextSibling}e=E(e);f=e.embedMode||h.embedMode;return"flash"!==f?(b=G(b),B(b,e.resources,g,l,c,d,e.id,e.wmode,f)):b},embedPlayer:function(a,c,b,g,d){d=G(d);g=E(g);var f=g.embedMode||h.embedMode;return"flash"===f?n(d,h.loadingProtocol+(h.Flash.hasAdaptiveStreaming?"//assets.delvenetworks.com/player/fp10loader.swf":"//assets.delvenetworks.com/player/fp9loader.swf"),a,c,b,g.id,g.wmode):B(d,g.resources,null,a,c,b,g.id,g.wmode,f)}}}());

(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

(function () {

  if (!String.prototype.startsWith) {
    String.prototype.startsWith = function (searchString, position) {
      position = position || 0;
      return this.indexOf(searchString, position) === position;
    };
  }
})();

},{}],2:[function(require,module,exports){
'use strict';

(function () {

    /**
     * Initialize state
     **/
    initializeFilterGroupState();

    /**
     * Dynamic behavior
     **/
    $('.filter-group h4').on('click', function (e) {
        var $filterGroup = $(this).parent();

        toggleFilterGroupState($filterGroup);

        e.preventDefault();
    });

    /**
     * Helper functions
     **/
    function initializeFilterGroupState() {
        var snpQuery = getUrlParameter('i'),
            filterGroupPattern = /^x[0-9]=/i; // e.g. x1=level

        // Parse S&P query parameters to determine active filter groups
        if (snpQuery) {
            var snpParams = snpQuery.split(';');

            for (var index in snpParams) {
                var param = snpParams[index];

                if (filterGroupPattern.test(param)) {
                    var filterGroupName = param.substring(param.indexOf('=') + 1);

                    // Expand active filter groups
                    $('.filter-group h4').filter(function () {
                        var regexString = '^' + filterGroupName,
                            // e.g. /^level/i
                        regex = new RegExp(regexString, 'i');

                        return regex.test($(this).text());
                    }).each(function () {
                        var $filterGroup = $(this).parent();
                        toggleFilterGroupState($filterGroup);
                    });
                }
            }
        }
    }

    function getUrlParameter(name) {
        name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
        var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');
        var results = regex.exec(location.search);
        return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
    }

    function toggleFilterGroupState($filterGroup) {
        $filterGroup.find('.filter-group-items').slideToggle(250);
        $filterGroup.find('h4').toggleClass('expanded');
    }
})();

},{}],3:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  Global Layout Helpers
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

$(function () {
  $(document).ready(function () {
    //updateHtmlClass();
  });
});

/**
 * Update the HTML tag with pertinent classes
 */
var updateHtmlClass = function updateHtmlClass() {
  if (isTouchDevice()) {
    $('html').addClass('touch');
    $('body').attr('ontouchstart', '');
  } else {
    $('html').addClass('no-touch');
  }
};

/**
 * Check if touch device.
 */
var isTouchDevice = function isTouchDevice() {
  try {
    document.createEvent('TouchEvent');
    return true;
  } catch (e) {
    return false;
  }
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],4:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  Global Forms Helper
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);
require('../../../node_modules/jquery-validation/dist/jquery.validate.min');

var lang = $("html").attr("lang");
if (lang == undefined || lang === '') lang = 'en';
lang = lang.trim();
if (lang === 'zh') {
	lang = 'zh_cn';
} else if (lang === 'tw') {
	lang = 'zh_tw';
} else if (lang !== 'zh_cn' && lang !== 'ja' && lang !== 'zh_tw' && lang !== 'en') {
	// Supporting only Japan, Taiwan, China, and English locales
	lang = 'en';
}
//Granite.I18n.setLocale(lang);
//Granite.I18n.setUrlPrefix("/bin/custom/i18n/dict.");
//Get i18n field names
var FieldConstants = {
	/*webformBusinessEmail: Granite.I18n.get("Business Email"),
	webformFirstName: Granite.I18n.get("First Name"),
	webformLastName: Granite.I18n.get("Last Name"),
	webformCompanyName: Granite.I18n.get("Company Name"),
	webformCountry: Granite.I18n.get("Country"),
	webformState: Granite.I18n.get("State"),
	webformProvince: Granite.I18n.get("Province"),
	webformCity: Granite.I18n.get("City"),
	webformBusinessPhone: Granite.I18n.get("Business Phone"),
	webformCompanySize: Granite.I18n.get("Company Size"),
	webformJobTitle: Granite.I18n.get("Job Title"),
	webformHelpText: Granite.I18n.get("helpText")*/
};
var getCurrentDate = function getCurrentDate() {
	var fullDate = new Date();

	//convert month to 2 digits
	var twoDigitMonth = fullDate.getMonth().length + 1 === 1 ? fullDate.getMonth() + 1 : '0' + (fullDate.getMonth() + 1);

	var currentDate = fullDate.getFullYear() + "/" + twoDigitMonth + "/" + fullDate.getDate();
	return currentDate;
};

//for Help text field
var helpTextMaxLength = 250;
$("#paragraphText").keyup(function () {
	var length = $(this).val().length;
	var length = helpTextMaxLength - length;
	$('#paratextchars').text(length);
});

/**
 * Gets the Elq First party Cookie
 */
var getElqCookie = function getElqCookie(c_name) {
	if (document.cookie.length > 0) {
		var c_start = document.cookie.indexOf(c_name + "=");
		if (c_start != -1) {
			c_start = c_start + c_name.length + 1;
			var c_end = document.cookie.indexOf(";", c_start);
			if (c_end == -1) {
				c_end = document.cookie.length;
			}
			return unescape(document.cookie.substring(c_start, c_end));
		}
	}
	return "";
};

module.exports = {
	/**
  * Get Cookie value
  *
  */
	getCookie: function getCookie(c_name) {
		if (document.cookie.length > 0) {
			var c_start = document.cookie.indexOf(c_name + "=");
			if (c_start != -1) {
				c_start = c_start + c_name.length + 1;
				var c_end = document.cookie.indexOf(";", c_start);
				if (c_end == -1) {
					c_end = document.cookie.length;
				}
				return unescape(document.cookie.substring(c_start, c_end));
			}
		}
		return "";
	},
	/**
  * Gets the Elq First party Cookie value if it has many
  */
	getElqCookieSubValue: function getElqCookieSubValue(name, subKey) {
		var cookieValue = getElqCookie(name);
		if (cookieValue == null || cookieValue == '') return '';
		var cookieSubValue = cookieValue.split('&');
		for (var i = 0; i < cookieSubValue.length; i++) {
			var pair = cookieSubValue[i].split('=');
			if (pair.length > 1) {
				if (pair[0] == subKey) {
					return pair[1];
				}
			}
		}
		return '';
	},
	/**
  * Get query string param value.
  */
	getUrlParam: function getUrlParam(name) {
		var results = new RegExp('[\?&]' + name + '=([^&#]*)').exec(window.location.search);

		return results !== null ? results[1] || 0 : '';
	},

	/**
  * Show and Hide States dropdown on forms
  */
	showHideStateDD: function showHideStateDD(obj) {
		var country = $(obj).val();
		if (country == 'United States') {
			$("#us_state").show();
			$("#webFormStateCA").val("");
			$("#ca_state").hide();
		} else if (country == 'Canada') {
			$("#ca_state").show();
			$("#webFormStateUS").val("");
			$("#us_state").hide();
		} else {
			$("#us_state").hide();
			$("#ca_state").hide();
			$("#webFormStateCA").val("");
			$("#webFormStateUS").val("");
		}
	},
	/**
  * Show and Hide GDPR Consent message
  */
	showHideGDPRConsent: function showHideGDPRConsent(obj) {
		var country = $(obj).val();
		if (country !== '' && country != 'undefined') {
			var isGDPRCountry = false;
			//gdprCountriesArr declared in formsContainer.html dynamically
			$.each(gdprCountriesArr, function (index, value) {
				if (value === country) {
					isGDPRCountry = true;
					return false;
				}
			});

			if (isGDPRCountry) {
				$("#gdprConsentDiv").toggleClass("hide", false);
			} else {
				$("#gdprConsentDiv").toggleClass("hide", true);
			}
		}
	},
	/**
  * Show and Hide GDPR Consent message
  */
	udpateGDPRConsent: function udpateGDPRConsent(obj) {
		var isGDPRConsentYes = $(obj).prop("checked");
		if (isGDPRConsentYes) {
			$("#webFormSaveProfile").val("1");
			$("#webFormSaveProfile").attr("checked", "checked");
		} else {
			$("#webFormSaveProfile").removeAttr("checked");
			$("#webFormSaveProfile").val("0"); // Don't create cookie
		}
	},

	/**
  * Validate mandatory fields.
  */
	validateMandatoryFields: function validateMandatoryFields(formID) {
		var validator = $(formID).validate({
			// Specify validation rules
			rules: {
				// The key name on the left side is the name attribute
				// of an input field. Validation rules are defined
				// on the right side
				emailAddress: {
					required: [true, FieldConstants.webformBusinessEmail],
					// Specify that email should be validated
					// by the built-in "email" rule
					email: [true, FieldConstants.webformBusinessEmail]
				},
				firstName: {
					required: [true, FieldConstants.webformFirstName],
					nameCheck: [true, FieldConstants.webformFirstName]
				},
				lastName: {
					required: [true, FieldConstants.webformLastName],
					nameCheck: [true, FieldConstants.webformLastName]
				},
				company: {
					required: [true, FieldConstants.webformCompanyName]
				},
				country: {
					required: [true, FieldConstants.webformCountry]
				},
				webFormStateCA: {
					required: function required(element) {
						if ($("#webFormCountry").val() == 'Canada') return [true, FieldConstants.webformProvince];
					},
					nameCheck: true
				},
				webFormStateUS: {
					required: function required(element) {
						if ($("#webFormCountry").val() == 'United States') return [true, FieldConstants.webformState];
					},
					nameCheck: true
				},
				city: {
					required: [true, FieldConstants.webformCity],
					nameCheck: [true, FieldConstants.webformCity]
				},
				phone: {
					required: [true, FieldConstants.webformBusinessPhone]
					//phoneNumberCheck: true
				},
				companySize1: {
					required: [true, FieldConstants.webformCompanySize]
				},
				title: {
					required: [true, FieldConstants.webformJobTitle]
				},
				paragraphText: {
					maxlength: 250
				}
			},
			// Specify validation error messages
			messages: {
				//emailAddress: Granite.I18n.get("businessEmailErrorMsg", ["{1}"]),

				firstName: {
					//required: Granite.I18n.get("requiredTextFieldErrorMsg", ["{1}"]),
					//nameCheck: Granite.I18n.get("validFieldErrorMsg", ["{1}"])
				},
				lastName: {
					//required: Granite.I18n.get("requiredTextFieldErrorMsg", ["{1}"]),
					//nameCheck: Granite.I18n.get("validFieldErrorMsg", ["{1}"])
				},
				//company: Granite.I18n.get("requiredTextFieldErrorMsg", ["{1}"]),

				//country: Granite.I18n.get("requiredDropdownFieldErrorMsg", ["{1}"]),

				//webFormStateCA: Granite.I18n.get("requiredDropdownFieldErrorMsg", ["{1}"]),

				//webFormStateUS: Granite.I18n.get("requiredDropdownFieldErrorMsg", ["{1}"]),

				city: {
					//required: Granite.I18n.get("requiredTextFieldErrorMsg", ["{1}"]),
					//nameCheck: Granite.I18n.get("validFieldErrorMsg", ["{1}"])
				},

				//companySize1: Granite.I18n.get("requiredDropdownFieldErrorMsg", ["{1}"]),

				phone: {
					//required: Granite.I18n.get("requiredTextFieldErrorMsg", ["{1}"])
					//nameCheck: "Please enter valid phone number"
				},
				title: {
					//required: Granite.I18n.get("requiredTextFieldErrorMsg", ["{1}"])
				}

			},
			// Make sure the form is submitted to the destination defined
			// in the "action" attribute of the form when valid
			submitHandler: function submitHandler(form) {
				//form.submit();
				$("#formSubmitButton").attr("disabled", true);
				$.ajax({
					type: 'POST',
					url: $(form).attr("action"),
					data: $(form).serialize(),
					success: function success(jsonResponse) {
						if (jsonResponse.status != undefined && jsonResponse.status === 'SUCCESS') {
							if (typeof _satellite !== 'undefined') {
								digitalData.page.category.pageType = $("#formType").val() + ' Success';
								_satellite.track('aem_form_success');
							}
							var thankyoupagepath = $(form).attr("data-thankyoupagepath");
							if (typeof thankyoupagepath == 'undefined' || thankyoupagepath === '') {
								var thankyoupage = window.location.pathname.substring(0, window.location.pathname.indexOf(".html")) + "/thankyou.html";
								window.location.href = thankyoupage;
							} else {
								if (thankyoupagepath.indexOf("http") == 0) {
									window.location.href = thankyoupagepath;
								} else if (thankyoupagepath.indexOf("/") == 0) {
									window.location.pathname = thankyoupagepath;
								}
							}
						} else if (jsonResponse.status != undefined && jsonResponse.status === 'FAILED') {
							$("#formSubmitButton").attr("disabled", false);
							if (typeof _satellite !== 'undefined') {
								digitalData.page.category.pageType = $("#formType").val() + ' Error';
								_satellite.track('aem_form_error');
							}

							var errorFields = jsonResponse.errorFields;
							$.each(errorFields, function (index, value) {
								//console.log('My array has at position ' + index + ', this value: ' + value);

								/*var emailAddressErrorMsg = Granite.I18n.get("businessEmailErrorMsg", [FieldConstants.webformBusinessEmail]);
								var firstNameErrorMsg = Granite.I18n.get("validFieldErrorMsg", [FieldConstants.webformFirstName]);
								var lastNameErrorMsg = Granite.I18n.get("validFieldErrorMsg", [FieldConstants.webformLastName]);
								var companyErrorMsg = Granite.I18n.get("validFieldErrorMsg", [FieldConstants.webformCompanyName]);
								var countryErrorMsg = Granite.I18n.get("requiredDropdownFieldErrorMsg", [FieldConstants.webformCountry]);
								var proviceErrorMsg = Granite.I18n.get("requiredDropdownFieldErrorMsg", [FieldConstants.webformProvince]);
								var stateErrorMsg = Granite.I18n.get("requiredDropdownFieldErrorMsg", [FieldConstants.webformState]);
								var cityErrorMsg = Granite.I18n.get("validFieldErrorMsg", [FieldConstants.webformCity]);
								var phoneErrorMsg = Granite.I18n.get("validFieldErrorMsg", [FieldConstants.webformBusinessPhone]);
								var companySizeErrorMsg = Granite.I18n.get("requiredDropdownFieldErrorMsg", [FieldConstants.webformCompanySize]);
								var jobTitleErrorMsg = Granite.I18n.get("validFieldErrorMsg", [FieldConstants.webformJobTitle]);*/

								switch (value) {
									case "emailAddress":
										validator.showErrors({
											emailAddress: emailAddressErrorMsg
										});break;
									case "firstName":
										validator.showErrors({
											firstName: firstNameErrorMsg
										});break;
									case "lastName":
										validator.showErrors({
											lastName: lastNameErrorMsg
										});break;
									case "company":
										validator.showErrors({
											company: companyErrorMsg
										});break;
									case "country":
										validator.showErrors({
											country: countryErrorMsg
										});break;
									case "webFormStateCA":
										validator.showErrors({
											webFormStateCA: proviceErrorMsg
										});$("#ca_state").show();break;
									case "webFormStateUS":
										validator.showErrors({
											webFormStateUS: stateErrorMsg
										});$("#us_state").show();break;
									case "city":
										validator.showErrors({
											city: cityErrorMsg
										});break;
									case "phone":
										validator.showErrors({
											phone: phoneErrorMsg
										});break;
									case "companySize1":
										validator.showErrors({
											companySize1: companySizeErrorMsg
										});break;
									case "title":
										validator.showErrors({
											title: jobTitleErrorMsg
										});break;
									case "invalid":
										validator.showErrors({
											genericErrorMessage: "Invalid form submission. Please try again."
										});break;
								}
							});
						} else {
							$("#formSubmitButton").attr("disabled", false);
							validator.showErrors({
								genericErrorMessage: "Invalid form submission. Please try again."
							});
						}
					},
					error: function error(jsonResponse) {
						//To do: enable submit button
						$("#formSubmitButton").attr("disabled", false);
						validator.showErrors({
							genericErrorMessage: "Invalid form submission. Please try again."
						});
						// display message
					}
				});
			}
		});
		//$.validator.messages.required = "";
		//$.validator.messages.email = "";
	}
};

$.validator.addMethod("nameCheck", function (value, element) {
	return this.optional(element) || !/(\~|\`|\!|\@|\#|\$|\%|\^|\*|\)|\(|\_|\\|\-|\+|\=|\{|\}|\||\\|\:|\;|\<|\>|\?|\/)+/.test(value);
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../../node_modules/jquery-validation/dist/jquery.validate.min":94}],5:[function(require,module,exports){
'use strict';

/**
*
* This file was generated. To edit the contents edit the
* .ironrc file for your project.
*
*/

require('./../../components/podcasts');
require('./../../components/mosaicHeadline');
require('./../../components/synopsysSearch');
require('./../../components/protocolListFilter');
require('./../../components/anchor');
require('./../../components/dataSheetDetail');
require('./../../components/dataSheets');
require('./../../components/dataEntry');
require('./../../components/htmlTextOnly');
require('./../../components/twitterAccountsForm');
require('./../../components/tweet');
require('./../../components/contactUs');
require('./../../components/mosaiccardrte');
require('./../../components/richtexteditor');
require('./../../components/navLeftMobile');
require('./../../components/pageList');
require('./../../components/boxLinkContainer');
require('./../../components/googleMap');
require('./../../components/socialLinks');
require('./../../components/filter');
require('./../../components/imageTextCta');
require('./../../components/boxLink');
require('./../../components/contact');
require('./../../components/featuredImageTextLinks');
require('./../../components/imageAndLinks');
require('./../../components/railContainer');
require('./../../components/railCard');
require('./../../components/quote');
require('./../../components/navList');
require('./../../components/factoid');
require('./../../components/mosaicContainerD');
require('./../../components/mosaicContainerC');
require('./../../components/mosaicContainerB');
require('./../../components/mosaicContainerA');
require('./../../components/mosaicCardSplitColor');
require('./../../components/mosaicCardVideoImage');
require('./../../components/mosaicCardColor');
require('./../../components/mosaicCardFullImage');
require('./../../components/video');
require('./../../components/navRight');
require('./../../components/navLeft');
require('./../../components/navTop');
require('./../../components/contentType');
require('./../../components/search');
require('./../../components/breadcrumb');
require('./../../components/flag');
require('./../../components/cardB');
require('./../../components/text');
require('./../../components/column');
require('./../../components/textImage2Column');
require('./../../components/pressRelease');
require('./../../components/html');
require('./../../components/downloads');
require('./../../components/stockPrice');
require('./../../components/pagecontainer');
require('./../../components/pagetitle');
require('./../../components/button');
require('./../../components/flexbox');
require('./../../components/siteFooter');
require('./../../components/background');
require('./../../components/image');
require('./../../components/banner');
require('./../../components/cardContainer');
require('./../../components/cardA');
require('./../../components/textList');
require('./../../components/callToAction');
require('./../../components/bsimmFooter');
require('./../../components/bsimmTopNav');
require('./../../components/bsimmSubNav');
require('./../../components/bsimmNavList');
require('./../../components/util');
require('./../../components/floatingTabs');
require('./../../components/contentCarousel');
require('./../../components/sigShortForm');
require('./../../components/formsContainer');
require('./../../components/sigShortFormB');
require('./../../components/bdHighPriorityForm');
require('./../../components/bdMediumPriorityForm');
require('./../../components/siteFooterChinese');

},{"./../../components/anchor":8,"./../../components/background":9,"./../../components/banner":10,"./../../components/bdHighPriorityForm":11,"./../../components/bdMediumPriorityForm":12,"./../../components/boxLink":13,"./../../components/boxLinkContainer":14,"./../../components/breadcrumb":15,"./../../components/bsimmFooter":16,"./../../components/bsimmNavList":17,"./../../components/bsimmSubNav":18,"./../../components/bsimmTopNav":19,"./../../components/button":20,"./../../components/callToAction":21,"./../../components/cardA":22,"./../../components/cardB":23,"./../../components/cardContainer":24,"./../../components/column":25,"./../../components/contact":26,"./../../components/contactUs":27,"./../../components/contentCarousel":28,"./../../components/contentType":29,"./../../components/dataEntry":30,"./../../components/dataSheetDetail":31,"./../../components/dataSheets":32,"./../../components/downloads":33,"./../../components/factoid":34,"./../../components/featuredImageTextLinks":35,"./../../components/filter":36,"./../../components/flag":37,"./../../components/flexbox":38,"./../../components/floatingTabs":39,"./../../components/formsContainer":40,"./../../components/googleMap":42,"./../../components/html":43,"./../../components/htmlTextOnly":44,"./../../components/image":45,"./../../components/imageAndLinks":46,"./../../components/imageTextCta":47,"./../../components/mosaicCardColor":48,"./../../components/mosaicCardFullImage":49,"./../../components/mosaicCardSplitColor":50,"./../../components/mosaicCardVideoImage":51,"./../../components/mosaicContainerA":52,"./../../components/mosaicContainerB":53,"./../../components/mosaicContainerC":54,"./../../components/mosaicContainerD":55,"./../../components/mosaicHeadline":56,"./../../components/mosaiccardrte":57,"./../../components/navLeft":58,"./../../components/navLeftMobile":59,"./../../components/navList":60,"./../../components/navRight":61,"./../../components/navTop":62,"./../../components/pageList":63,"./../../components/pagecontainer":64,"./../../components/pagetitle":65,"./../../components/podcasts":66,"./../../components/pressRelease":67,"./../../components/protocolListFilter":68,"./../../components/quote":69,"./../../components/railCard":70,"./../../components/railContainer":71,"./../../components/richtexteditor":72,"./../../components/search":73,"./../../components/sigShortForm":74,"./../../components/sigShortFormB":75,"./../../components/siteFooter":76,"./../../components/siteFooterChinese":77,"./../../components/socialLinks":78,"./../../components/stockPrice":79,"./../../components/synopsysSearch":80,"./../../components/text":81,"./../../components/textImage2Column":82,"./../../components/textList":83,"./../../components/tweet":84,"./../../components/twitterAccountsForm":85,"./../../components/util":86,"./../../components/video":91}],6:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for pagelibs
 */

// App scripts

// NPM modules
var bootstrap = require('../../node_modules/bootstrap-sass');

// Custom Base Scripts
var polyfills = require('../pagelibs/js/custom-polyfills.js');

// Utility helper Scripts
require('../pagelibs/js/utilities.js');

// Owl Carousel
require('../../node_modules/owl.carousel/dist/owl.carousel');

// Vendor Scripts
var polyfills = require('../vendor/polyfills/polyfill-fixedsticky.js');

// Component Scripts
var components = require('./pagelibs.components');
var globalComponent = require('../../components/global');

globalComponent.init(components);

var pageSigSearch = require('../pagelibs/js/pageSigSearch.js');

},{"../../components/global":41,"../../node_modules/bootstrap-sass":93,"../../node_modules/owl.carousel/dist/owl.carousel":96,"../pagelibs/js/custom-polyfills.js":1,"../pagelibs/js/pageSigSearch.js":2,"../pagelibs/js/utilities.js":3,"../vendor/polyfills/polyfill-fixedsticky.js":7,"./pagelibs.components":5}],7:[function(require,module,exports){
'use strict';

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

;
(function (win, $) {

    function featureTest(property, value, noPrefixes) {
        // Thanks Modernizr! https://github.com/phistuck/Modernizr/commit/3fb7217f5f8274e2f11fe6cfeda7cfaf9948a1f5
        var prop = property + ':',
            el = document.createElement('test'),
            mStyle = el.style;

        if (!noPrefixes) {
            mStyle.cssText = prop + ['-webkit-', '-moz-', '-ms-', '-o-', ''].join(value + ';' + prop) + value + ';';
        } else {
            mStyle.cssText = prop + value;
        }
        return mStyle[property].indexOf(value) !== -1;
    }

    function getPx(unit) {
        return parseInt(unit, 10) || 0;
    }

    var uniqueIdCounter = 0;

    var S = {
        classes: {
            plugin: 'fixedsticky',
            active: 'fixedsticky-on',
            inactive: 'fixedsticky-off',
            clone: 'fixedsticky-dummy',
            withoutFixedFixed: 'fixedsticky-withoutfixedfixed'
        },
        keys: {
            offset: 'fixedStickyOffset',
            position: 'fixedStickyPosition',
            id: 'fixedStickyId'
        },
        tests: {
            sticky: featureTest('position', 'sticky'),
            fixed: featureTest('position', 'fixed', true)
        },
        // Thanks jQuery!
        getScrollTop: function getScrollTop() {
            var prop = 'pageYOffset',
                method = 'scrollTop';
            return win ? prop in win ? win[prop] : win.document.documentElement[method] : win.document.body[method];
        },
        bypass: function bypass() {
            // Check native sticky, check fixed and if fixed-fixed is also included on the page and is supported
            return S.tests.sticky && !S.optOut || !S.tests.fixed || win.FixedFixed && !$(win.document.documentElement).hasClass('fixed-supported');
        },
        update: function update(el) {
            if (!el.offsetWidth) {
                return;
            }

            var $el = $(el),
                height = $el.outerHeight(),
                initialOffset = $el.data(S.keys.offset),
                scroll = S.getScrollTop(),
                isAlreadyOn = $el.is('.' + S.classes.active),
                toggle = function toggle(turnOn) {
                $el[turnOn ? 'addClass' : 'removeClass'](S.classes.active)[!turnOn ? 'addClass' : 'removeClass'](S.classes.inactive);
            },
                viewportHeight = $(window).height(),
                position = $el.data(S.keys.position),
                skipSettingToFixed,
                elTop,
                elBottom,
                $parent = $el.parent(),
                parentOffset = $parent.offset().top,
                parentHeight = $parent.outerHeight();

            if (initialOffset === undefined) {
                initialOffset = $el.offset().top;
                $el.data(S.keys.offset, initialOffset);
                $el.after($('<div>').addClass(S.classes.clone).height(height));
            }

            if (!position) {
                // Some browsers require fixed/absolute to report accurate top/left values.
                skipSettingToFixed = $el.css('top') !== 'auto' || $el.css('bottom') !== 'auto';

                if (!skipSettingToFixed) {
                    $el.css('position', 'fixed');
                }

                position = {
                    top: $el.css('top') !== 'auto',
                    bottom: $el.css('bottom') !== 'auto'
                };

                if (!skipSettingToFixed) {
                    $el.css('position', '');
                }

                $el.data(S.keys.position, position);
            }

            function isFixedToTop() {
                var offsetTop = scroll + elTop;

                // Initial Offset Top
                return initialOffset < offsetTop &&
                // Container Bottom
                offsetTop + height <= parentOffset + parentHeight;
            }

            function isFixedToBottom() {
                // Initial Offset Top + Height
                return initialOffset + (height || 0) > scroll + viewportHeight - elBottom &&
                // Container Top
                scroll + viewportHeight - elBottom >= parentOffset + (height || 0);
            }

            elTop = getPx($el.css('top'));
            elBottom = getPx($el.css('bottom'));

            if (position.top && isFixedToTop() || position.bottom && isFixedToBottom()) {
                if (!isAlreadyOn) {
                    toggle(true);
                }
            } else {
                if (isAlreadyOn) {
                    toggle(false);
                }
            }
        },
        destroy: function destroy(el) {
            var $el = $(el);
            if (S.bypass()) {
                return $el;
            }

            return $el.each(function () {
                var $this = $(this);
                var id = $this.data(S.keys.id);
                $(win).unbind('.fixedsticky' + id);

                $this.removeData([S.keys.offset, S.keys.position, S.keys.id]).removeClass(S.classes.active).removeClass(S.classes.inactive).next('.' + S.classes.clone).remove();
            });
        },
        init: function init(el) {
            var $el = $(el);

            if (S.bypass()) {
                return $el;
            }

            return $el.each(function () {
                var _this = this;
                var id = uniqueIdCounter++;
                $(this).data(S.keys.id, id);

                $(win).bind('scroll.fixedsticky' + id, function () {
                    S.update(_this);
                }).trigger('scroll.fixedsticky' + id);

                $(win).bind('resize.fixedsticky' + id, function () {
                    if ($el.is('.' + S.classes.active)) {
                        S.update(_this);
                    }
                });
            });
        }
    };

    win.FixedSticky = S;

    // Plugin
    $.fn.fixedsticky = function (method) {
        if (typeof S[method] === 'function') {
            return S[method].call(S, this);
        } else if ((typeof method === 'undefined' ? 'undefined' : _typeof(method)) === 'object' || !method) {
            return S.init.call(S, this);
        } else {
            throw new Error('Method `' + method + '` does not exist on jQuery.fixedsticky');
        }
    };

    // Add fallback when fixed-fixed is not available.
    if (!win.FixedFixed) {
        $(win.document.documentElement).addClass(S.classes.withoutFixedFixed);
    }
})(window, jQuery);

},{}],8:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for anchor
 */

var anchor = function anchor() {};

module.exports = anchor;

},{}],9:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for background
 */

var background = function background() {};

module.exports = background;

},{}],10:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for banner
 */

var banner = function banner() {};

module.exports = banner;

$(function () {
    var $banner = $('.component-banner');
    var $window = $(window);
    var breakpointMobile = 730;
    var breakpointDesktopLarge = 1600;

    $banner.each(function () {
        var $this = $(this);
        var $textWrapper = $this.find('.text-wrapper');
        var $bannerImg = $this.find('.banner-img');
        var $img = $bannerImg.find('.component-image img');
        var textWrapperHeight = $textWrapper.innerHeight();
        var imgHeight = $img.innerHeight();

        // Mobile only adjustment
        if ($window.width() < breakpointMobile) {
            if (textWrapperHeight > imgHeight) {
                $img.css('height', textWrapperHeight);
            }
        }

        $window.resize(function () {
            $img.css('height', '');
            textWrapperHeight = $textWrapper.innerHeight();
            imgHeight = $img.innerHeight();

            // Mobile only adjustment
            if ($window.width() < breakpointMobile) {
                if (textWrapperHeight > imgHeight) {
                    $img.css('height', textWrapperHeight);
                }
            } else {
                $img.css('height', '');
            }
        });
    });
});

},{}],11:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for bdHighPriorityForm
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);
var webforms_global = require('../../client-libraries/pagelibs/js/webforms-global');
// module.exports = [publish public functions here];

if ($('.component-bd-high-priorityform').length) {
	$(function () {
		init();
	});
}

function init() {
	//log.trace('Initializing SigShortFormB');
	$(document).ready(function () {
		webforms_global.validateMandatoryFields("#form_container");
		//$("#wft").val(Math.round((new Date()).getTime()));
		webforms_global.showHideStateDD($("#webFormCountry"));
		webforms_global.showHideGDPRConsent($("#webFormCountry"));
	});

	$("#webFormCountry").change(function () {
		webforms_global.showHideStateDD(this);
		webforms_global.showHideGDPRConsent(this);
	});

	$("#webFormSaveProfile").click(function () {
		webforms_global.udpateGDPRConsent(this);
	});

	//Populate campaign variables
	var campaign = webforms_global.getUrlParam("cmp");
	var utm_source = webforms_global.getUrlParam("utm_source");
	var utm_medium = webforms_global.getUrlParam("utm_medium");

	//Populate from s_campaign cookie value if available
	if (campaign == 'undefined' || campaign === '') {
		campaign = webforms_global.getCookie('s_campaign');
	}

	$("#hidden_campaignid").val(campaign);
	$("#hidden_campaignsource").val(utm_source);
	$("#hidden_campaignmedium").val(utm_medium);
	$("#field16").val(window.location.href); //pass the current page url in the hidden_landingpageURL field
	$("#elqCustomerGUID").val(webforms_global.getElqCookieSubValue('ELOQUA', 'GUID'));
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../client-libraries/pagelibs/js/webforms-global":4}],12:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for bdMediumPriorityForm
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);
var webforms_global = require('../../client-libraries/pagelibs/js/webforms-global');
// module.exports = [publish public functions here];

if ($('.component-bd-medium-priorityform').length) {
	$(function () {
		init();
	});
}

function init() {
	//log.trace('Initializing SigShortFormB');
	$(document).ready(function () {
		webforms_global.validateMandatoryFields("#form_container");
		//$("#wft").val(Math.round((new Date()).getTime()));
		webforms_global.showHideStateDD($("#webFormCountry"));
		webforms_global.showHideGDPRConsent($("#webFormCountry"));
	});

	$("#webFormCountry").change(function () {
		webforms_global.showHideStateDD(this);
		webforms_global.showHideGDPRConsent(this);
	});

	$("#webFormSaveProfile").click(function () {
		webforms_global.udpateGDPRConsent(this);
	});

	//Populate campaign variables
	var campaign = webforms_global.getUrlParam("cmp");
	var utm_source = webforms_global.getUrlParam("utm_source");
	var utm_medium = webforms_global.getUrlParam("utm_medium");

	//Populate from s_campaign cookie value if available
	if (campaign == 'undefined' || campaign === '') {
		campaign = webforms_global.getCookie('s_campaign');
	}

	$("#hidden_campaignid").val(campaign);
	$("#hidden_campaignsource").val(utm_source);
	$("#hidden_campaignmedium").val(utm_medium);
	$("#field16").val(window.location.href); //pass the current page url in the hidden_landingpageURL field
	$("#elqCustomerGUID").val(webforms_global.getElqCookieSubValue('ELOQUA', 'GUID'));
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../client-libraries/pagelibs/js/webforms-global":4}],13:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for boxLink
 */

var boxLink = function boxLink() {};

$(function () {
  var $boxLink = $('.component-boxLink');
  $boxLink.each(function () {
    var $this = $(this);

    $this.on('touchend', function (e) {
      var $target = $(e.target);
      // Ignore CTA click
      if ($target.parents('a').length > 0 || $target.is('a')) {
        var href = $target.attr('href');
        if (href) {
          window.location = href;
        }
        return;
      }

      var $firstUl = $this.find('ul').first();
      $firstUl.toggleClass("showMenu");
    });

    $this.hover(function () {
      var $firstUl = $this.find('ul').first();
      $firstUl.addClass("showMenu");
    }, function () {
      var $firstUl = $this.find('ul').first();
      $firstUl.removeClass("showMenu");
    });
  });
});

module.exports = boxLink;

},{}],14:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for boxLinkContainer
 */

var boxLinkContainer = function boxLinkContainer() {};

module.exports = boxLinkContainer;

},{}],15:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for breadcrumb
 */

var breadcrumb = function breadcrumb() {};

$(function () {

  $('.component-breadcrumb').each(function () {

    var $breadcrumb = $(this);
    var $dropdownArrow = $breadcrumb.find('.icon-dropdown-arrow');

    $breadcrumb.find('#primary_nav_wrap ul li').hover(function () {
      $(this).find('ul').addClass('active');
    }, function () {
      $(this).find('ul').removeClass('active');
    });

    $(this).find("#primary_nav_wrap ul li a").on('touchend', function (e) {
      var href = $(this).attr('href');
      if (href) {
        window.location = href;
      }
    });

    $dropdownArrow.on('touchstart', function (e) {
      var $currDropdown = $(this).next('.dropdown-menu');
      $breadcrumb.find('.dropdown-menu').not($currDropdown).removeClass('active');
      $currDropdown.toggleClass('active');
    });

    $(document).on('touchstart', function (event) {
      var isMenu = $(event.target).closest('.dropdown-menu').length > 0;
      var isArrow = $(event.target).closest('.icon-dropdown-arrow').length > 0;
      if (!isMenu && !isArrow) {
        if ($('.dropdown-menu').hasClass('active')) {
          $('.dropdown-menu').removeClass('active');
        }
      }
    });
  });
});

module.exports = breadcrumb;

},{}],16:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for bsimmFooter
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

// module.exports = [publish public functions here];

if ($('.component-bsimm-footer').length) {
    $(function () {
        init();
    });
}

function init() {
    //log.trace('Initializing BsimmFooter');
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],17:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for bsimmNavList
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

// module.exports = [publish public functions here];

if ($('.component-bsimm-nav-list').length) {
    $(function () {
        init();
    });
}

function init() {
    //log.trace('Initializing BsimmNavList');
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],18:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for bsimmSubNav
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

// module.exports = [publish public functions here];

if ($('.component-bsimm-sub-nav').length) {
    $(function () {
        init();
    });
}

function init() {
    //log.trace('Initializing BsimmSubNav');
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],19:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for bsimmTopNav
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

// module.exports = [publish public functions here];

if ($('.component-bsimm-top-nav').length) {
    $(function () {
        init();
    });
}

function init() {
    //log.trace('Initializing BsimmTopNav');
}

$(document).ready(function () {
    "use strict";

    if ($(this).width() > 768) {
        $('a.down-button').removeClass('current');
        $('.slidedown').removeAttr('style');
    }
    $('a.down-button').bind('click', function () {
        if ($(this).hasClass('current')) {
            $(this).removeClass('current');
            $(this).parent().parent().find('.slidedown').slideUp('slow', function () {
                $(this).closest('.top-bar').removeClass('opened');
            });
            return false;
        } else {
            $(this).addClass('current').closest('.top-bar').addClass('opened');
            $(this).parent().parent().find('.slidedown').slideDown('slow');
            return false;
        }
    });
});

$(function () {
    $(".search_trigger").click(function () {
        $('.search_input').addClass("open");
        setTimeout(function () {
            $('input[name="s"]').focus();
        }, 1000);
    });
    $(".search_close").click(function () {
        $('.search_input').removeClass("open");
    });
    $(".dl-trigger").click(function () {
        $('.dl-menu').toggleClass("dl-menuopen");
        $(".dl-subview").removeClass("dl-subview");
        $(".dl-subviewopen").removeClass("dl-subviewopen");
        $(".dl-submenu-smart").hide();
    });
    $(".gosubmenu").click(function () {
        $(this).parent().children("ul").show();
        $(this).parent().addClass("dl-subview");
        $(this).parent().parent().addClass("dl-subviewopen");
    });
    $(".dl-back").click(function () {
        $(this).parent().hide();
        $(this).parent().parent().removeClass("dl-subview");
        $(this).parent().parent().parent().removeClass("dl-subviewopen");
    });
    if ($(this).width() > 768) {
        $(window).scroll(function () {
            var scroll = $(window).scrollTop();
            if (scroll >= 200) {
                $(".top-bar").addClass("hide-top-bar");
            } else {
                $(".top-bar").removeClass("hide-top-bar");
            }
        });
        $('.ajax_search_results').find('li').hover(function () {
            $(this).addClass('selected');
        }, function () {
            $(this).removeClass('selected');
        });
    };
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],20:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for button
 */

var button = function button() {};

module.exports = button;

$(document).ready(function () {

    var $buttons = $(".component-button");

    for (var i = 0; i < $buttons.length; i++) {
        if ($buttons[i].style.backgroundColor == "rgb(252, 175, 26)" || $buttons[i].style.backgroundColor == "rgb(153, 204, 51)") {
            $buttons[i].className += ' lightButtonRollover';
        } else {
            $buttons[i].className += ' darkButtonRollover';
        }
    }
});

},{}],21:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for callToAction
 */

var callToAction = function callToAction() {};

module.exports = callToAction;

},{}],22:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for cardA
 */

var cardA = function cardA() {
  initCardA();
};

function initCardA() {
  $('.component-card-a').click(function (event) {

    var $target = $(event.target);
    // Ignore CTA click
    if ($target.parents('a').length > 0 || $target.is('a')) {
      return;
    }

    var link = $(this).attr('data-link');
    var newTab = $(this).attr('data-new-tab') === 'true' ? '_blank' : '_self';

    if (link && $(this).hasClass('no-link')) {
      window.open(link, newTab);
    }
  });
}

$(function () {
  initCardA();
});

module.exports = cardA;

},{}],23:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for cardB
 */

var cardB = function cardB() {
  initCardB();
};

function initCardB() {
  $('.component-card-b').click(function (event) {

    var $target = $(event.target);
    // Ignore CTA click
    if ($target.parents('a').length > 0 || $target.is('a')) {
      return;
    }

    var link = $(this).attr('data-link');
    var newTab = $(this).attr('data-new-tab') === 'true' ? '_blank' : '_self';

    if (link && $(this).hasClass('no-link')) {
      window.open(link, newTab);
    }
  });
}

$(function () {
  initCardB();
});

module.exports = cardB;

},{}],24:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for cardContainer
 */

var cardContainer = function cardContainer() {};

module.exports = cardContainer;

},{}],25:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for column
 */

var column = function column() {};

module.exports = column;

},{}],26:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for contact
 */

var contact = function contact() {};

module.exports = contact;

},{}],27:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for contactUs
 */

var contactUs = function contactUs() {};

module.exports = contactUs;

},{}],28:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for contentCarousel
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);
var wcmmode = require('../wcmmode');
var video = require('../video');

// module.exports = [publish public functions here];

var ContentCarousel = function () {

    var carousels;

    function init() {
        cacheElements();
        initializeOwls();
    }

    function cacheElements() {
        carousels = $('.owl-carousel');
    }

    function initializeOwls() {
        carousels.each(function () {
            var carousel = $(this);
            var options = getCarouselDataAttr(carousel);
            carousel.owlCarousel(options);

            video.initPlayers(carousel.find('.cmp-video'));

            // Stop video playback for all non-active slides
            carousel.on('changed.owl.carousel', function (event) {
                var $nonActiveSlides = $(event.target).find('.owl-item').filter(function (index) {
                    return event.item.index != index;
                }).each(function () {
                    var $slide = $(this);
                    var $video = $slide.find('.cmp-video');
                    var playerId = $video.attr('id');
                    var videoPlayer = video.getVideoPlayer(playerId);
                    if (videoPlayer) {
                        videoPlayer.stop();
                    }
                });
            });
        });
    }

    /*
        Note: jQuery .data() method returns attributes in camelCase (Not Hypehated)
        Any new settings for the carousel should be set via data-attributes and manually
        grabbed here and inserted in the initializeOwls() method.
     */
    function getCarouselDataAttr(carousel) {
        var owlOptions = {};

        // Default settings as of 3/1/18
        // If any of these default settings need to be customizable
        // Then remove them from here and grab them via data-attributes.
        owlOptions.items = 1;
        owlOptions.loop = true;
        owlOptions.dots = true;
        owlOptions.dotsEach = 1;
        owlOptions.nav = true;
        owlOptions.navText = ['', ''];
        owlOptions.autoHeight = true;

        // Grabbing settings via data-attributes.
        var attributes = carousel.data();

        // Example of how attributes and options should be loaded and configured:
        //    owlOptions.autoplay = (attributes['owlSpeed'] !== undefined && attributes['owlSpeed'] !== null) ? true : false;
        //    owlOptions.autoplayTimeout = attributes['owlSpeed'];

        return owlOptions;
    }

    // Returning public methods (AKA API)
    return {
        init: init
    };
}();

// Changed to window.load to wait for images to load before intializing the carousel. This is needed to calculate the height correctly.
// This is a known issue: https://github.com/OwlCarousel2/OwlCarousel2/issues/556
// TODO: Update Owl once issue is resolved
$(window).load(function () {
    if ($('.component-content-carousel').length) {
        if (wcmmode.isPublish() || wcmmode.isPreview()) {
            ContentCarousel.init();
        }
    }
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../video":91,"../wcmmode":92}],29:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for contentType
 */

var video = require('../video');
var BasePlayer = require('../video/player');

var contentType = function contentType() {
  var $componentContentType = $('.component-contentType');
  var $contentContainer = $componentContentType.find(".contentContainer");
  var $fullWidthButton = $contentContainer.find(".fullWidthButton");
  var $dropdowns = $componentContentType.find(".dropdown");
  var $dropdownContent = $componentContentType.find('.dropdown-content');
  var $dropdownLinks = $componentContentType.find(".dropdown-content a");
  var $storyTemplate = $componentContentType.find(".templates .template-story").clone();
  var $noResults = $componentContentType.find(".no-results");
  var endpoint = "/bin/contenttypeelement";
  var contentNodePath = $componentContentType.attr("data-content-node-path");
  var filterTags = $componentContentType.attr("data-filter-tags");
  var sorting = $componentContentType.attr("data-sorting");
  var unfilteredElements;
  var filteredElements;
  var showIndex;
  var scrollTop;

  var toggleNoResults = function toggleNoResults() {
    if (filteredElements.length <= 0) {
      var tallest = 0;
      for (var i = 0; i < $dropdownContent.length; i++) {
        var height = $dropdownContent.eq(i).outerHeight();
        if (height > tallest) {
          tallest = height;
        }
      }

      tallest = tallest - 60;
      $noResults.css('height', tallest + 'px');
      $noResults.show();
    } else {
      $noResults.hide();
      $noResults.css('height', 'auto');
    }
  };

  // Removes elements from content container
  var reset = function reset() {
    scrollTop = $(window).scrollTop();
    $contentContainer.children().not(".fullWidthButton").remove();
    $fullWidthButton.show();

    if (filteredElements.length <= 5) {
      $fullWidthButton.hide();
    }

    toggleNoResults();
  };

  // Appends next set of elements to content container
  var buildContent = function buildContent(elements) {
    for (var i = 0; i < elements.length; i++) {
      buildStory($storyTemplate, elements[i]).insertBefore($fullWidthButton);

      var $videos = $fullWidthButton.parent().find('.cmp-video:not([id])');
      video.initPlayers($videos);
    }
    // $(window).scrollTop(scrollTop);
  };

  // Filters elements, sets filteredElements
  var filterElements = function filterElements() {
    // Get all the selected tags
    var dropdownTagIds = [];
    for (var j = 0; j < $dropdowns.length; j++) {
      var $selectedLinks = $dropdowns.eq(j).find(".dropdown-content a.selected");
      var tagIds = [];
      for (var k = 0; k < $selectedLinks.length; k++) {
        var $selectedLink = $selectedLinks.eq(k);
        var tagId = $selectedLink.attr("data-tag-id");
        tagIds.push(tagId);
      }
      dropdownTagIds.push(tagIds);
    }

    // Filter elements based on selected tags
    filteredElements = unfilteredElements.filter(function (element) {
      var valids = [];
      for (var j = 0; j < dropdownTagIds.length; j++) {
        var tagIds = dropdownTagIds[j];
        var valid = false;

        // If no tags were selected for a dropdown, keep it
        if (tagIds.length <= 0) {
          valid = true;
        }

        for (var k = 0; k < tagIds.length; k++) {
          var tagId = tagIds[k];
          var elementTagIds = getTagIds(element.tags);
          // if elements contains a tag within a dropdown, keep it
          if (elementTagIds.indexOf(tagId) > -1) {
            valid = true;
          }
        }
        valids.push(valid);
      }

      var valid = true;

      // AND the dropdowns
      for (var j = 0; j < valids.length; j++) {
        if (!valids[j]) {
          valid = false;
        }
      }

      return valid;
    });
  };

  // Initialize
  $.get(endpoint, {
    contentNode: contentNodePath,
    filterTags: filterTags,
    sorting: sorting
  }).done(function (data) {
    unfilteredElements = JSON.parse(JSON.stringify(data));
    filteredElements = JSON.parse(JSON.stringify(data));

    filterElements();
    reset();

    // Rebuild
    var toBuild = filteredElements.splice(0, 5);
    buildContent(toBuild);
  }).fail(function () {
    // Failed
  });

  // Set click listener for button
  $fullWidthButton.click(function (e) {
    $fullWidthButton.hide();

    var toBuild = filteredElements;
    buildContent(toBuild);

    e.preventDefault();
  });

  // Set click listeners for dropdowns

  $dropdownLinks.click(function (e) {
    var $link = $(this);
    var $links = $link.closest(".dropdown-content").find("a");

    // Handle toggling selected class
    var isAll = $link.index() === 0;
    if (isAll) {
      if ($link.hasClass("selected")) {
        $links.removeClass("selected");
      } else {
        $links.removeClass("selected");
        $link.addClass("selected");
      }
    } else {
      $links.first().removeClass("selected");
      $link.toggleClass("selected");
    }

    filterElements();
    reset();

    // Rebuild
    var toBuild = filteredElements.splice(0, 5);
    buildContent(toBuild);

    e.preventDefault();
  });
};

var buildStory = function buildStory(template, element) {
  var $story = template.clone();
  $story.find(".storyContainer").attr('data-tag-id', getTagIds(element.tags));

  if (element.title) {
    $story.find(".storyContainerRight .title").text(element.title);
  } else {
    $story.find(".storyContainerRight .title").remove();
  }

  if (element.headline) {
    $story.find(".storyContainerRight .headline").text(element.headline);
  } else {
    $story.find(".storyContainerRight .headline").remove();
  }

  if (element.text) {
    $story.find(".storyContainerRight .text").text(element.text);
  } else {
    $story.find(".storyContainerRight .text").remove();
  }

  if (element.ctaText) {
    $story.find(".storyContainerRight a").text(element.ctaText);
    $story.find(".storyContainerRight a").attr("href", element.ctaLink);
    $story.find(".storyContainerRight a").attr("target", element.ctaNewTab === "true" ? "_blank" : "");
  } else {
    $story.find(".storyContainerRight a").remove();
  }

  if (element.mediaType === "image") {
    $story.find(".storyContainerLeft .video-wrapper").remove();
    if (element.thumbnail) {
      $story.find(".storyContainerLeft .img-wrapper img").attr("src", element.thumbnail);
    } else {
      $story.find(".storyContainerLeft").remove();
    }
  } else if (element.mediaType === "video") {
    $story.find(".storyContainerLeft .img-wrapper").remove();

    var videoConfig = {
      videoId: element.videoId,
      thumbnail: element.thumbnail,
      provider: element.provider,
      mode: element.modal === 'true' || element.modal === true ? 'modal' : 'inline'
    };
    var $videoWrapper = $story.find('.storyContainerLeft .video-wrapper');
    var $youtube = $videoWrapper.find('.video-youtube .cmp-video');
    var $limelight = $videoWrapper.find('.video-limelight .cmp-video');
    var $brightcove = $videoWrapper.find('.video-brightcove .cmp-video');

    var playerArr = null;
    if (element.provider === "YouTube") {
      BasePlayer.persistOptions($youtube, videoConfig);
      $limelight.remove();
      $brightcove.remove();
      $videoWrapper.show();
    } else if (element.provider === 'Limelight') {
      BasePlayer.persistOptions($limelight, videoConfig);
      $youtube.remove();
      $brightcove.remove();
      $videoWrapper.show();
    } else if (element.provider === 'Brightcove') {
      BasePlayer.persistOptions($brightcove, videoConfig);
      $youtube.remove();
      $limelight.remove();
      $videoWrapper.show();
    }
  } else {
    $story.find(".storyContainerLeft .img-wrapper").remove();
    $story.find(".storyContainerLeft .video-wrapper").remove();
  }

  return $story.children();
};

var getTagIds = function getTagIds(tags) {
  var tagIds = [];
  for (var i = 0; i < tags.length; i++) {
    var tag = tags[i];
    var tagId = tag.id;
    tagIds.push(tagId);
  }
  return tagIds.join(",");
};

$(function () {
  if ($('.component-contentType').length > 0) {
    contentType();
  }
});

},{"../video":91,"../video/player":87}],30:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for dataEntry
 */

var dataEntry = function dataEntry() {};

module.exports = dataEntry;

},{}],31:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for dataSheetDetail
 */

var dataSheetDetail = function dataSheetDetail() {};

module.exports = dataSheetDetail;

},{}],32:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for dataSheets
 */

var dataSheets = function dataSheets() {};

$(".filterResults").click(function () {
    $("#topRowFilterContainer").toggle();
    $("#topRowProtocolList").toggle();
    $(".filterContainer").toggle("slow", function () {
        // Animation complete.
    });
});

module.exports = dataSheets;

},{}],33:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for download
 */

var download = function download() {};

module.exports = download;

},{}],34:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for factoid
 */

var factoid = function factoid() {};

module.exports = factoid;

},{}],35:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for featuredImageTextLinks
 */

var featuredImageTextLinks = function featuredImageTextLinks() {};

module.exports = featuredImageTextLinks;

},{}],36:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for filter
 */

var filter = function filter() {};

var clearFilters = function clearFilters() {
    $(":checkbox").prop('checked', false);
};

var toggleSubFilters = function toggleSubFilters(element) {
    if (element.className == "checkbox") {
        var parentElement = element.parentElement;
        var subFilter = parentElement.getElementsByClassName("subFilters")[0];
        if (subFilter) {
            var className = subFilter.className;
            if (className == "subFilters") {
                element.parentElement.getElementsByClassName("subFilters")[0].className += " showSubFilters";
            }
            if (className == "subFilters showSubFilters") {
                element.parentElement.getElementsByClassName("subFilters")[0].className = "subFilters hideSubFilters";
            }
            if (className == "subFilters hideSubFilters") {
                element.parentElement.getElementsByClassName("subFilters")[0].className = "subFilters showSubFilters";
            }
        }
    }
};

window.clearFilters = clearFilters;
window.toggleSubFilters = toggleSubFilters;

module.exports = filter;

},{}],37:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for flag
 */

var flag = function flag() {};

module.exports = flag;

},{}],38:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for flexbox
 */

var flexbox = function flexbox() {};

module.exports = flexbox;

},{}],39:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for floatingTabs
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

// module.exports = [publish public functions here];

if ($('.component-floating-tabs').length) {
    $(function () {
        FloatingTabs.init();
    });
}

var FloatingTabs = function ($) {

    var tabComponents, navItems, navAnchors, floatingTabs, mobileTabHeaders, tabBodies;

    function init() {
        cacheElements();
        attachListeners();
    }

    function cacheElements() {
        tabComponents = $('.component-floating-tabs');
        navItems = $('.tab-nav-item');
        navAnchors = $('.tab-nav-item-anchor');
        floatingTabs = $('.floating-tab');
        mobileTabHeaders = $('.floating-tab .tab-header');
        tabBodies = $('.tab-body');
    }

    function attachListeners() {
        attachTabListeners();
        attachAccordionListeners();
        attachOnLoadAnchorListener();
    }

    function attachTabListeners() {
        navItems.each(function (index) {
            var navItemClicked = $(this);
            navItemClicked.on('click', function (event) {
                showTab(navItemClicked);
            });
        });
    }

    function attachAccordionListeners() {
        mobileTabHeaders.each(function () {
            var tabHeader = $(this);
            tabHeader.on('click', function () {
                showTabBody(tabHeader);
            });
        });
    }

    function attachOnLoadAnchorListener() {
        setFirstItemsAsActive();
        $(document).ready(function () {
            var hashId = window.location.hash;
            if (hashId !== null) {
                var navItem = grabNavItem(hashId);
                if (navItem !== null && navItem !== undefined) {
                    showTab(navItem, true);
                }
                var tabHeader = grabTabHeader(hashId);
                if (tabHeader !== null && tabHeader !== undefined) {
                    showTabBody(tabHeader, true);
                }
            }
        });
    }

    function setFirstItemsAsActive() {
        tabComponents.each(function () {
            var firstNavItem = $(this).find('.tab-nav-item-anchor').first();
            var firstFloatingTab = $(this).find('.floating-tab').first();
            var firstFloatingTabBody = $(this).find('.tab-body').first();
            var tabOpenBtn = firstFloatingTabBody.siblings('.tab-header').children('.tab-open');
            var tabCloseBtn = firstFloatingTabBody.siblings('.tab-header').children('.tab-close');
            firstNavItem.addClass('active');
            firstFloatingTab.addClass('active');
            firstFloatingTabBody.addClass('active');
            tabOpenBtn.addClass('hide');
            tabCloseBtn.removeClass('hide');
        });
    }

    function showTab(navItemClicked, onLoad) {
        var anchor = navItemClicked.find('a');
        var anchorHref = anchor.attr('href');
        floatingTabs = navItemClicked.closest('.component-floating-tabs').find('.floating-tab'); // in case multiple components are on a page.
        floatingTabs.each(function (index) {
            var tab = $(this),
                tabId = tab.attr('id'),
                tabBody = tab.find('.tab-body'),
                tabHeader = tab.find('.tab-header'),
                tabOpenBtn = tabBody.siblings('.tab-header').children('.tab-open'),
                tabCloseBtn = tabBody.siblings('.tab-header').children('.tab-close');
            if (tabId === anchorHref) {
                tab.addClass('active');
                tabBody.addClass('active');
                anchor.addClass('active');
                tabOpenBtn.addClass('hide');
                tabCloseBtn.removeClass('hide');
            } else {
                tab.removeClass('active');
                tabBody.removeClass('active');
                tabOpenBtn.removeClass('hide');
                tabCloseBtn.addClass('hide');
            }
        });
        removeActiveStateFromTabs(anchor);
    }

    function showTabBody(tabHeader, onLoad) {
        var tabId = tabHeader.parents('.floating-tab').attr('id'),
            anchorToUpdate = tabHeader.closest('.component-floating-tabs').find('.tabs-nav').find('[href="' + tabId + '"]'),
            tabBodies = tabHeader.closest('.component-floating-tabs').find('.tab-body'); // in case multiple components are on a page.
        tabBodies.each(function () {
            var tabBody = $(this),
                tab = tabBody.parents('.floating-tab'),
                tabHeader = tabBody.siblings('.tab-header'),
                tabOpenBtn = tabBody.siblings('.tab-header').children('.tab-open'),
                tabCloseBtn = tabBody.siblings('.tab-header').children('.tab-close');
            if (tab.attr('id') === tabId) {
                if (onLoad) {
                    tab.addClass('active');
                    tabBody.addClass('active');
                    anchorToUpdate.addClass('active');
                    tabOpenBtn.addClass('hide');
                    tabCloseBtn.removeClass('hide');
                    return;
                }
                tab.toggleClass('active');
                tabBody.toggleClass('active');
                anchorToUpdate.toggleClass('active');
                tabOpenBtn.toggleClass('hide');
                tabCloseBtn.toggleClass('hide');
            } else {
                tab.removeClass('active');
                tabBody.removeClass('active');
                tabOpenBtn.removeClass('hide');
                tabCloseBtn.addClass('hide');
            }
        });
        removeActiveStateFromTabs(anchorToUpdate);
    }

    function removeActiveStateFromTabs(clickedAnchor) {
        var clickedAnchorHref = clickedAnchor.attr('href');
        navItems = clickedAnchor.closest('.component-floating-tabs').find('.tab-nav-item'); // in case multiple components are on a page.
        navItems.each(function () {
            var thisNavItem = $(this),
                anchorAtThisNavItem = thisNavItem.find('a'),
                anchorHrefAtThisNavItem = anchorAtThisNavItem.attr('href');
            if (anchorHrefAtThisNavItem !== clickedAnchorHref) {
                anchorAtThisNavItem.removeClass('active');
            }
        });
    }

    // Helper method used to grab the nav element used for anchoring. (Used for Floating Tabs)
    function grabNavItem(hashId) {
        var itemToReturn;
        navItems.each(function () {
            var navItem = $(this);
            if (navItem.find('a').attr('href') === hashId) {
                itemToReturn = navItem;
            }
        });
        return itemToReturn;
    }

    // Helper method used to grab the tabHeader element used for anchoring. (Used for Accordion)
    function grabTabHeader(hashId) {
        var itemToReturn;
        mobileTabHeaders.each(function () {
            var tabHeader = $(this);
            if (tabHeader.parents('.floating-tab').attr('id') === hashId) {
                itemToReturn = tabHeader;
            }
        });
        return itemToReturn;
    }

    // Returning public methods (AKA API)
    return {
        init: init
    };
}($);

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],40:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for formsContainer
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

// module.exports = [publish public functions here];

if ($('.component-forms-container').length) {
    $(function () {
        init();
    });
}

function init() {
    //log.trace('Initializing FormsContainer');
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],41:[function(require,module,exports){
"use strict";

module.exports = {
    init: function init(components) {}
};

},{}],42:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for googleMap
 */
var googleMap = function googleMap() {};
$('#googlemap').load(function () {
    var windowWidth = window.innerWidth;
    var windowHeight = window.innerHeight;

    if ($('#googlemap').width() >= windowWidth) {
        $('#googlemap').width(windowWidth - 40);
        $('.googleMap').width(windowWidth - 40);
    }
    if ($('#googlemap').height() >= windowHeight) {
        $('#googlemap').height(windowHeight - 40);
        $('.googleMap').height(windowHeight - 40);
    }
});

module.exports = googleMap;

},{}],43:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for html
 */

var html = function html() {};

module.exports = html;

},{}],44:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for htmlTextOnly
 */

var htmlTextOnly = function htmlTextOnly() {};

// style scoped polyfill from: https://github.com/thomaspark/scoper/blob/master/scoper.js
function scoper(css, prefix) {
  var re = new RegExp("([^\r\n,{}]+)(,(?=[^}]*{)|\s*{)", "g");
  css = css.replace(re, function (g0, g1, g2) {

    if (g1.match(/^\s*(@media|@keyframes|to|from|@font-face)/)) {
      return g1 + g2;
    }

    if (g1.match(/:scope/)) {
      g1 = g1.replace(/([^\s]*):scope/, function (h0, h1) {
        if (h1 === "") {
          return "> *";
        } else {
          return "> " + h1;
        }
      });
    }

    g1 = g1.replace(/^(\s*)/, "$1" + prefix + " ");

    return g1 + g2;
  });

  return css;
}

(function () {
  $('.html-text-only-component').each(function () {
    var enablePageCss = $(this)[0].hasAttribute('data-enable-page-css');
    if (!enablePageCss) {
      var $style = $(this).find('style[scoped]');
      var id = '#' + $(this).attr('id');
      var csses = "";

      $style.each(function () {
        var css = $(this).html();
        if (css) {
          csses = csses + scoper(css, id);
        }
        $(this).html(csses);
      });
    }
  });
})();

module.exports = htmlTextOnly;

},{}],45:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for image
 */

var image = function image() {};

module.exports = image;

},{}],46:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for imageAndLinks
 */

var imageAndLinks = function imageAndLinks() {};

module.exports = imageAndLinks;

},{}],47:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for imageTextCta
 */

var imageTextCta = function imageTextCta() {};

module.exports = imageTextCta;

},{}],48:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for mosaicCardColor
 */

function initMosaicCardColor() {
  $('.component-mosaicCardColor').click(function () {

    var link = $(this).attr('data-link');
    var newTab = $(this).attr('data-new-tab') === 'true' ? '_blank' : '_self';

    if (link) {
      window.open(link, newTab);
    }
  });
}

$(function () {
  initMosaicCardColor();
});

var mosaicCardColor = function mosaicCardColor() {};

module.exports = mosaicCardColor;

},{}],49:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for mosaicCardFullImage
 */

function initMosaicCardFullImage() {
  $('.component-mosaicCardFullImage').click(function () {

    var link = $(this).attr('data-link');
    var newTab = $(this).attr('data-new-tab') === 'true' ? '_blank' : '_self';

    if (link) {
      window.open(link, newTab);
    }
  });
}

$(function () {
  initMosaicCardFullImage();
});

var mosaicCardFullImage = function mosaicCardFullImage() {};

module.exports = mosaicCardFullImage;

},{}],50:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for mosaicCardSplitColor
 */

function initMosaicCardSplitColor() {
  $('.component-mosaicCardSplitColor').click(function () {

    var link = $(this).attr('data-link');
    var newTab = $(this).attr('data-new-tab') === 'true' ? '_blank' : '_self';

    if (link) {
      window.open(link, newTab);
    }
  });
}

$(function () {
  initMosaicCardSplitColor();
});

var mosaicCardSplitColor = function mosaicCardSplitColor() {};

module.exports = mosaicCardSplitColor;

},{}],51:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for mosaicCardVideoImage
 */
function initMosaicCardVideoImage() {
  $('.component-mosaicCardVideoImage').click(function () {

    var link = $(this).attr('data-link');
    var newTab = $(this).attr('data-new-tab') === 'true' ? '_blank' : '_self';

    if (link) {
      window.open(link, newTab);
    }
  });
}

$(function () {
  initMosaicCardVideoImage();
});

var mosaicCardVideoImage = function mosaicCardVideoImage() {};

module.exports = mosaicCardVideoImage;

},{}],52:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for mosaicContainerA
 */

var mosaicContainerA = function mosaicContainerA() {};

module.exports = mosaicContainerA;

},{}],53:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for mosaicContainerB
 */

var mosaicContainerB = function mosaicContainerB() {};

module.exports = mosaicContainerB;

},{}],54:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for mosaicContainerC
 */

var mosaicContainerC = function mosaicContainerC() {};

module.exports = mosaicContainerC;

},{}],55:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for mosaicContainerD
 */

var mosaicContainerD = function mosaicContainerD() {};

module.exports = mosaicContainerD;

},{}],56:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for mosaicHeadline
 */

var mosaicHeadline = function mosaicHeadline() {};

function initMosaicHeadline() {
  $('.component-mosaicHeadline').click(function () {

    var link = $(this).attr('data-link');
    var newTab = $(this).attr('data-new-tab') === 'true' ? '_blank' : '_self';

    if (link) {
      window.open(link, newTab);
    }
  });
}

$(function () {
  var $mosaicHeadline = $('.component-mosaicHeadline');
  $mosaicHeadline.each(function () {
    var $this = $(this);
    var endpoint = "/bin/prnewsfeed";
    //var numReleases = $(this).attr('data-num-releases');
    var headlinepriority = $(this).attr('data-headlinepriority');
    var displayNewsDate = $(this).attr('data-displaynewsdate');

    /*        if (numReleases) {
              //endpoint = endpoint + numReleases;
    */
    // Initialize
    $.get(endpoint, {}).done(function (data) {
      //data.sort(SortByDateDesc);
      var item = data[headlinepriority];
      console.debug(item);
      $this.find(".component-text p").text(item['title']);
      $this.attr('data-text', item['title']);
      if (item['link'] && item['link'] != '') {
        $this.attr('data-link', item['link']);
      }
      if (displayNewsDate && displayNewsDate == 'true') {
        $this.find(".component-text div.footerText").text(item['formattedPubDate']);
      }
      initMosaicHeadline();
    }).fail(function () {
      // Failed
    });
    //}
  });
});

//Sort by descending order - not used anywhere
function SortByDateDesc(x, y) {
  return new Date(x.pubDate).getTime() == new Date(y.pubDate).getTime() ? 0 : new Date(x.pubDate).getTime() < new Date(y.pubDate).getTime() ? 1 : -1;
}
module.exports = mosaicHeadline;

},{}],57:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for mosaiccardrte
 */

function initMosaicCardRte() {
  $('.component-mosaicCardRTEComponent').click(function (event) {

    var link = $(this).attr('data-link');
    var newTab = $(this).attr('data-new-tab') === 'true' ? '_blank' : '_self';

    if (link) {
      window.open(link, newTab);
    }
  });

  $('.component-mosaicCardRTEComponent a').click(function (event) {
    event.stopImmediatePropagation();
  });
}

$(function () {
  initMosaicCardRte();
});

var mosaiccardrte = function mosaiccardrte() {};

module.exports = mosaiccardrte;

},{}],58:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for navLeft
 */

var navLeft = function navLeft() {};

module.exports = navLeft;

},{}],59:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for navLeftMobile
 */

var navLeftMobile = function navLeftMobile() {};

module.exports = navLeftMobile;

},{}],60:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for navList
 */

var navList = function navList() {};

module.exports = navList;

},{}],61:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for navRight
 */

var navRight = function navRight() {};

module.exports = navRight;

},{}],62:[function(require,module,exports){
"use strict";

/**
 *  This is a placeholder. Code lives under etc/clientlibs/synopsys/synopsys-headlibs/js/navTop.js to make sure it's
 *  executed early on during pag load
 */

var navTop = function navTop() {};

$(function () {
  navTop();
});

module.exports = navTop;

},{}],63:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for pageList
 */

var pageList = function pageList() {};
$(document).ready(function () {
    $('ul.pageLinks li').on('mouseover', function () {
        var dropdown = $(this).next();
        if (dropdown.hasClass('pageLink-dropdown')) {

            // Calculate the position of the dropdown
            var position = $(this).position();
            var top = position.top + 30;
            var left = position.left;
            dropdown.css({
                'top': top + 'px',
                'left': left + 'px'
            });
            dropdown.show();
            $(this).addClass('active');
        }
    }).on('mouseout', function () {
        var dropdown = $(this).next();
        if (dropdown.hasClass('pageLink-dropdown')) {
            if (!dropdown.is(':hover')) {
                dropdown.hide();
                $(this).removeClass('active');
            }
        }
    });

    $('.pageLink-dropdown').on('mouseleave', function () {
        $(this).hide();
        $(this).prev().removeClass('active');
    });
});

module.exports = pageList;

},{}],64:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for pagecontainer
 */

var pagecontainer = function pagecontainer() {};

module.exports = pagecontainer;

},{}],65:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for pagetitle
 */

var pagetitle = function pagetitle() {};

module.exports = pagetitle;

},{}],66:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for podcasts
 */
var podcasts = function podcasts($this) {

	var index = 0;
	var $podcastFeed;

	var desktopElem = '<div class="row">' + '<div class="podcasts-item left-item">' + '<div class="component-text title"><b><a href=""></a></b></div>' + '<div class="component-text date"><p></p></div>' + '<div class="component-text description">' + '<p></p>' + '</div>' + '</div>';

	var endpoint = "/bin/podcastsfeed?podCastType=";
	var numReleases = $this.attr('data-num-podcasts');
	var $list = $this.find('.podcasts-list');
	var path = $this.attr('data-base-path');
	var button = $this.find('.fullWidthButton');
	var podcastType = $this.attr('id');
	var feedEndpointURL = $this.attr('data-feed-endpoint-url');
	var linkText = $this.attr('data-link-text') == undefined ? ' ' : $this.attr('data-link-text');

	if (numReleases) {
		endpoint = endpoint + podcastType + "&feedEndpointURL=" + feedEndpointURL + "/?r=" + Math.floor(Math.random() * 1000000 + 1); //appending random 6 digit number

		// Initialize
		$.get(endpoint, {}).done(function (data) {
			var noOfFeedsToShow = 0;
			$podcastFeed = data;
			var resLength = data.length;
			if (resLength > numReleases) {
				noOfFeedsToShow = numReleases;
			} else {
				button.hide();
				noOfFeedsToShow = resLength;
			}
			index = 0;
			processResults(index, noOfFeedsToShow);
		}).fail(function () {
			// Failed
		});
	}

	var processResults = function processResults(index, noOfFeedsToShow) {
		for (index; index < noOfFeedsToShow; index++) {
			var item = $podcastFeed[index];
			var leftItem = $podcastFeed[index];
			var $desktopElem = $($.parseHTML(desktopElem));

			if (podcastType == "lime-light-feed") {
				if (leftItem) {
					var link = path + '/' + leftItem['pageName'] + '.html';
					$desktopElem.find('.left-item .title a').text(leftItem['title']);
					$desktopElem.find('.left-item .title a').attr('href', link);
					$desktopElem.find('.left-item .date p').text(leftItem['formattedPubDate']);
					$desktopElem.find('.left-item .description p').text(leftItem['description']).append("&nbsp;&nbsp;<a href=''><strong>" + linkText + "</strong></a>");
					$desktopElem.find('.left-item .description p>a').attr('href', link);
				}
			}
			$list.append($desktopElem);
		}
	};
	var currentFeedsIndex = 0;
	var nextFeedsLength = 0;
	$(button).click(function (e) {
		currentFeedsIndex = parseInt(currentFeedsIndex) + parseInt(numReleases);
		nextFeedsLength = parseInt(currentFeedsIndex) + parseInt(numReleases);
		if ($podcastFeed.length < nextFeedsLength) {
			button.hide();
			nextFeedsLength = $podcastFeed.length;
		}

		processResults(currentFeedsIndex, nextFeedsLength);
	});
};

var podcastsAsRightrail = function podcastsAsRightrail($this) {

	var index = 0;
	var $podcastAsRightrailFeed;

	var componentTextElem = '<div class="component-text"></div>';
	var paragraphTextElem = '<p></p>';
	var newSpanElement = '<span class="label-new">NEW </span>';

	var endpoint = "/bin/podcastsfeed?podCastType=";
	var numReleases = $this.attr('data-num-podcasts');
	var $rightRailList = $this.find('.rightrailitems-list');
	var podcastType = $this.attr('id');
	var feedEndpointURL = $this.attr('data-feed-endpoint-url');

	if (numReleases) {
		endpoint = endpoint + podcastType + "&feedEndpointURL=" + feedEndpointURL + "/?r=" + Math.floor(Math.random() * 1000000 + 1); //appending random 6 digit number

		// Initialize
		$.get(endpoint, {}).done(function (data) {
			var noOfFeedsToShow = 0;
			$podcastAsRightrailFeed = data;
			var resLength = data.length;
			if (resLength > numReleases) {
				noOfFeedsToShow = numReleases;
			} else {
				noOfFeedsToShow = resLength;
			}
			index = 0;
			processResults(index, noOfFeedsToShow);
		}).fail(function () {
			// Failed
		});
	}

	var processResults = function processResults(index, noOfFeedsToShow) {
		var $componentTextElem = $($.parseHTML(componentTextElem));
		for (index; index < noOfFeedsToShow; index++) {
			var $paragraphTextElem = $($.parseHTML(paragraphTextElem));
			var item = $podcastAsRightrailFeed[index];
			if (item) {
				var feedAge = parseInt(item['feedAge']);
				if (feedAge < 30) {
					$paragraphTextElem.append("<a href=''>" + newSpanElement + item['title'] + "</a>");
				} else {
					$paragraphTextElem.append("<a href=''>" + item['title'] + "</a>");
				}
				$paragraphTextElem.find('a').attr('href', item['link']).attr('target', '_blank');
			}
			$componentTextElem.append($paragraphTextElem);
		}
		$rightRailList.append($componentTextElem);
	};
};

$(function () {
	var $podcastComponent = $('.component-podcasts');
	$podcastComponent.each(function () {
		podcasts($(this));
	});

	var $podcastsAsRightrailComponent = $('.podcast-rightrail');
	$podcastsAsRightrailComponent.each(function () {
		podcastsAsRightrail($(this));
	});
});

module.exports = podcasts;

},{}],67:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for pressRelease
 */

var pressRelease = function pressRelease() {};

$(function () {
  var desktopElem = '<div class="row">' + '<div class="col-xs-12 col-sm-6 press-release-col left-item">' + '<div class="press-release-item">' + '<div class="component-text date"></div>' + '<div class="component-text title"><a href=""></a></div>' + '<div class="component-text description">' + '<p></p>' + '</div>' + '</div>' + '</div>' + '<div>' + '<div class="col-xs-12 col-sm-6 visible-sm visible-md visible-lg press-release-col right-item">' + '<div class="press-release-item">' + '<div class="component-text date"></div>' + '<div class="component-text title"><a href=""></a></div>' + '<div class="component-text description">' + '<p></p>' + '</div>' + '</div>' + '</div>' + '</div>';
  var mobileElem = '<div class="row visible-xs">' + '<div class="col-xs-12 press-release-col">' + '<div class="press-release-item">' + '<div class="component-text date"></div>' + '<div class="component-text title"><a href=""></a></div>' + '<div class="component-text description">' + '<p></p>' + '</div>' + '</div>' + '</div>' + '</div>';

  var $pressRelease = $('.component-press-release');

  $pressRelease.each(function () {
    var $this = $(this);
    var endpoint = "/bin/pressrelease?numReleases=";
    var numReleases = $(this).attr('data-num-releases');
    var $list = $(this).find('.press-release-list');
    var mobileElems = [];

    if (numReleases) {
      endpoint = endpoint + numReleases;

      // Initialize
      $.get(endpoint, {}).done(function (data) {
        for (var i = 0; i < data.length;) {
          var item = data[i];
          var leftItem = data[i];
          var rightItem = data[i + 1];
          var $desktopElem = $($.parseHTML(desktopElem));
          var $mobileElem = $($.parseHTML(mobileElem));

          if (leftItem) {
            $desktopElem.find('.left-item .date').text(leftItem['formattedPubDate']);
            $desktopElem.find('.left-item .title a').text(leftItem['title']);
            $desktopElem.find('.left-item .title a').attr('href', leftItem['link']);
            $desktopElem.find('.left-item .description p').text(leftItem['description']);
          }
          if (rightItem) {
            $desktopElem.find('.right-item .date').text(rightItem['formattedPubDate']);
            $desktopElem.find('.right-item .title a').text(rightItem['title']);
            $desktopElem.find('.right-item .title a').attr('href', rightItem['link']);
            $desktopElem.find('.right-item .description p').text(rightItem['description']);

            $mobileElem.find('.date').text(rightItem['formattedPubDate']);
            $mobileElem.find('.title a').text(rightItem['title']);
            $mobileElem.find('.title a').attr('href', rightItem['link']);
            $mobileElem.find('.description p').text(rightItem['description']);
            mobileElems.push($mobileElem);
          }
          i = i + 2;
          $list.append($desktopElem);
        }

        for (var j = 0; j < mobileElems.length; j++) {
          $list.append(mobileElems[j]);
        }
      }).fail(function () {
        // Failed
      });
    }
  });
});

module.exports = pressRelease;

},{}],68:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for protocolListFilter
 */

var protocolListFilter = function protocolListFilter() {};

var industryVerticalRadioFilter = $('input:radio[id="industry"]');
var technologyVerticalRadioFilter = $('input:radio[id="technology"]');
$(industryVerticalRadioFilter).on('click', function () {
	filterByIndustryOrTechnology(this.id, this.value);
});

$(technologyVerticalRadioFilter).on('click', function () {
	filterByIndustryOrTechnology(this.id, this.value);
});

var allFilter = $('input:radio[id="allfilter"]');
$(allFilter).on('click', function () {
	window.location.pathname = this.value + ".html";
});

$('#filterSearch').on('keypress', function (e) {
	if (e.which === 13) {
		//Disable textbox to prevent multiple submit
		$(this).attr("disabled", "disabled");
		var currentpath = window.location.pathname;
		if (document.location.href.indexOf('?') == -1) {
			currentpath = currentpath + "?fs=" + this.value;
		} else if (document.location.href.indexOf('fs') == -1) {
			currentpath = document.location.href;
			currentpath = currentpath + "&fs=" + this.value;
		} else {
			currentpath = currentpath + "?fs=" + this.value;
		}
		document.location = currentpath;
		$(this).removeAttr("disabled");
		return false;
	}
});

function urlParam(name, url) {
	if (!url) {
		url = window.location.href;
	}
	var results = new RegExp('[\\?&]' + name + '=([^&#]*)').exec(url);
	if (!results) {
		return "";
	}
	return results[1] || "";
}

function filterByIndustryOrTechnology(filterType, tagname) {
	if (filterType != undefined && filterType != 'undefined') {
		var currentpath = window.location.pathname;
		var firstIndexOfDot = currentpath.indexOf('.');
		var lastIndexofDot = currentpath.lastIndexOf('.');
		if (firstIndexOfDot == lastIndexofDot) {
			//defensics landing page without any filter
			currentpath = currentpath.substring(0, currentpath.lastIndexOf('.'));
			currentpath = currentpath + "." + filterType + "." + tagname + ".html";
		} else {
			currentpath = currentpath.substring(0, currentpath.indexOf('.'));
			currentpath = currentpath + "." + filterType + "." + tagname + ".html";
		}
		window.location.pathname = currentpath;
	}
}

$(document).ready(function () {
	var currentpath = window.location.pathname;
	var firstIndexOfDot = currentpath.indexOf('.');
	var lastIndexofDot = currentpath.lastIndexOf('.');
	if (firstIndexOfDot != lastIndexofDot) {
		//defensics landing page without any filter
		var selectors = currentpath.split('.');
		var verticalType = '';
		var filterName = '';
		if (selectors.length >= 3) {
			verticalType = selectors[1];
			filterName = selectors[2];
		}
		if (verticalType == 'industry') {
			$('input:radio[id="industry"][value=' + filterName + ']').attr('checked', true);
		} else if (verticalType == 'technology') {
			$('input:radio[id="technology"][value=' + filterName + ']').attr('checked', true);
		}
	} else {
		$('input:radio[id="allfilter"]').attr('checked', true);
	}
	var basePagePath = currentpath.substring(0, firstIndexOfDot) + ".html";
	$("#clearfilters").attr("href", basePagePath);
});
module.exports = protocolListFilter;

},{}],69:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for quote
 */

var quote = function quote() {};

module.exports = quote;

},{}],70:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for railCard
 */

var railCard = function railCard() {};

module.exports = railCard;

},{}],71:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for railContainer
 */

var railContainer = function railContainer() {};

module.exports = railContainer;

},{}],72:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for richtexteditor
 */

var richtexteditor = function richtexteditor() {};

module.exports = richtexteditor;

},{"focus-within-polyfill":95}],73:[function(require,module,exports){
'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  /**
   *  This is the main file for search
   */
  
  var searchResult = function searchResult() {};
  
  function getSearchHub() {
    var searchPage = "";
    if ($('#search-results').length == 1) {
      var $searchContainer = $('#search-results').closest('.component-search-result').children();
  
      if ($searchContainer.hasClass('sig-container')) {
        searchPage = "SIG-Learning-Search";
      } else if ($searchContainer.hasClass('bsimm-container')) {
        searchPage = "BSIMM-Main-Search";
      } else {
        searchPage = "SNPS-Main-Search";
      }
    } else if ($('#searchbox').length == 1) {
      //#searchbox in topnav only on pages that are not search pages
      if ($('#searchbox').hasClass('bsimm-searchbox')) {
        searchPage = "BSIMM-Main-Search";
      } else {
        searchPage = "SNPS-Main-Search";
      }
    }
    return searchPage;
  }
  
  function getCoveoToken() {
    var searchHub = getSearchHub();
    $.ajax({
      url: 'https://www.synopsys.com/bin/cs-info.json',
      error: function error() {
        $('#search-results,#searchbox').before('<p class="text-center">An error has occurred. Please try your request again.</p>');
      },
      dataType: 'json',
      success: function success(data) {
        var coveoConfig = {
          orgId: data['orgId'],
          token: {
            snps: data['SNPS-Main-Search'],
            sig: data['SIG-Learning-Search'],
            bsimm: data['BSIMM-Main-Search']
          },
          restUri: "https://platform.cloud.coveo.com/rest/search",
          searchHub: searchHub,
          searchUrl: ""
        };
        initCoveo(coveoConfig);
      },
      type: 'GET'
    });
  }
  
  document.addEventListener('DOMContentLoaded', function () {
    getCoveoToken();
  });
  
  function getCoveoLangCode() {
    var langCode = $('html').attr('lang');
    var coveoLangCode = 'en';
    if (/tw|zh-Hant/i.test(langCode)) {
      coveoLangCode = 'zh-tw';
    } else if (/zh/i.test(langCode)) {
      coveoLangCode = 'zh-cn';
    } else if (/ja/i.test(langCode)) {
      coveoLangCode = 'ja';
    } else if (/ru/i.test(langCode)) {
      coveoLangCode = 'ru';
    } else if (/de/i.test(langCode)) {
      coveoLangCode = 'de';
    } else if (/en/i.test(langCode)) {
      coveoLangCode = 'en';
    } else if (typeof langCode !== 'undefined' && langCode != null) {
      coveoLangCode = langCode;
    }
    return coveoLangCode;
  }
  
  function getLangCountry() {
    var langCode = $('html').attr('lang');
    var langCountry = 'en-us';
    if (/tw|zh-Hant/i.test(langCode)) {
      langCountry = 'zh-tw';
    } else if (/zh/i.test(langCode)) {
      langCountry = 'zh-cn';
    } else if (/ja/i.test(langCode)) {
      langCountry = 'ja-jp';
    } else if (/ru/i.test(langCode)) {
      langCountry = 'ru-ru';
    } else if (/de/i.test(langCode)) {
      langCountry = 'de-de';
    } else if (/en/i.test(langCode)) {
      langCountry = 'en-us';
    }
    return langCountry;
  }
  
  function renewToken() {
    return fetch('https://www.synopsys.com/bin/cs-info.json').then(function (response) {
      return response.json();
    }).then(function (data) {
      var searchPage = "";
      if ($('#searchbox').hasClass('bsimm-searchbox')) {
        searchPage = "BSIMM-Main-Search";
      } else {
        searchPage = "SNPS-Main-Search";
      }
      return data[searchPage];
    });
  }
  
  function renewSIGToken() {
    return fetch('https://www.synopsys.com/bin/cs-info.json').then(function (response) {
      return response.json();
    }).then(function (data) {
      return data['SIG-Learning-Search'];
    });
  }
  
  function getYearsDescending(numYears) {
    var currentDate = new Date();
    var currentYear = currentDate.getFullYear();
    var yearsDesc = [];
    var yearIncrement = currentYear;
  
    for (var i = 0; i < numYears; i++) {
      yearsDesc.push(yearIncrement--);
    }
    return yearsDesc;
  }
  
  function getSearchPageURL() {
    var searchPageUrl;
	  searchPageUrl = "https://www.synopsys.com/search.html";
    return searchPageUrl;
  }
  
  function initCoveoTopNavSearchBox(searchBoxRoot) {
    var searchPageUrl = getSearchPageURL();
    Coveo.initSearchbox(searchBoxRoot, searchPageUrl, {
      Analytics: {
        searchHub: 'SNPS-Main-Search'
      }
    });
  }
  
  function addCustomDataListener(element) {
    Coveo.$$(element).on("changeAnalyticsCustomData", function (e, args) {
      if (args.type == 'ClickEvent') {
        if (args.originLevel2 == 'SNUG' && args.metaObject) {
          args.metaObject.parenttitle = args.resultData.parentResult.raw.title;
          args.metaObject.snugconferenceyear = args.resultData.parentResult.raw.snugconferenceyear[0];
          args.metaObject.snugconferencename = args.resultData.parentResult.raw.snugconferencename[0];
        }
      }
    });
  }
  
  function addNoSearchResultsContent(searchHub) {
    if (searchHub === "SNPS-Main-Search") {
      $('#search-results .CoveoQuerySummary').attr("data-enable-no-results-found-message", "true").after('<div class="coveo-show-if-no-results snps-no-results" style="display:none;"><div class="CoveoText coveo-query-summary-no-results-string" data-value="no_results_message"></div>' + '<div class="CoveoText"><ul>' + '<li><a id="no-results-silicon-design" href="' + Coveo.l('no_results_silicon_design_link') + '">' + Coveo.l('no_results_silicon_design') + '</a></li>' + '<li><a id="no-results-designware-ip" href="' + Coveo.l('no_results_silicon_ip_link') + '">' + Coveo.l('no_results_silicon_ip') + '</a></li>' + '<li><a id="no-results-software-integrity" href="' + Coveo.l('no_results_software_security_link') + '">' + Coveo.l('no_results_software_security') + '</a></li>' + '</ul></div></div>');
    }
  
    Coveo.$$(document.querySelectorAll("#no-results-silicon-design, #no-results-designware-ip, #no-results-software-integrity")).on('click', function (event) {
      coveoUaLogNoResultPageLinkClicked(event);
    });
  }
  
  function handleDeferredQuerySuccess(successEvent, args) {
    if (args.results.totalCount > 0) {
      Coveo.$$(document.querySelector(".coveo-show-if-no-results.snps-no-results")).hide();
    } else {
      Coveo.$$(document.querySelector(".coveo-show-if-no-results.snps-no-results")).show();
    }
  };
  
  var coveoUaLogCustomEvent = Coveo._.debounce(function (event) {
    event.preventDefault();
    var element = Coveo.$$(document).find('#search-results');
    var customEventCause = { name: 'noResultsLinkClicked', type: 'misc' };
    var metadata = {
      link_text: event.target.text,
      link_url: event.target.href,
      queryText: Coveo.state(document.getElementById('search-results')).attributes.q
    };
    Coveo.logCustomEvent(element, customEventCause, metadata);
    setTimeout(function () {
      window.location = event.target.href;
    }, 700);
  }, 2500, true);
  
  // Possibly needed for Firefox: Fix NS_BINDING_ABORTED error in Firefox
  var avoidNSError = function avoidNSError(func) {
    var timer = setInterval(function () {
      func();
      clearInterval(timer);
    }, 100);
  };
  
  var coveoUaLogNoResultPageLinkClicked = function coveoUaLogNoResultPageLinkClicked(event) {
    var executeOnlyOnce = Coveo._.once(function () {
      return coveoUaLogCustomEvent(event);
    });
    avoidNSError(executeOnlyOnce);
  };
  
  function initCoveo(coveoConfig) {
    var mainPageRoot = document.getElementById("search-results");
    var searchBoxRoot = document.querySelector("#searchbox .CoveoSearchbox");
    var coveoLangCode = "en";
    var now = new Date();
    var years = getYearsDescending(10);
  
    Coveo.SearchEndpoint.endpoints['default'] = new Coveo.SearchEndpoint({
      restUri: coveoConfig.restUri,
      accessToken: coveoConfig.token.snps,
      renewAccessToken: renewToken
    });
  
    Coveo.SearchEndpoint.endpoints['customSig'] = new Coveo.SearchEndpoint({
      restUri: coveoConfig.restUri,
      accessToken: coveoConfig.token.sig,
      renewAccessToken: renewSIGToken
    });
  
    if (mainPageRoot) {
  
      if ($('#search-results').closest('.component-search-result').children().hasClass('sig-container')) {
        // Initializing SIG Learning page
        Coveo.$$(mainPageRoot).on(Coveo.InitializationEvents.afterInitialization, function () {
          Coveo.state(mainPageRoot, "f:@siglearninglanguage", coveoLangCode === 'ja' ? ["Japanese"] : ["English"]);
        });
  
        Coveo.init(mainPageRoot, {
          Analytics: {
            searchHub: coveoConfig.searchHub
          },
          EnhancedPipelineContext: {
            context: { langcode: coveoLangCode },
            setCustomDataOnClickEvent: true,
            setCustomDataOnCustomEvent: true
          }
        });
        addCustomDataListener(searchBoxRoot);
        initCoveoTopNavSearchBox(searchBoxRoot);
      } else {
        addNoSearchResultsContent(coveoConfig.searchHub);
        Coveo.$$(document.getElementById("search-results")).on(Coveo.QueryEvents.deferredQuerySuccess, function (evt, args) {
          handleDeferredQuerySuccess(evt, args);
        });
        addCustomDataListener(mainPageRoot);
        Coveo.init(mainPageRoot, {
          Analytics: {
            searchHub: coveoConfig.searchHub
          },
          EnhancedPipelineContext: {
            context: { langcode: coveoLangCode },
            setCustomDataOnClickEvent: true,
            setCustomDataOnCustomEvent: true
          },
          externalComponents: [searchBoxRoot, document.querySelector("#searchbox .CoveoPipelineContext"), document.querySelector("#searchbox .CoveoEnhancedPipelineContext")],
          snugYears: {
            customSort: years
          }
        });
      }
    } else {
      addCustomDataListener(searchBoxRoot);
      initCoveoTopNavSearchBox(searchBoxRoot);
    }
  }
  
  exports.default = searchResult;
  

},{}],74:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for sigShortForm
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);
var webforms_global = require('../../client-libraries/pagelibs/js/webforms-global');

// module.exports = [publish public functions here];

if ($('.component-sigshortform').length) {
	$(function () {
		init();
	});
}

function init() {
	//log.trace('Initializing SigShortForm');
	$(document).ready(function () {
		webforms_global.validateMandatoryFields("#form_container");
		//$("#wft").val(Math.round((new Date()).getTime()));
		webforms_global.showHideStateDD($("#webFormCountry"));
		webforms_global.showHideGDPRConsent($("#webFormCountry"));
	});

	$("#webFormCountry").change(function () {
		webforms_global.showHideStateDD(this);
		webforms_global.showHideGDPRConsent(this);
	});

	$("#webFormSaveProfile").click(function () {
		webforms_global.udpateGDPRConsent(this);
	});

	//Populate campaign variables
	var campaign = webforms_global.getUrlParam("cmp");
	var utm_source = webforms_global.getUrlParam("utm_source");
	var utm_medium = webforms_global.getUrlParam("utm_medium");

	//Populate from s_campaign cookie value if available
	if (campaign == 'undefined' || campaign === '') {
		campaign = webforms_global.getCookie('s_campaign');
	}

	$("#hidden_campaignid").val(campaign);
	$("#hidden_campaignsource").val(utm_source);
	$("#hidden_campaignmedium").val(utm_medium);
	$("#elqCustomerGUID").val(webforms_global.getElqCookieSubValue('ELOQUA', 'GUID'));
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../client-libraries/pagelibs/js/webforms-global":4}],75:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for sigShortFormB
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);
var webforms_global = require('../../client-libraries/pagelibs/js/webforms-global');
// module.exports = [publish public functions here];

if ($('.component-sigshortform-b').length) {
	$(function () {
		init();
	});
}

function init() {
	//log.trace('Initializing SigShortFormB');
	$(document).ready(function () {
		webforms_global.validateMandatoryFields("#form_container");
		//$("#wft").val(Math.round((new Date()).getTime()));
		webforms_global.showHideStateDD($("#webFormCountry"));
		webforms_global.showHideGDPRConsent($("#webFormCountry"));
	});

	$("#webFormCountry").change(function () {
		webforms_global.showHideStateDD(this);
		webforms_global.showHideGDPRConsent(this);
	});

	$("#webFormSaveProfile").click(function () {
		webforms_global.udpateGDPRConsent(this);
	});

	//Populate campaign variables
	var campaign = webforms_global.getUrlParam("cmp");
	var utm_source = webforms_global.getUrlParam("utm_source");
	var utm_medium = webforms_global.getUrlParam("utm_medium");

	//Populate from s_campaign cookie value if available
	if (campaign == 'undefined' || campaign === '') {
		campaign = webforms_global.getCookie('s_campaign');
	}

	$("#hidden_campaignid").val(campaign);
	$("#hidden_campaignsource").val(utm_source);
	$("#hidden_campaignmedium").val(utm_medium);
	$("#elqCustomerGUID").val(webforms_global.getElqCookieSubValue('ELOQUA', 'GUID'));
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"../../client-libraries/pagelibs/js/webforms-global":4}],76:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for siteFooter
 */

var siteFooter = function siteFooter() {};

module.exports = siteFooter;

},{}],77:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for siteFooterChinese
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

// module.exports = [publish public functions here];

if ($('.component-site-footer-chinese').length) {
    $(function () {
        init();
    });
}

function init() {
    //log.trace('Initializing SiteFooterChinese');
}

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],78:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for socialLinks
 */

var socialLinks = function socialLinks() {};

module.exports = socialLinks;

},{}],79:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for stockPrice
 */

var stockPrice = function stockPrice() {};

$(function () {
  var $stockPrice = $('.component-stockprice');

  $stockPrice.each(function () {
    var $this = $(this);
    var endpoint = "/bin/stockprice";

    // Elements
    var $sharePrice = $this.find('.share-price');
    var $deltaNumber = $this.find('.delta .number');
    var $deltaPercent = $this.find('.delta .percent');
    var $shares = $this.find('.shares');
    var $total = $this.find('.total');

    // Initialize
    $.get(endpoint, {}).done(function (data) {
      var deltaNumber = data['Change'];
      var deltaPercent = data['ChangeinPercent'];

      if (deltaNumber.indexOf('-') >= 0) {
        $deltaNumber.addClass('negative');
      }

      if (deltaPercent.indexOf('-') >= 0) {
        $deltaPercent.addClass('negative');
      }

      $sharePrice.text(data['formattedAskPrice']);
      $deltaNumber.text(data['Change']);
      $deltaPercent.text('(' + data['ChangeinPercent'] + ')');
      $shares.text(data['formattedVolume']);
      $total.text(data['MarketCapitalization']);
    }).fail(function () {
      // Failed
    });
  });
});

module.exports = stockPrice;

},{}],80:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for synopsysSearch
 */

var synopsysSearch = function synopsysSearch() {};
//TODO: Uncomment this code to test the search.synopsys.com functionality
/*var count;
var i;
var page;
var sort;
var upperPaginationQuery;
var queryWOSort;
var q;
var queryParams;
var queryString;

var Constants = {

     	query           : "q",
     	count           : "count",
     	i               : "i",
     	page            : "page",
     	questionMark    : "?",
     	semiColon       : ";",
     	sortByRelevance : "Relevance",
     	sortByTitle     : "Title",
     	sortByDate      : "Date",
     	apiUrl          : "https://stage-synopsys.guided.ss-omtrdc.net/",
     	sort            : "sort"
};

$('input#idSearch3').keypress(function (e) {
	//e.preventDefault();
	  if (e.which == 13) {
	    var searchString = $(this).val();
	    var queryParameter = encodeURIComponent(searchString);
	    if (queryParameter) {
	        document.location = document.location.protocol +"//"+ document.location.hostname + document.location.pathname + "?q=" + queryParameter;
	        return false;
	    }
	  }
	});

//Clears the existing values

function clearData()
{
	$('.pagination')             .empty();
	$('.search-results-wrapper') .empty();
	$('.keyword')                .empty();
	$('#totalResults')           .empty();
	$('#viewResults')            .empty();
	$('#searchErrorMsg')         .hide();
	$(".dropdown-menu")          .empty();
	$("#nextPagination")         .empty();
	$("#leftPagination")         .empty();
	//$('#sortDropdown .pull-left').empty();
}



function getUrlParameter(name, x) {
    name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');
    var regex = new RegExp('[\\?&]' + name + '=([^&#]*)');

    var results;
    if(x == null || x == '' || x.length <= 0)
    {
    	results = regex.exec(location.search);
    }
    if( x != null && x.length > 1)
    {
    	var proX = x.replace(new RegExp(";", "g"), '&');
    	results = regex.exec(proX);
    }


    return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));
}

//Gets query parameters from URL
function getQueryParam()
{
	count       = getUrlParameter(Constants.count, queryString);
	i           = getUrlParameter(Constants.i, queryString);
	page        = getUrlParameter(Constants.page, queryString);
	sort        = getUrlParameter(Constants.sort, queryString);

	// --- Prepares the Query parameters
	queryParams = Constants.questionMark + "do=json";
	if( q != null && q != '' && q.length > 1)
	{
		queryParams = queryParams + Constants.semiColon + Constants.query + '=' + encodeURIComponent(q);
	}
	if( i != null && i != '' && i.length > 0)
	{
		queryParams = queryParams + Constants.semiColon + Constants.i + '=' + i;
	}
	upperPaginationQuery = queryParams;

	if( page != null && page != '' && page.length > 0)
	{
		queryParams = queryParams + Constants.semiColon + Constants.page + '=' + page;
	}

	if( count != null && count != '' && count.length > 0)
	{
		queryParams = queryParams + Constants.semiColon + Constants.count + '=' + count;
	}

	queryWOSort          = queryParams;

	if( sort != null && sort != '' && sort.length > 0)
	{
		queryParams = queryParams + Constants.semiColon + Constants.sort + '=' + sort;
		upperPaginationQuery = upperPaginationQuery + Constants.semiColon + Constants.sort + '=' + sort;
	}
}

function populateUpperPagination()
{
	if(count == null || count == '')
	{
		$('.num-results').append('<li><a class="active" href="' + upperPaginationQuery + ';count=10">10</a></li>');
		$('.num-results').append('<li><a href="' + upperPaginationQuery + ';count=25">25</a></li>');
		$('.num-results').append('<li><a href="' + upperPaginationQuery + ';count=50">50</a></li>');

		return;
	}
	var countInt = parseInt(count);
	if(count == 10)
	{
		$('.num-results').append('<li><a class="active" href="' + upperPaginationQuery + ';count=10">10</a></li>');
		$('.num-results').append('<li><a href="' + upperPaginationQuery + ';count=25">25</a></li>');
		$('.num-results').append('<li><a href="' + upperPaginationQuery + ';count=50">50</a></li>');

		return;
	}
	if(count == 25)
	{
		$('.num-results').append('<li><a href="' + upperPaginationQuery + ';count=10">10</a></li>');
		$('.num-results').append('<li><a class="active" href="' + upperPaginationQuery + ';count=25">25</a></li>');
		$('.num-results').append('<li><a href="' + upperPaginationQuery + ';count=50">50</a></li>');

		return;
	}

	if(count == 50)
	{
		$('.num-results').append('<li><a href="' + upperPaginationQuery + ';count=10">10</a></li>');
		$('.num-results').append('<li><a href="' + upperPaginationQuery + ';count=25">25</a></li>');
		$('.num-results').append('<li><a class="active" href="' + upperPaginationQuery + ';count=50">50</a></li>');

		return;
	}
}

function populateResults(data)
{
	var unEscapedStr = unescape(q);
	$('.keyword')      .append(unEscapedStr);
	$('input#idSearch3').val(unEscapedStr);

	var totalResults = data.general.total;
	$('#totalResults').append(totalResults);

	var pageLower = data.resultcount.pagelower;
	var pageUpper = data.resultcount.pageupper;
	if(pageLower != null && pageLower != '' && pageUpper != null && pageUpper != '')
	{
		$('#viewResults').append(pageLower + '-' + pageUpper);
	}

	if(sort == null || sort == '' || sort.length <= 0 || sort == 'relevance')
	{
		$(".dropdown-menu").append('<li><a class="active" href = "' + queryWOSort + Constants.semiColon + 'sort=relevance">Relevance</a></li>');
		$(".dropdown-menu").append('<li><a href = "' + queryWOSort + Constants.semiColon + 'sort=title">Title</a></li>');
		$(".dropdown-menu").append('<li><a href = "' + queryWOSort + Constants.semiColon + 'sort=last-modified">Date</a></li>');
		$('#sortDropdown .pull-left').text(Constants.sortByRelevance);
	}

	else if(sort == 'title')
	{
		$(".dropdown-menu").append('<li><a href = "' + queryWOSort + Constants.semiColon + 'sort=relevance">Relevance</a></li>');
		$(".dropdown-menu").append('<li><a class="active" href = "' + queryWOSort + Constants.semiColon + 'sort=title">Title</a></li>');
		$(".dropdown-menu").append('<li><a href = "' + queryWOSort + Constants.semiColon + 'sort=last-modified">Date</a></li>');
		$('#sortDropdown .pull-left').text(Constants.sortByTitle);
	}

	else if(sort == 'last-modified')
	{
		$(".dropdown-menu").append('<li><a href = "' + queryWOSort + Constants.semiColon + 'sort=relevance">Relevance</a></li>');
		$(".dropdown-menu").append('<li><a href = "' + queryWOSort + Constants.semiColon + 'sort=title">Title</a></li>');
		$(".dropdown-menu").append('<li><a class="active" href = "' + queryWOSort + Constants.semiColon + 'sort=last-modified">Date</a></li>');
		$('#sortDropdown .pull-left').text(Constants.sortByDate);
	}

	populateUpperPagination();

	// Populate the results on the search page
    var resultSets   = data.resultsets[0];
    var resultsSec   = resultSets.results;

    $.each(resultsSec, function(i, result) {
     $(".search-results-wrapper").append('<div class="row search-result"><div class="col-xs-12 col-sm-10 col-md-8"><p class="title">' + result.title + '</p>' + '<p class="cta"><a href=' + result.display_url + '>' + result.display_url + '</a></p><p class="description">' + result.desc + '</p></div></div>');
    })

    // Populate the pagination on the search page
    var pagination   = data.pagination[1];

    // Previous link button
    if(pagination.previous != null && pagination.previous.length > 1)
    {
    	$("#leftPagination").append('<a href="' + pagination.previous + '" class="pagination-button text-left"><i class="fa fa-angle-left"></i><span class="pull-right hidden-xs">Prev</span></a>');
    }

    //Next button
    if(pagination.next != null && pagination.next.length > 1)
    {
      $("#nextPagination").append('<a href="' + pagination.next + '" class="pagination-button text-right"><i class="fa fa-angle-right"></i><span class="pull-left hidden-xs">Next</span></a>');
    }

    // Populates the pagination from 1-5
    var pageInfo        = pagination.pages;
    $.each(pageInfo, function(j, value) {
    	console.log('value.link' + value.link);
         if(value.selected == 'true')
         {
        	 $(".pagination").append('<li><a href="' + value.link + '" class="active">' + value.page + '</a></li>');
         }
         if(value.selected == 'false')
         {
        	 $(".pagination").append('<li><a href="' + value.link + '">' + value.page + '</a></li>');
         }
    })

    var lastIndexQuery = pagination.last.replace(new RegExp(";", "g"), '&');
    var lastIndex = getUrlParameter("page", lastIndexQuery);

    if(lastIndex > 5)
    {
    	$(".pagination").append('<li>...</li>');
    	$(".pagination").append('<li><a href="' + pagination.last + '" >' + lastIndex + '</a></li>');
    }


}

//This function makes Ajax call
function performSearch()
{
	getQueryParam();

	$.ajax({
		type: 'GET',
		url: Constants.apiUrl + queryParams,
	    async: false,
	    cache: false,
	    dataType: "json",
	    success: function(data)
	     {
	    	console.log('Inside ajax success function');


	    	console.log('Pagination 0 is: ' + data.pagination[0].pages[0]);
	    	console.log('Pagination 0 is: ' + data.pagination[1].pages[1]);


	    	clearData();
	    	populateResults(data);

	    },
	    error: function() {
	    	console.log('Inside ajax error function');
	    	$('#searchErrorMsg').removeAttr('style');
	    }
	   });
}*/

module.exports = synopsysSearch;

//TODO: Uncomment this code to test the search.synopsys.com functionality
/*$( document ).ready(function(event)
{
	// Process the query string(s) from URL
	queryString = location.search;

	if(queryString == null || queryString == '' || queryString.length <= 0)
	{
		return;
	}
	console.log('queryString is : ' + queryString);

	q           = getUrlParameter(Constants.query, queryString);
	console.log('Query word is is : ' + queryString);
	if(q == null || q == '' || q.length <= 0) { return; }

	performSearch();

});*/

},{}],81:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for text
 */

var text = function text() {};

module.exports = text;

},{}],82:[function(require,module,exports){
'use strict';

/**
 *  This is the main file for textImage2Column
 */

function initTextImage2Column() {
  $('.component-text-image-2-column').click(function (event) {

    var $target = $(event.target);
    // Ignore CTA click
    if ($target.parents('a').length > 0 || $target.is('a')) {
      return;
    }

    var link = $(this).attr('data-link');
    var newTab = $(this).attr('data-new-tab') === 'true' ? '_blank' : '_self';

    if (link) {
      window.open(link, newTab);
    }
  });
}

$(function () {
  initTextImage2Column();
});

var textImage2Column = function textImage2Column() {};

module.exports = textImage2Column;

},{}],83:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for textList
 */

var textList = function textList() {};

module.exports = textList;

},{}],84:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for tweet
 */

var tweet = function tweet() {};

module.exports = tweet;

},{}],85:[function(require,module,exports){
"use strict";

/**
 *  This is the main file for twitterAccountsForm
 */

var twitterAccountsForm = function twitterAccountsForm() {};

module.exports = twitterAccountsForm;

},{}],86:[function(require,module,exports){
(function (global){
'use strict';

/**
 *  This is the main file for util
 */

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

// module.exports = [publish public functions here];

if ($('.component-util').length) {
    $(function () {
        init();
    });
}

function init() {
    //log.trace('Initializing Util');
}

$("#html2Pdf").click(function () {
    var currentPath = window.location.pathname;
    var pageName;

    if (currentPath) {
        var array = currentPath.split("/");
        pageName = array[array.length - 1].replace(".html", "") + ".pdf";
    } else {
        pageName = "synopsys.pdf";
    }

    var customCss = $('#cssUrl').val();
    var url;
    if (customCss) {
        window.location = "http://pdfmyurl.com/api?url=https://www.synopsys.com" + currentPath + "&filename=" + pageName + "&css=" + customCss;
        return;
    }

    window.location = "http://pdfmyurl.com/api?url=https://www.synopsys.com" + currentPath + "&filename=" + pageName;
});

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],87:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Base class that video players (Limelight, Youtube, Brightcove, etc) must extend.
 */
module.exports = function () {

    /**
     * @param $elem root .cmp-video element
     * @param opts option overrides, refer to .cmp-video data attributes for all options
     *             - videoId
     *             - thumbnail
     *             - provider
     *             - mode
     *             - playerId (brightcove)
     */
    function Player($elem) {
        var _this = this;

        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, Player);

        this.$elem = $elem;
        this.$thumbnail = $elem.find('.cmp-video__thumbnail');

        this.$modal = null; // set by openModal()
        this.$modalTemplate = this.$elem.find('.modal-template');

        // data attribute configurations
        this.videoId = opts.videoId || this.$elem.data('videoId');
        this.mode = opts.mode || this.$elem.data('mode');
        this.thumbnail = opts.thumbnail || this.$elem.data('thumbnail');
        this.provider = opts.provider || this.$elem.data('provider');
        this.playerId = opts.playerId || this.$elem.data('playerId');

        // handle thumbnail image config
        if (this.thumbnail) {
            var $new = this.$elem.find('.cmp-video__thumbnail-img--authored');

            $new.css('background-image', "url('" + this.thumbnail + "')");
            this.$thumbnail.addClass('has-thumbnail');
            $new.show();
        }

        // Set the unique id for this player so that other code can in the future retrieve this Player by id.
        this.$elem.attr('id', Player.guid());

        if (this.getMode() == 'modal') {
            this.$thumbnail.on('click', function () {
                return _this.openModal();
            });
        } else {
            this.$thumbnail.on('click', function () {
                return _this.play();
            });
        }
    }

    /**
     * This function provides an alternative means for communicating a video's configurations __prior__ to construction.
     *
     * At time of writing, this is used by contentType.js.
     *
     * @param $elem .cmp-video element
     * @param opts refer to constructor for details
     */


    _createClass(Player, [{
        key: 'initPlayer',


        // ==========================================================
        // START NON-IMPLEMENTED METHODS
        //
        // Functions that video provider classes must implement
        // ==========================================================

        /**
         * Initializes the __inline__ video player.
         *
         * Implementations should use the `this.$elem` object to update the dom.
         */
        value: function initPlayer() {
            throw "Must be implemented by video provider class";
        }

        /**
         * Initializes video player within the __modal__.
         *
         * Implementations should use the `this.$modal` object to update the dom.
         */

    }, {
        key: 'initModalPlayer',
        value: function initModalPlayer() {
            throw "Must be implemented by video provider class";
        }

        /**
         * Starts playback of the video.
         *
         * Implementations must be make sure to start the appropriate player (either inline or modal).
         */

    }, {
        key: '_startPlayback',
        value: function _startPlayback() {
            throw "Must be implemented by video provider class";
        }

        /**
         * Stops playback of the video.
         *
         * Implementations must be make sure to stop the appropriate player (either inline or modal).
         */

    }, {
        key: '_stopPlayback',
        value: function _stopPlayback() {
            throw "Must be implemented by video provider class";
        }

        // ====================================================================
        // START DEFAULT IMPLEMENTED METHODS
        //
        // Functions that video provider classes should not need to override
        // ====================================================================

        /**
         * Starts playback of the video.
         */

    }, {
        key: 'play',
        value: function play() {
            if (this.getMode() == 'inline') {
                // make sure thumbnail is not visible
                this.hideThumbnail();
            }
            this._startPlayback();
        }

        /**
         * Stops playback of the video.
         *
         * Implementations must be make sure to stop the appropriate player (either inline or modal).
         */

    }, {
        key: 'stop',
        value: function stop() {
            this._stopPlayback();
        }

        /**
         * Opens the modal and start playback immediately.
         */

    }, {
        key: 'openModal',
        value: function openModal() {
            var _this2 = this;

            var guid = Player.guid();

            // Build the new modal
            var $tmpModal = $($.parseHTML(this.$modalTemplate.html()));
            $tmpModal.attr('id', guid);

            // Append the modal to the page
            $('body').append($tmpModal);
            this.$modal = $('#' + guid);

            // Initialize the modal and open it
            this.initModalPlayer(this.$modal);
            this.$modal.modal();

            // Destroy the modal on close
            this.$modal.on('hide.bs.modal', function () {
                return _this2.$modal.remove();
            });

            // Lastly immediately start playing the video
            this.play();
            // Both youtube and limelight have issues where video may not be initialized right away.
            setTimeout(function () {
                return _this2.play();
            }, 1000);
        }
    }, {
        key: 'getMode',
        value: function getMode() {
            return this.mode;
        }
    }, {
        key: 'getVideoPlayerId',
        value: function getVideoPlayerId() {
            // this is set on player construction
            return this.$elem.attr('id');
        }
    }, {
        key: 'getVideoId',
        value: function getVideoId() {
            return this.videoId;
        }

        /**
         * Hides the custom thumbnail.
         */

    }, {
        key: 'hideThumbnail',
        value: function hideThumbnail() {
            this.$thumbnail.addClass('is-hidden');
        }
    }], [{
        key: 'persistOptions',
        value: function persistOptions($elem, opts) {
            if ($elem.attr('id')) {
                if (window.console) console.log('Cannot persist options after video has already initialized.');
                return;
            }

            $elem.data(opts);
        }
    }, {
        key: 'guid',
        value: function guid() {
            return 'v' + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();
        }
    }]);

    return Player;
}();

function s4() {
    return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
}

},{}],88:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Player = require('./player');

var DEFAULT_ACCOUNT = '5748441669001';
var DEFAULT_PLAYER = 'rka4xWwYG';
var SCRIPT_URL = '//players.brightcove.net/ACCOUNT_ID/PLAYER_ID_default/index.min.js';
var PLAYER_URL = 'https://players.brightcove.net/ACCOUNT_ID/PLAYER_ID_default/index.html?videoId=VIDEO_ID';
var TEMPLATE = '\n    <video\n      id="DOM_ID"\n      data-video-id="VIDEO_ID"\n      data-account="ACCOUNT_ID"\n      data-player="PLAYER_ID"\n      data-embed="default"\n      data-application-id\n      controls\n      class="embed-responsive-item video-js"\n      style="position: absolute; top: 0px; right: 0px; bottom: 0px; left: 0px; width: 100%; height: 100%;">\n    </video>';

module.exports = function (_Player) {
    _inherits(BrightcoveVideo, _Player);

    function BrightcoveVideo($elem, opts) {
        _classCallCheck(this, BrightcoveVideo);

        var _this = _possibleConstructorReturn(this, (BrightcoveVideo.__proto__ || Object.getPrototypeOf(BrightcoveVideo)).call(this, $elem, opts));

        _this.playerId = _this.playerId || DEFAULT_PLAYER;
        return _this;
    }

    _createClass(BrightcoveVideo, [{
        key: 'initPlayer',
        value: function initPlayer() {
            var guid = Player.guid();
            this.$elem.find('.cmp-video__player--inline').attr('id', guid);
            this.initBrightcoveVideo(guid);
        }
    }, {
        key: 'initModalPlayer',
        value: function initModalPlayer() {
            var guid = Player.guid();
            this.$modal.find('.cmp-video__player--modal').attr('id', guid);
            this.initBrightcoveVideo(guid);
        }
    }, {
        key: 'initBrightcoveVideo',
        value: function initBrightcoveVideo(domId) {
            var videoId = this.getVideoId();
            var $playerDiv = $('#' + domId);

            if (!$playerDiv.length) {
                if (window.console) console.log('Missing element ' + domId);
                return;
            }

            var guid = Player.guid();
            var html = TEMPLATE.slice(0);
            html = html.replace('VIDEO_ID', videoId);
            html = html.replace('ACCOUNT_ID', DEFAULT_ACCOUNT);
            html = html.replace('PLAYER_ID', this.playerId);
            html = html.replace('DOM_ID', guid);

            $playerDiv.append(html);

            // Brightcove doesn't seem to have a API call to initialize videos, instead need to reload/rerun their JS API.
            // Because vidoes can be dynamically added to pages (contentTypeListing component), need to re-invoke after
            // every video addition.
            this.playerPromise = this.loadBrightcoveApi().then(function () {
                var player = videojs($('#' + guid)[0]);

                player.ready(function () {
                    // Point direct link to BC video URL instead of AEM page URL
                    if (player.socialOverlay) {
                        var directLink = PLAYER_URL.slice(0);
                        directLink = directLink.replace('VIDEO_ID', videoId);
                        directLink = directLink.replace('ACCOUNT_ID', DEFAULT_ACCOUNT);
                        directLink = directLink.replace('PLAYER_ID', player.bcinfo.playerId);

                        player.socialOverlay.setDirectLink(directLink);
                    }
                });

                return player;
            });
        }
    }, {
        key: '_startPlayback',
        value: function _startPlayback() {
            this.playerPromise.then(function (player) {
                player.play();
            });
        }
    }, {
        key: '_stopPlayback',
        value: function _stopPlayback() {
            this.playerPromise.then(function (player) {
                player.pause();
            });
        }

        /**
         * Load Brightcove API
         * @return promise for ajax response
         */

    }, {
        key: 'loadBrightcoveApi',
        value: function loadBrightcoveApi() {
            var url = SCRIPT_URL.slice(0);
            url = url.replace('ACCOUNT_ID', DEFAULT_ACCOUNT);
            url = url.replace('PLAYER_ID', this.playerId);

            var options = {
                dataType: "script",
                cache: true,
                url: url
            };
            return $.ajax(options);
        }
    }]);

    return BrightcoveVideo;
}(Player);

},{"./player":87}],89:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Player = require('./player');

module.exports = function (_Player) {
    _inherits(LimeLightVideo, _Player);

    function LimeLightVideo($elem) {
        var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

        _classCallCheck(this, LimeLightVideo);

        // Need to save the video id to the dom 'flashVars' <param>
        // For consistency/maintainability this is client side even though in some cases we could do it server side.
        var _this = _possibleConstructorReturn(this, (LimeLightVideo.__proto__ || Object.getPrototypeOf(LimeLightVideo)).call(this, $elem, opts));

        _this.resetVideoParameters(false, 'inline');
        _this.resetVideoParameters(false, 'modalTemplate');
        return _this;
    }

    _createClass(LimeLightVideo, [{
        key: 'initPlayer',
        value: function initPlayer() {
            var guid = Player.guid();
            // assign an id to the inline player, and initialize
            this.$elem.find('object.cmp-video__player--inline').attr('id', guid);
            LimelightPlayerUtil.initEmbed(guid);
        }
    }, {
        key: 'initModalPlayer',
        value: function initModalPlayer() {
            var guid = Player.guid();
            // assign an id to the modal player, and initialize
            this.$modal.find('object.cmp-video__player--modal').attr('id', guid);
            LimelightPlayerUtil.initEmbed(guid);
        }

        /**
         * Limelight will automatically swap the flash player for the HTML 5 player for some devices.
         *
         * This will return the modal video or inline video as appropriate.
         *
         * @param modeOverride Force the return of 'modal', 'modalTemplate', or 'inline' player object, if exists.
         * @return The raw dom element for either the flash <object> or HTML5 <video>. May return null.
         */

    }, {
        key: 'getPlayerObject',
        value: function getPlayerObject(modeOverride) {
            var mode = modeOverride || this.getMode();

            var $root = null;
            if (mode == 'modal') {
                $root = this.$modal;
            } else if (mode == 'inline') {
                $root = this.$elem;
            } else if (mode == 'modalTemplate') {
                $root = this.$modalTemplate;
            }

            if (!$root || !$root.length) return null;

            var $object = $root.find('object');
            if ($object.length) return $object[0];

            var $video = $root.find('video');
            if ($video.length) return $video[0];

            return null;
        }

        /**
         * Resets the flash <object> with the given autoplay setting. This effectively either starts playback
         * or stops it. In either case, the flash object is reloaded.
         *
         *
         * @param autoplay If true flash object will reload and start playback. False, object will reload but stopped.
         * @param modeOverride Override the player ('modal' or 'inline') that will be updated.
         */

    }, {
        key: 'resetVideoParameters',
        value: function resetVideoParameters(autoplay, modeOverride) {
            var player = this.getPlayerObject(modeOverride);
            if (!player) return;

            var $player = $(player);
            if ($player.is('object')) {
                if (autoplay) {
                    $player.find('param[name=flashVars]').attr('value', 'autoplay=true&play=true&' + this.getVideoId());
                    $player.append('<param name="autoplay" value="true">');
                } else {
                    $player.find('param[name=flashVars]').attr('value', this.getVideoId());
                    $player.find('param[name="autoplay"]').remove();
                }

                // Any time a <param> is added to the <object> it is forced to reload itself.
                // Force a reload by adding a random guid as a parameter
                $player.append('<param name="' + Player.guid() + '" value="1">');
            }
        }
    }, {
        key: '_startPlayback',
        value: function _startPlayback() {
            var player = this.getPlayerObject();
            if (!player) return;

            var $player = $(player);

            // Need to account for player being a flash <object> or html5 <video>

            if ($player.is('video')) {
                player.play();
            } else {
                this.resetVideoParameters(true);
            }
        }
    }, {
        key: '_stopPlayback',
        value: function _stopPlayback() {
            var player = this.getPlayerObject();
            if (!player) return;

            var $player = $(player);

            // Need to account for player being a flash <object> or html5 <video>

            if ($player.is('video')) {
                player.pause();
            } else {
                this.resetVideoParameters(false);
            }
        }
    }]);

    return LimeLightVideo;
}(Player);

},{"./player":87}],90:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Player = require('./player');

var YOUTUBE_API_URL = "https://www.youtube.com/player_api";
var youtubeReady = $.Deferred();

module.exports = function (_Player) {
    _inherits(YoutubeVideo, _Player);

    function YoutubeVideo($elem, opts) {
        _classCallCheck(this, YoutubeVideo);

        return _possibleConstructorReturn(this, (YoutubeVideo.__proto__ || Object.getPrototypeOf(YoutubeVideo)).call(this, $elem, opts));
    }

    _createClass(YoutubeVideo, [{
        key: 'initPlayer',
        value: function initPlayer() {
            var guid = Player.guid();
            this.$elem.find('.cmp-video__player--inline').attr('id', guid);
            this.initYoutubeVideo(guid);
        }
    }, {
        key: 'initModalPlayer',
        value: function initModalPlayer() {
            var guid = Player.guid();
            this.$modal.find('.cmp-video__player--modal').attr('id', guid);
            this.initYoutubeVideo(guid);
        }
    }, {
        key: 'initYoutubeVideo',
        value: function initYoutubeVideo(videoPlayerId) {
            var videoId = this.getVideoId();

            if (!$('#' + videoPlayerId).length) {
                if (window.console) console.log('Missing element ' + videoPlayerId);
                return;
            }

            // create player once API script load is done AND youtube reports as ready.
            this.playerPromise = loadYoutubeApi().then(function () {
                return youtubeReady;
            }).then(function () {
                return new YT.Player(videoPlayerId, {
                    height: '400',
                    width: '100%',
                    videoId: videoId,
                    playerApiId: videoPlayerId,
                    playerVars: {
                        autoplay: 0,
                        modestbranding: 1,
                        controls: 1,
                        showinfo: 0,
                        autohide: 1,
                        color: 'white'
                    }
                });
            });
        }
    }, {
        key: '_startPlayback',
        value: function _startPlayback() {
            var _this2 = this;

            this.playerPromise.then(function (player) {
                // even after waiting for player, it may not be fully initialized, make sure function exists
                if (typeof player.playVideo !== 'function') {
                    setTimeout(function () {
                        return _this2.play();
                    }, 100);
                } else {
                    player.playVideo();
                }
            });
        }
    }, {
        key: '_stopPlayback',
        value: function _stopPlayback() {
            var _this3 = this;

            this.playerPromise.then(function (player) {
                if (typeof player.pauseVideo !== 'function') {
                    setTimeout(function () {
                        return _this3.stop();
                    }, 100);
                } else {
                    player.pauseVideo();
                }
            });
        }
    }]);

    return YoutubeVideo;
}(Player);

// YouTube API will call this on API being ready.
// https://developers.google.com/youtube/iframe_api_reference#Requirements
window.onYouTubeIframeAPIReady = function () {
    // resolve deferred object. player creation will only happen once this is resolved.
    youtubeReady.resolve();
};

/**
 * Load YouTube API
 * @return promise for ajax response
 */
function loadYoutubeApi() {
    var options = {
        dataType: "script",
        cache: true,
        url: YOUTUBE_API_URL
    };
    return $.ajax(options);
}

},{"./player":87}],91:[function(require,module,exports){
'use strict';

var LimelightPlayer = require('./playerLimelight');
var YoutubePlayer = require('./playerYoutube');
var BrightcovePlayer = require('./playerBrightcove');

var PLAYERS = {};

/**
 * Initializes one or more .cmp-video video component elements.
 *
 * @return array of players that were created
 */
function initPlayers($cmpVideo) {
    var players = [];

    $cmpVideo.each(function () {
        var $videoElem = $(this);
        var provider = $videoElem.attr('data-provider');

        // Verify .cmp-video element was passed
        if (!$videoElem.hasClass('cmp-video') || !provider) {
            if (window.console) console.log('Bad element provided ' + $videoElem);
            return;
        }

        // If ID is present video has already been initialized
        if ($videoElem.attr('id')) {
            if (window.console) console.log('Element already initialized ' + $videoElem);
            return;
        }

        var videoPlayer = null;
        if (provider == 'Limelight') {
            videoPlayer = new LimelightPlayer($videoElem);
        } else if (provider == 'YouTube') {
            videoPlayer = new YoutubePlayer($videoElem);
        } else if (provider == 'Brightcove') {
            videoPlayer = new BrightcovePlayer($videoElem);
        }

        if (videoPlayer) {
            videoPlayer.initPlayer();
            PLAYERS[videoPlayer.getVideoPlayerId()] = videoPlayer;
            players.push(videoPlayer);
        }
    });

    return players;
}

/**
 * Get the Player associated with the given DOM ID.
 */
function getVideoPlayer(id) {
    return PLAYERS[id];
}

// Initialize all .cmp-video elements not handled by other components
initPlayers($('.cmp-video').filter(function () {
    // Exlude video components that are in components which need to do initialization themselves
    return !$(this).parents('.owl-carousel').length && !$(this).parents('.component-contentType').length;
}));

module.exports = {
    initPlayers: initPlayers,
    getVideoPlayer: getVideoPlayer
};

},{"./playerBrightcove":88,"./playerLimelight":89,"./playerYoutube":90}],92:[function(require,module,exports){
(function (global){
'use strict';

var $ = (typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null);

module.exports = {
    isEdit: function isEdit() {
        return $('body').hasClass('edit');
    },
    isPreview: function isPreview() {
        return $('body').hasClass('preview');
    },
    isDesign: function isDesign() {
        return $('body').hasClass('design');
    },
    isPublish: function isPublish() {
        return $('body').hasClass('publish');
    }
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],93:[function(require,module,exports){
/*!
 * Bootstrap v3.3.7 (http://getbootstrap.com)
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under the MIT license
 */

if (typeof jQuery === 'undefined') {
  throw new Error('Bootstrap\'s JavaScript requires jQuery')
}

+function ($) {
  'use strict';
  var version = $.fn.jquery.split(' ')[0].split('.')
  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] > 3)) {
    throw new Error('Bootstrap\'s JavaScript requires jQuery version 1.9.1 or higher, but lower than version 4')
  }
}(jQuery);

/* ========================================================================
 * Bootstrap: transition.js v3.3.7
 * http://getbootstrap.com/javascript/#transitions
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CSS TRANSITION SUPPORT (Shoutout: http://www.modernizr.com/)
  // ============================================================

  function transitionEnd() {
    var el = document.createElement('bootstrap')

    var transEndEventNames = {
      WebkitTransition : 'webkitTransitionEnd',
      MozTransition    : 'transitionend',
      OTransition      : 'oTransitionEnd otransitionend',
      transition       : 'transitionend'
    }

    for (var name in transEndEventNames) {
      if (el.style[name] !== undefined) {
        return { end: transEndEventNames[name] }
      }
    }

    return false // explicit for ie8 (  ._.)
  }

  // http://blog.alexmaccaw.com/css-transitions
  $.fn.emulateTransitionEnd = function (duration) {
    var called = false
    var $el = this
    $(this).one('bsTransitionEnd', function () { called = true })
    var callback = function () { if (!called) $($el).trigger($.support.transition.end) }
    setTimeout(callback, duration)
    return this
  }

  $(function () {
    $.support.transition = transitionEnd()

    if (!$.support.transition) return

    $.event.special.bsTransitionEnd = {
      bindType: $.support.transition.end,
      delegateType: $.support.transition.end,
      handle: function (e) {
        if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)
      }
    }
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: alert.js v3.3.7
 * http://getbootstrap.com/javascript/#alerts
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // ALERT CLASS DEFINITION
  // ======================

  var dismiss = '[data-dismiss="alert"]'
  var Alert   = function (el) {
    $(el).on('click', dismiss, this.close)
  }

  Alert.VERSION = '3.3.7'

  Alert.TRANSITION_DURATION = 150

  Alert.prototype.close = function (e) {
    var $this    = $(this)
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = $(selector === '#' ? [] : selector)

    if (e) e.preventDefault()

    if (!$parent.length) {
      $parent = $this.closest('.alert')
    }

    $parent.trigger(e = $.Event('close.bs.alert'))

    if (e.isDefaultPrevented()) return

    $parent.removeClass('in')

    function removeElement() {
      // detach from parent, fire event then clean up data
      $parent.detach().trigger('closed.bs.alert').remove()
    }

    $.support.transition && $parent.hasClass('fade') ?
      $parent
        .one('bsTransitionEnd', removeElement)
        .emulateTransitionEnd(Alert.TRANSITION_DURATION) :
      removeElement()
  }


  // ALERT PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.alert')

      if (!data) $this.data('bs.alert', (data = new Alert(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.alert

  $.fn.alert             = Plugin
  $.fn.alert.Constructor = Alert


  // ALERT NO CONFLICT
  // =================

  $.fn.alert.noConflict = function () {
    $.fn.alert = old
    return this
  }


  // ALERT DATA-API
  // ==============

  $(document).on('click.bs.alert.data-api', dismiss, Alert.prototype.close)

}(jQuery);

/* ========================================================================
 * Bootstrap: button.js v3.3.7
 * http://getbootstrap.com/javascript/#buttons
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // BUTTON PUBLIC CLASS DEFINITION
  // ==============================

  var Button = function (element, options) {
    this.$element  = $(element)
    this.options   = $.extend({}, Button.DEFAULTS, options)
    this.isLoading = false
  }

  Button.VERSION  = '3.3.7'

  Button.DEFAULTS = {
    loadingText: 'loading...'
  }

  Button.prototype.setState = function (state) {
    var d    = 'disabled'
    var $el  = this.$element
    var val  = $el.is('input') ? 'val' : 'html'
    var data = $el.data()

    state += 'Text'

    if (data.resetText == null) $el.data('resetText', $el[val]())

    // push to event loop to allow forms to submit
    setTimeout($.proxy(function () {
      $el[val](data[state] == null ? this.options[state] : data[state])

      if (state == 'loadingText') {
        this.isLoading = true
        $el.addClass(d).attr(d, d).prop(d, true)
      } else if (this.isLoading) {
        this.isLoading = false
        $el.removeClass(d).removeAttr(d).prop(d, false)
      }
    }, this), 0)
  }

  Button.prototype.toggle = function () {
    var changed = true
    var $parent = this.$element.closest('[data-toggle="buttons"]')

    if ($parent.length) {
      var $input = this.$element.find('input')
      if ($input.prop('type') == 'radio') {
        if ($input.prop('checked')) changed = false
        $parent.find('.active').removeClass('active')
        this.$element.addClass('active')
      } else if ($input.prop('type') == 'checkbox') {
        if (($input.prop('checked')) !== this.$element.hasClass('active')) changed = false
        this.$element.toggleClass('active')
      }
      $input.prop('checked', this.$element.hasClass('active'))
      if (changed) $input.trigger('change')
    } else {
      this.$element.attr('aria-pressed', !this.$element.hasClass('active'))
      this.$element.toggleClass('active')
    }
  }


  // BUTTON PLUGIN DEFINITION
  // ========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.button')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.button', (data = new Button(this, options)))

      if (option == 'toggle') data.toggle()
      else if (option) data.setState(option)
    })
  }

  var old = $.fn.button

  $.fn.button             = Plugin
  $.fn.button.Constructor = Button


  // BUTTON NO CONFLICT
  // ==================

  $.fn.button.noConflict = function () {
    $.fn.button = old
    return this
  }


  // BUTTON DATA-API
  // ===============

  $(document)
    .on('click.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      var $btn = $(e.target).closest('.btn')
      Plugin.call($btn, 'toggle')
      if (!($(e.target).is('input[type="radio"], input[type="checkbox"]'))) {
        // Prevent double click on radios, and the double selections (so cancellation) on checkboxes
        e.preventDefault()
        // The target component still receive the focus
        if ($btn.is('input,button')) $btn.trigger('focus')
        else $btn.find('input:visible,button:visible').first().trigger('focus')
      }
    })
    .on('focus.bs.button.data-api blur.bs.button.data-api', '[data-toggle^="button"]', function (e) {
      $(e.target).closest('.btn').toggleClass('focus', /^focus(in)?$/.test(e.type))
    })

}(jQuery);

/* ========================================================================
 * Bootstrap: carousel.js v3.3.7
 * http://getbootstrap.com/javascript/#carousel
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // CAROUSEL CLASS DEFINITION
  // =========================

  var Carousel = function (element, options) {
    this.$element    = $(element)
    this.$indicators = this.$element.find('.carousel-indicators')
    this.options     = options
    this.paused      = null
    this.sliding     = null
    this.interval    = null
    this.$active     = null
    this.$items      = null

    this.options.keyboard && this.$element.on('keydown.bs.carousel', $.proxy(this.keydown, this))

    this.options.pause == 'hover' && !('ontouchstart' in document.documentElement) && this.$element
      .on('mouseenter.bs.carousel', $.proxy(this.pause, this))
      .on('mouseleave.bs.carousel', $.proxy(this.cycle, this))
  }

  Carousel.VERSION  = '3.3.7'

  Carousel.TRANSITION_DURATION = 600

  Carousel.DEFAULTS = {
    interval: 5000,
    pause: 'hover',
    wrap: true,
    keyboard: true
  }

  Carousel.prototype.keydown = function (e) {
    if (/input|textarea/i.test(e.target.tagName)) return
    switch (e.which) {
      case 37: this.prev(); break
      case 39: this.next(); break
      default: return
    }

    e.preventDefault()
  }

  Carousel.prototype.cycle = function (e) {
    e || (this.paused = false)

    this.interval && clearInterval(this.interval)

    this.options.interval
      && !this.paused
      && (this.interval = setInterval($.proxy(this.next, this), this.options.interval))

    return this
  }

  Carousel.prototype.getItemIndex = function (item) {
    this.$items = item.parent().children('.item')
    return this.$items.index(item || this.$active)
  }

  Carousel.prototype.getItemForDirection = function (direction, active) {
    var activeIndex = this.getItemIndex(active)
    var willWrap = (direction == 'prev' && activeIndex === 0)
                || (direction == 'next' && activeIndex == (this.$items.length - 1))
    if (willWrap && !this.options.wrap) return active
    var delta = direction == 'prev' ? -1 : 1
    var itemIndex = (activeIndex + delta) % this.$items.length
    return this.$items.eq(itemIndex)
  }

  Carousel.prototype.to = function (pos) {
    var that        = this
    var activeIndex = this.getItemIndex(this.$active = this.$element.find('.item.active'))

    if (pos > (this.$items.length - 1) || pos < 0) return

    if (this.sliding)       return this.$element.one('slid.bs.carousel', function () { that.to(pos) }) // yes, "slid"
    if (activeIndex == pos) return this.pause().cycle()

    return this.slide(pos > activeIndex ? 'next' : 'prev', this.$items.eq(pos))
  }

  Carousel.prototype.pause = function (e) {
    e || (this.paused = true)

    if (this.$element.find('.next, .prev').length && $.support.transition) {
      this.$element.trigger($.support.transition.end)
      this.cycle(true)
    }

    this.interval = clearInterval(this.interval)

    return this
  }

  Carousel.prototype.next = function () {
    if (this.sliding) return
    return this.slide('next')
  }

  Carousel.prototype.prev = function () {
    if (this.sliding) return
    return this.slide('prev')
  }

  Carousel.prototype.slide = function (type, next) {
    var $active   = this.$element.find('.item.active')
    var $next     = next || this.getItemForDirection(type, $active)
    var isCycling = this.interval
    var direction = type == 'next' ? 'left' : 'right'
    var that      = this

    if ($next.hasClass('active')) return (this.sliding = false)

    var relatedTarget = $next[0]
    var slideEvent = $.Event('slide.bs.carousel', {
      relatedTarget: relatedTarget,
      direction: direction
    })
    this.$element.trigger(slideEvent)
    if (slideEvent.isDefaultPrevented()) return

    this.sliding = true

    isCycling && this.pause()

    if (this.$indicators.length) {
      this.$indicators.find('.active').removeClass('active')
      var $nextIndicator = $(this.$indicators.children()[this.getItemIndex($next)])
      $nextIndicator && $nextIndicator.addClass('active')
    }

    var slidEvent = $.Event('slid.bs.carousel', { relatedTarget: relatedTarget, direction: direction }) // yes, "slid"
    if ($.support.transition && this.$element.hasClass('slide')) {
      $next.addClass(type)
      $next[0].offsetWidth // force reflow
      $active.addClass(direction)
      $next.addClass(direction)
      $active
        .one('bsTransitionEnd', function () {
          $next.removeClass([type, direction].join(' ')).addClass('active')
          $active.removeClass(['active', direction].join(' '))
          that.sliding = false
          setTimeout(function () {
            that.$element.trigger(slidEvent)
          }, 0)
        })
        .emulateTransitionEnd(Carousel.TRANSITION_DURATION)
    } else {
      $active.removeClass('active')
      $next.addClass('active')
      this.sliding = false
      this.$element.trigger(slidEvent)
    }

    isCycling && this.cycle()

    return this
  }


  // CAROUSEL PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.carousel')
      var options = $.extend({}, Carousel.DEFAULTS, $this.data(), typeof option == 'object' && option)
      var action  = typeof option == 'string' ? option : options.slide

      if (!data) $this.data('bs.carousel', (data = new Carousel(this, options)))
      if (typeof option == 'number') data.to(option)
      else if (action) data[action]()
      else if (options.interval) data.pause().cycle()
    })
  }

  var old = $.fn.carousel

  $.fn.carousel             = Plugin
  $.fn.carousel.Constructor = Carousel


  // CAROUSEL NO CONFLICT
  // ====================

  $.fn.carousel.noConflict = function () {
    $.fn.carousel = old
    return this
  }


  // CAROUSEL DATA-API
  // =================

  var clickHandler = function (e) {
    var href
    var $this   = $(this)
    var $target = $($this.attr('data-target') || (href = $this.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '')) // strip for ie7
    if (!$target.hasClass('carousel')) return
    var options = $.extend({}, $target.data(), $this.data())
    var slideIndex = $this.attr('data-slide-to')
    if (slideIndex) options.interval = false

    Plugin.call($target, options)

    if (slideIndex) {
      $target.data('bs.carousel').to(slideIndex)
    }

    e.preventDefault()
  }

  $(document)
    .on('click.bs.carousel.data-api', '[data-slide]', clickHandler)
    .on('click.bs.carousel.data-api', '[data-slide-to]', clickHandler)

  $(window).on('load', function () {
    $('[data-ride="carousel"]').each(function () {
      var $carousel = $(this)
      Plugin.call($carousel, $carousel.data())
    })
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: collapse.js v3.3.7
 * http://getbootstrap.com/javascript/#collapse
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */

/* jshint latedef: false */

+function ($) {
  'use strict';

  // COLLAPSE PUBLIC CLASS DEFINITION
  // ================================

  var Collapse = function (element, options) {
    this.$element      = $(element)
    this.options       = $.extend({}, Collapse.DEFAULTS, options)
    this.$trigger      = $('[data-toggle="collapse"][href="#' + element.id + '"],' +
                           '[data-toggle="collapse"][data-target="#' + element.id + '"]')
    this.transitioning = null

    if (this.options.parent) {
      this.$parent = this.getParent()
    } else {
      this.addAriaAndCollapsedClass(this.$element, this.$trigger)
    }

    if (this.options.toggle) this.toggle()
  }

  Collapse.VERSION  = '3.3.7'

  Collapse.TRANSITION_DURATION = 350

  Collapse.DEFAULTS = {
    toggle: true
  }

  Collapse.prototype.dimension = function () {
    var hasWidth = this.$element.hasClass('width')
    return hasWidth ? 'width' : 'height'
  }

  Collapse.prototype.show = function () {
    if (this.transitioning || this.$element.hasClass('in')) return

    var activesData
    var actives = this.$parent && this.$parent.children('.panel').children('.in, .collapsing')

    if (actives && actives.length) {
      activesData = actives.data('bs.collapse')
      if (activesData && activesData.transitioning) return
    }

    var startEvent = $.Event('show.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    if (actives && actives.length) {
      Plugin.call(actives, 'hide')
      activesData || actives.data('bs.collapse', null)
    }

    var dimension = this.dimension()

    this.$element
      .removeClass('collapse')
      .addClass('collapsing')[dimension](0)
      .attr('aria-expanded', true)

    this.$trigger
      .removeClass('collapsed')
      .attr('aria-expanded', true)

    this.transitioning = 1

    var complete = function () {
      this.$element
        .removeClass('collapsing')
        .addClass('collapse in')[dimension]('')
      this.transitioning = 0
      this.$element
        .trigger('shown.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    var scrollSize = $.camelCase(['scroll', dimension].join('-'))

    this.$element
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize])
  }

  Collapse.prototype.hide = function () {
    if (this.transitioning || !this.$element.hasClass('in')) return

    var startEvent = $.Event('hide.bs.collapse')
    this.$element.trigger(startEvent)
    if (startEvent.isDefaultPrevented()) return

    var dimension = this.dimension()

    this.$element[dimension](this.$element[dimension]())[0].offsetHeight

    this.$element
      .addClass('collapsing')
      .removeClass('collapse in')
      .attr('aria-expanded', false)

    this.$trigger
      .addClass('collapsed')
      .attr('aria-expanded', false)

    this.transitioning = 1

    var complete = function () {
      this.transitioning = 0
      this.$element
        .removeClass('collapsing')
        .addClass('collapse')
        .trigger('hidden.bs.collapse')
    }

    if (!$.support.transition) return complete.call(this)

    this.$element
      [dimension](0)
      .one('bsTransitionEnd', $.proxy(complete, this))
      .emulateTransitionEnd(Collapse.TRANSITION_DURATION)
  }

  Collapse.prototype.toggle = function () {
    this[this.$element.hasClass('in') ? 'hide' : 'show']()
  }

  Collapse.prototype.getParent = function () {
    return $(this.options.parent)
      .find('[data-toggle="collapse"][data-parent="' + this.options.parent + '"]')
      .each($.proxy(function (i, element) {
        var $element = $(element)
        this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)
      }, this))
      .end()
  }

  Collapse.prototype.addAriaAndCollapsedClass = function ($element, $trigger) {
    var isOpen = $element.hasClass('in')

    $element.attr('aria-expanded', isOpen)
    $trigger
      .toggleClass('collapsed', !isOpen)
      .attr('aria-expanded', isOpen)
  }

  function getTargetFromTrigger($trigger) {
    var href
    var target = $trigger.attr('data-target')
      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\s]+$)/, '') // strip for ie7

    return $(target)
  }


  // COLLAPSE PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.collapse')
      var options = $.extend({}, Collapse.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data && options.toggle && /show|hide/.test(option)) options.toggle = false
      if (!data) $this.data('bs.collapse', (data = new Collapse(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.collapse

  $.fn.collapse             = Plugin
  $.fn.collapse.Constructor = Collapse


  // COLLAPSE NO CONFLICT
  // ====================

  $.fn.collapse.noConflict = function () {
    $.fn.collapse = old
    return this
  }


  // COLLAPSE DATA-API
  // =================

  $(document).on('click.bs.collapse.data-api', '[data-toggle="collapse"]', function (e) {
    var $this   = $(this)

    if (!$this.attr('data-target')) e.preventDefault()

    var $target = getTargetFromTrigger($this)
    var data    = $target.data('bs.collapse')
    var option  = data ? 'toggle' : $this.data()

    Plugin.call($target, option)
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: dropdown.js v3.3.7
 * http://getbootstrap.com/javascript/#dropdowns
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // DROPDOWN CLASS DEFINITION
  // =========================

  var backdrop = '.dropdown-backdrop'
  var toggle   = '[data-toggle="dropdown"]'
  var Dropdown = function (element) {
    $(element).on('click.bs.dropdown', this.toggle)
  }

  Dropdown.VERSION = '3.3.7'

  function getParent($this) {
    var selector = $this.attr('data-target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    var $parent = selector && $(selector)

    return $parent && $parent.length ? $parent : $this.parent()
  }

  function clearMenus(e) {
    if (e && e.which === 3) return
    $(backdrop).remove()
    $(toggle).each(function () {
      var $this         = $(this)
      var $parent       = getParent($this)
      var relatedTarget = { relatedTarget: this }

      if (!$parent.hasClass('open')) return

      if (e && e.type == 'click' && /input|textarea/i.test(e.target.tagName) && $.contains($parent[0], e.target)) return

      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this.attr('aria-expanded', 'false')
      $parent.removeClass('open').trigger($.Event('hidden.bs.dropdown', relatedTarget))
    })
  }

  Dropdown.prototype.toggle = function (e) {
    var $this = $(this)

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    clearMenus()

    if (!isActive) {
      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {
        // if mobile we use a backdrop because click events don't delegate
        $(document.createElement('div'))
          .addClass('dropdown-backdrop')
          .insertAfter($(this))
          .on('click', clearMenus)
      }

      var relatedTarget = { relatedTarget: this }
      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))

      if (e.isDefaultPrevented()) return

      $this
        .trigger('focus')
        .attr('aria-expanded', 'true')

      $parent
        .toggleClass('open')
        .trigger($.Event('shown.bs.dropdown', relatedTarget))
    }

    return false
  }

  Dropdown.prototype.keydown = function (e) {
    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return

    var $this = $(this)

    e.preventDefault()
    e.stopPropagation()

    if ($this.is('.disabled, :disabled')) return

    var $parent  = getParent($this)
    var isActive = $parent.hasClass('open')

    if (!isActive && e.which != 27 || isActive && e.which == 27) {
      if (e.which == 27) $parent.find(toggle).trigger('focus')
      return $this.trigger('click')
    }

    var desc = ' li:not(.disabled):visible a'
    var $items = $parent.find('.dropdown-menu' + desc)

    if (!$items.length) return

    var index = $items.index(e.target)

    if (e.which == 38 && index > 0)                 index--         // up
    if (e.which == 40 && index < $items.length - 1) index++         // down
    if (!~index)                                    index = 0

    $items.eq(index).trigger('focus')
  }


  // DROPDOWN PLUGIN DEFINITION
  // ==========================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.dropdown')

      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))
      if (typeof option == 'string') data[option].call($this)
    })
  }

  var old = $.fn.dropdown

  $.fn.dropdown             = Plugin
  $.fn.dropdown.Constructor = Dropdown


  // DROPDOWN NO CONFLICT
  // ====================

  $.fn.dropdown.noConflict = function () {
    $.fn.dropdown = old
    return this
  }


  // APPLY TO STANDARD DROPDOWN ELEMENTS
  // ===================================

  $(document)
    .on('click.bs.dropdown.data-api', clearMenus)
    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })
    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)
    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)
    .on('keydown.bs.dropdown.data-api', '.dropdown-menu', Dropdown.prototype.keydown)

}(jQuery);

/* ========================================================================
 * Bootstrap: modal.js v3.3.7
 * http://getbootstrap.com/javascript/#modals
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // MODAL CLASS DEFINITION
  // ======================

  var Modal = function (element, options) {
    this.options             = options
    this.$body               = $(document.body)
    this.$element            = $(element)
    this.$dialog             = this.$element.find('.modal-dialog')
    this.$backdrop           = null
    this.isShown             = null
    this.originalBodyPad     = null
    this.scrollbarWidth      = 0
    this.ignoreBackdropClick = false

    if (this.options.remote) {
      this.$element
        .find('.modal-content')
        .load(this.options.remote, $.proxy(function () {
          this.$element.trigger('loaded.bs.modal')
        }, this))
    }
  }

  Modal.VERSION  = '3.3.7'

  Modal.TRANSITION_DURATION = 300
  Modal.BACKDROP_TRANSITION_DURATION = 150

  Modal.DEFAULTS = {
    backdrop: true,
    keyboard: true,
    show: true
  }

  Modal.prototype.toggle = function (_relatedTarget) {
    return this.isShown ? this.hide() : this.show(_relatedTarget)
  }

  Modal.prototype.show = function (_relatedTarget) {
    var that = this
    var e    = $.Event('show.bs.modal', { relatedTarget: _relatedTarget })

    this.$element.trigger(e)

    if (this.isShown || e.isDefaultPrevented()) return

    this.isShown = true

    this.checkScrollbar()
    this.setScrollbar()
    this.$body.addClass('modal-open')

    this.escape()
    this.resize()

    this.$element.on('click.dismiss.bs.modal', '[data-dismiss="modal"]', $.proxy(this.hide, this))

    this.$dialog.on('mousedown.dismiss.bs.modal', function () {
      that.$element.one('mouseup.dismiss.bs.modal', function (e) {
        if ($(e.target).is(that.$element)) that.ignoreBackdropClick = true
      })
    })

    this.backdrop(function () {
      var transition = $.support.transition && that.$element.hasClass('fade')

      if (!that.$element.parent().length) {
        that.$element.appendTo(that.$body) // don't move modals dom position
      }

      that.$element
        .show()
        .scrollTop(0)

      that.adjustDialog()

      if (transition) {
        that.$element[0].offsetWidth // force reflow
      }

      that.$element.addClass('in')

      that.enforceFocus()

      var e = $.Event('shown.bs.modal', { relatedTarget: _relatedTarget })

      transition ?
        that.$dialog // wait for modal to slide in
          .one('bsTransitionEnd', function () {
            that.$element.trigger('focus').trigger(e)
          })
          .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
        that.$element.trigger('focus').trigger(e)
    })
  }

  Modal.prototype.hide = function (e) {
    if (e) e.preventDefault()

    e = $.Event('hide.bs.modal')

    this.$element.trigger(e)

    if (!this.isShown || e.isDefaultPrevented()) return

    this.isShown = false

    this.escape()
    this.resize()

    $(document).off('focusin.bs.modal')

    this.$element
      .removeClass('in')
      .off('click.dismiss.bs.modal')
      .off('mouseup.dismiss.bs.modal')

    this.$dialog.off('mousedown.dismiss.bs.modal')

    $.support.transition && this.$element.hasClass('fade') ?
      this.$element
        .one('bsTransitionEnd', $.proxy(this.hideModal, this))
        .emulateTransitionEnd(Modal.TRANSITION_DURATION) :
      this.hideModal()
  }

  Modal.prototype.enforceFocus = function () {
    $(document)
      .off('focusin.bs.modal') // guard against infinite focus loop
      .on('focusin.bs.modal', $.proxy(function (e) {
        if (document !== e.target &&
            this.$element[0] !== e.target &&
            !this.$element.has(e.target).length) {
          this.$element.trigger('focus')
        }
      }, this))
  }

  Modal.prototype.escape = function () {
    if (this.isShown && this.options.keyboard) {
      this.$element.on('keydown.dismiss.bs.modal', $.proxy(function (e) {
        e.which == 27 && this.hide()
      }, this))
    } else if (!this.isShown) {
      this.$element.off('keydown.dismiss.bs.modal')
    }
  }

  Modal.prototype.resize = function () {
    if (this.isShown) {
      $(window).on('resize.bs.modal', $.proxy(this.handleUpdate, this))
    } else {
      $(window).off('resize.bs.modal')
    }
  }

  Modal.prototype.hideModal = function () {
    var that = this
    this.$element.hide()
    this.backdrop(function () {
      that.$body.removeClass('modal-open')
      that.resetAdjustments()
      that.resetScrollbar()
      that.$element.trigger('hidden.bs.modal')
    })
  }

  Modal.prototype.removeBackdrop = function () {
    this.$backdrop && this.$backdrop.remove()
    this.$backdrop = null
  }

  Modal.prototype.backdrop = function (callback) {
    var that = this
    var animate = this.$element.hasClass('fade') ? 'fade' : ''

    if (this.isShown && this.options.backdrop) {
      var doAnimate = $.support.transition && animate

      this.$backdrop = $(document.createElement('div'))
        .addClass('modal-backdrop ' + animate)
        .appendTo(this.$body)

      this.$element.on('click.dismiss.bs.modal', $.proxy(function (e) {
        if (this.ignoreBackdropClick) {
          this.ignoreBackdropClick = false
          return
        }
        if (e.target !== e.currentTarget) return
        this.options.backdrop == 'static'
          ? this.$element[0].focus()
          : this.hide()
      }, this))

      if (doAnimate) this.$backdrop[0].offsetWidth // force reflow

      this.$backdrop.addClass('in')

      if (!callback) return

      doAnimate ?
        this.$backdrop
          .one('bsTransitionEnd', callback)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callback()

    } else if (!this.isShown && this.$backdrop) {
      this.$backdrop.removeClass('in')

      var callbackRemove = function () {
        that.removeBackdrop()
        callback && callback()
      }
      $.support.transition && this.$element.hasClass('fade') ?
        this.$backdrop
          .one('bsTransitionEnd', callbackRemove)
          .emulateTransitionEnd(Modal.BACKDROP_TRANSITION_DURATION) :
        callbackRemove()

    } else if (callback) {
      callback()
    }
  }

  // these following methods are used to handle overflowing modals

  Modal.prototype.handleUpdate = function () {
    this.adjustDialog()
  }

  Modal.prototype.adjustDialog = function () {
    var modalIsOverflowing = this.$element[0].scrollHeight > document.documentElement.clientHeight

    this.$element.css({
      paddingLeft:  !this.bodyIsOverflowing && modalIsOverflowing ? this.scrollbarWidth : '',
      paddingRight: this.bodyIsOverflowing && !modalIsOverflowing ? this.scrollbarWidth : ''
    })
  }

  Modal.prototype.resetAdjustments = function () {
    this.$element.css({
      paddingLeft: '',
      paddingRight: ''
    })
  }

  Modal.prototype.checkScrollbar = function () {
    var fullWindowWidth = window.innerWidth
    if (!fullWindowWidth) { // workaround for missing window.innerWidth in IE8
      var documentElementRect = document.documentElement.getBoundingClientRect()
      fullWindowWidth = documentElementRect.right - Math.abs(documentElementRect.left)
    }
    this.bodyIsOverflowing = document.body.clientWidth < fullWindowWidth
    this.scrollbarWidth = this.measureScrollbar()
  }

  Modal.prototype.setScrollbar = function () {
    var bodyPad = parseInt((this.$body.css('padding-right') || 0), 10)
    this.originalBodyPad = document.body.style.paddingRight || ''
    if (this.bodyIsOverflowing) this.$body.css('padding-right', bodyPad + this.scrollbarWidth)
  }

  Modal.prototype.resetScrollbar = function () {
    this.$body.css('padding-right', this.originalBodyPad)
  }

  Modal.prototype.measureScrollbar = function () { // thx walsh
    var scrollDiv = document.createElement('div')
    scrollDiv.className = 'modal-scrollbar-measure'
    this.$body.append(scrollDiv)
    var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth
    this.$body[0].removeChild(scrollDiv)
    return scrollbarWidth
  }


  // MODAL PLUGIN DEFINITION
  // =======================

  function Plugin(option, _relatedTarget) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.modal')
      var options = $.extend({}, Modal.DEFAULTS, $this.data(), typeof option == 'object' && option)

      if (!data) $this.data('bs.modal', (data = new Modal(this, options)))
      if (typeof option == 'string') data[option](_relatedTarget)
      else if (options.show) data.show(_relatedTarget)
    })
  }

  var old = $.fn.modal

  $.fn.modal             = Plugin
  $.fn.modal.Constructor = Modal


  // MODAL NO CONFLICT
  // =================

  $.fn.modal.noConflict = function () {
    $.fn.modal = old
    return this
  }


  // MODAL DATA-API
  // ==============

  $(document).on('click.bs.modal.data-api', '[data-toggle="modal"]', function (e) {
    var $this   = $(this)
    var href    = $this.attr('href')
    var $target = $($this.attr('data-target') || (href && href.replace(/.*(?=#[^\s]+$)/, ''))) // strip for ie7
    var option  = $target.data('bs.modal') ? 'toggle' : $.extend({ remote: !/#/.test(href) && href }, $target.data(), $this.data())

    if ($this.is('a')) e.preventDefault()

    $target.one('show.bs.modal', function (showEvent) {
      if (showEvent.isDefaultPrevented()) return // only register focus restorer if modal will actually get shown
      $target.one('hidden.bs.modal', function () {
        $this.is(':visible') && $this.trigger('focus')
      })
    })
    Plugin.call($target, option, this)
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: tooltip.js v3.3.7
 * http://getbootstrap.com/javascript/#tooltip
 * Inspired by the original jQuery.tipsy by Jason Frame
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TOOLTIP PUBLIC CLASS DEFINITION
  // ===============================

  var Tooltip = function (element, options) {
    this.type       = null
    this.options    = null
    this.enabled    = null
    this.timeout    = null
    this.hoverState = null
    this.$element   = null
    this.inState    = null

    this.init('tooltip', element, options)
  }

  Tooltip.VERSION  = '3.3.7'

  Tooltip.TRANSITION_DURATION = 150

  Tooltip.DEFAULTS = {
    animation: true,
    placement: 'top',
    selector: false,
    template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',
    trigger: 'hover focus',
    title: '',
    delay: 0,
    html: false,
    container: false,
    viewport: {
      selector: 'body',
      padding: 0
    }
  }

  Tooltip.prototype.init = function (type, element, options) {
    this.enabled   = true
    this.type      = type
    this.$element  = $(element)
    this.options   = this.getOptions(options)
    this.$viewport = this.options.viewport && $($.isFunction(this.options.viewport) ? this.options.viewport.call(this, this.$element) : (this.options.viewport.selector || this.options.viewport))
    this.inState   = { click: false, hover: false, focus: false }

    if (this.$element[0] instanceof document.constructor && !this.options.selector) {
      throw new Error('`selector` option must be specified when initializing ' + this.type + ' on the window.document object!')
    }

    var triggers = this.options.trigger.split(' ')

    for (var i = triggers.length; i--;) {
      var trigger = triggers[i]

      if (trigger == 'click') {
        this.$element.on('click.' + this.type, this.options.selector, $.proxy(this.toggle, this))
      } else if (trigger != 'manual') {
        var eventIn  = trigger == 'hover' ? 'mouseenter' : 'focusin'
        var eventOut = trigger == 'hover' ? 'mouseleave' : 'focusout'

        this.$element.on(eventIn  + '.' + this.type, this.options.selector, $.proxy(this.enter, this))
        this.$element.on(eventOut + '.' + this.type, this.options.selector, $.proxy(this.leave, this))
      }
    }

    this.options.selector ?
      (this._options = $.extend({}, this.options, { trigger: 'manual', selector: '' })) :
      this.fixTitle()
  }

  Tooltip.prototype.getDefaults = function () {
    return Tooltip.DEFAULTS
  }

  Tooltip.prototype.getOptions = function (options) {
    options = $.extend({}, this.getDefaults(), this.$element.data(), options)

    if (options.delay && typeof options.delay == 'number') {
      options.delay = {
        show: options.delay,
        hide: options.delay
      }
    }

    return options
  }

  Tooltip.prototype.getDelegateOptions = function () {
    var options  = {}
    var defaults = this.getDefaults()

    this._options && $.each(this._options, function (key, value) {
      if (defaults[key] != value) options[key] = value
    })

    return options
  }

  Tooltip.prototype.enter = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusin' ? 'focus' : 'hover'] = true
    }

    if (self.tip().hasClass('in') || self.hoverState == 'in') {
      self.hoverState = 'in'
      return
    }

    clearTimeout(self.timeout)

    self.hoverState = 'in'

    if (!self.options.delay || !self.options.delay.show) return self.show()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'in') self.show()
    }, self.options.delay.show)
  }

  Tooltip.prototype.isInStateTrue = function () {
    for (var key in this.inState) {
      if (this.inState[key]) return true
    }

    return false
  }

  Tooltip.prototype.leave = function (obj) {
    var self = obj instanceof this.constructor ?
      obj : $(obj.currentTarget).data('bs.' + this.type)

    if (!self) {
      self = new this.constructor(obj.currentTarget, this.getDelegateOptions())
      $(obj.currentTarget).data('bs.' + this.type, self)
    }

    if (obj instanceof $.Event) {
      self.inState[obj.type == 'focusout' ? 'focus' : 'hover'] = false
    }

    if (self.isInStateTrue()) return

    clearTimeout(self.timeout)

    self.hoverState = 'out'

    if (!self.options.delay || !self.options.delay.hide) return self.hide()

    self.timeout = setTimeout(function () {
      if (self.hoverState == 'out') self.hide()
    }, self.options.delay.hide)
  }

  Tooltip.prototype.show = function () {
    var e = $.Event('show.bs.' + this.type)

    if (this.hasContent() && this.enabled) {
      this.$element.trigger(e)

      var inDom = $.contains(this.$element[0].ownerDocument.documentElement, this.$element[0])
      if (e.isDefaultPrevented() || !inDom) return
      var that = this

      var $tip = this.tip()

      var tipId = this.getUID(this.type)

      this.setContent()
      $tip.attr('id', tipId)
      this.$element.attr('aria-describedby', tipId)

      if (this.options.animation) $tip.addClass('fade')

      var placement = typeof this.options.placement == 'function' ?
        this.options.placement.call(this, $tip[0], this.$element[0]) :
        this.options.placement

      var autoToken = /\s?auto?\s?/i
      var autoPlace = autoToken.test(placement)
      if (autoPlace) placement = placement.replace(autoToken, '') || 'top'

      $tip
        .detach()
        .css({ top: 0, left: 0, display: 'block' })
        .addClass(placement)
        .data('bs.' + this.type, this)

      this.options.container ? $tip.appendTo(this.options.container) : $tip.insertAfter(this.$element)
      this.$element.trigger('inserted.bs.' + this.type)

      var pos          = this.getPosition()
      var actualWidth  = $tip[0].offsetWidth
      var actualHeight = $tip[0].offsetHeight

      if (autoPlace) {
        var orgPlacement = placement
        var viewportDim = this.getPosition(this.$viewport)

        placement = placement == 'bottom' && pos.bottom + actualHeight > viewportDim.bottom ? 'top'    :
                    placement == 'top'    && pos.top    - actualHeight < viewportDim.top    ? 'bottom' :
                    placement == 'right'  && pos.right  + actualWidth  > viewportDim.width  ? 'left'   :
                    placement == 'left'   && pos.left   - actualWidth  < viewportDim.left   ? 'right'  :
                    placement

        $tip
          .removeClass(orgPlacement)
          .addClass(placement)
      }

      var calculatedOffset = this.getCalculatedOffset(placement, pos, actualWidth, actualHeight)

      this.applyPlacement(calculatedOffset, placement)

      var complete = function () {
        var prevHoverState = that.hoverState
        that.$element.trigger('shown.bs.' + that.type)
        that.hoverState = null

        if (prevHoverState == 'out') that.leave(that)
      }

      $.support.transition && this.$tip.hasClass('fade') ?
        $tip
          .one('bsTransitionEnd', complete)
          .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
        complete()
    }
  }

  Tooltip.prototype.applyPlacement = function (offset, placement) {
    var $tip   = this.tip()
    var width  = $tip[0].offsetWidth
    var height = $tip[0].offsetHeight

    // manually read margins because getBoundingClientRect includes difference
    var marginTop = parseInt($tip.css('margin-top'), 10)
    var marginLeft = parseInt($tip.css('margin-left'), 10)

    // we must check for NaN for ie 8/9
    if (isNaN(marginTop))  marginTop  = 0
    if (isNaN(marginLeft)) marginLeft = 0

    offset.top  += marginTop
    offset.left += marginLeft

    // $.fn.offset doesn't round pixel values
    // so we use setOffset directly with our own function B-0
    $.offset.setOffset($tip[0], $.extend({
      using: function (props) {
        $tip.css({
          top: Math.round(props.top),
          left: Math.round(props.left)
        })
      }
    }, offset), 0)

    $tip.addClass('in')

    // check to see if placing tip in new offset caused the tip to resize itself
    var actualWidth  = $tip[0].offsetWidth
    var actualHeight = $tip[0].offsetHeight

    if (placement == 'top' && actualHeight != height) {
      offset.top = offset.top + height - actualHeight
    }

    var delta = this.getViewportAdjustedDelta(placement, offset, actualWidth, actualHeight)

    if (delta.left) offset.left += delta.left
    else offset.top += delta.top

    var isVertical          = /top|bottom/.test(placement)
    var arrowDelta          = isVertical ? delta.left * 2 - width + actualWidth : delta.top * 2 - height + actualHeight
    var arrowOffsetPosition = isVertical ? 'offsetWidth' : 'offsetHeight'

    $tip.offset(offset)
    this.replaceArrow(arrowDelta, $tip[0][arrowOffsetPosition], isVertical)
  }

  Tooltip.prototype.replaceArrow = function (delta, dimension, isVertical) {
    this.arrow()
      .css(isVertical ? 'left' : 'top', 50 * (1 - delta / dimension) + '%')
      .css(isVertical ? 'top' : 'left', '')
  }

  Tooltip.prototype.setContent = function () {
    var $tip  = this.tip()
    var title = this.getTitle()

    $tip.find('.tooltip-inner')[this.options.html ? 'html' : 'text'](title)
    $tip.removeClass('fade in top bottom left right')
  }

  Tooltip.prototype.hide = function (callback) {
    var that = this
    var $tip = $(this.$tip)
    var e    = $.Event('hide.bs.' + this.type)

    function complete() {
      if (that.hoverState != 'in') $tip.detach()
      if (that.$element) { // TODO: Check whether guarding this code with this `if` is really necessary.
        that.$element
          .removeAttr('aria-describedby')
          .trigger('hidden.bs.' + that.type)
      }
      callback && callback()
    }

    this.$element.trigger(e)

    if (e.isDefaultPrevented()) return

    $tip.removeClass('in')

    $.support.transition && $tip.hasClass('fade') ?
      $tip
        .one('bsTransitionEnd', complete)
        .emulateTransitionEnd(Tooltip.TRANSITION_DURATION) :
      complete()

    this.hoverState = null

    return this
  }

  Tooltip.prototype.fixTitle = function () {
    var $e = this.$element
    if ($e.attr('title') || typeof $e.attr('data-original-title') != 'string') {
      $e.attr('data-original-title', $e.attr('title') || '').attr('title', '')
    }
  }

  Tooltip.prototype.hasContent = function () {
    return this.getTitle()
  }

  Tooltip.prototype.getPosition = function ($element) {
    $element   = $element || this.$element

    var el     = $element[0]
    var isBody = el.tagName == 'BODY'

    var elRect    = el.getBoundingClientRect()
    if (elRect.width == null) {
      // width and height are missing in IE8, so compute them manually; see https://github.com/twbs/bootstrap/issues/14093
      elRect = $.extend({}, elRect, { width: elRect.right - elRect.left, height: elRect.bottom - elRect.top })
    }
    var isSvg = window.SVGElement && el instanceof window.SVGElement
    // Avoid using $.offset() on SVGs since it gives incorrect results in jQuery 3.
    // See https://github.com/twbs/bootstrap/issues/20280
    var elOffset  = isBody ? { top: 0, left: 0 } : (isSvg ? null : $element.offset())
    var scroll    = { scroll: isBody ? document.documentElement.scrollTop || document.body.scrollTop : $element.scrollTop() }
    var outerDims = isBody ? { width: $(window).width(), height: $(window).height() } : null

    return $.extend({}, elRect, scroll, outerDims, elOffset)
  }

  Tooltip.prototype.getCalculatedOffset = function (placement, pos, actualWidth, actualHeight) {
    return placement == 'bottom' ? { top: pos.top + pos.height,   left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'top'    ? { top: pos.top - actualHeight, left: pos.left + pos.width / 2 - actualWidth / 2 } :
           placement == 'left'   ? { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left - actualWidth } :
        /* placement == 'right' */ { top: pos.top + pos.height / 2 - actualHeight / 2, left: pos.left + pos.width }

  }

  Tooltip.prototype.getViewportAdjustedDelta = function (placement, pos, actualWidth, actualHeight) {
    var delta = { top: 0, left: 0 }
    if (!this.$viewport) return delta

    var viewportPadding = this.options.viewport && this.options.viewport.padding || 0
    var viewportDimensions = this.getPosition(this.$viewport)

    if (/right|left/.test(placement)) {
      var topEdgeOffset    = pos.top - viewportPadding - viewportDimensions.scroll
      var bottomEdgeOffset = pos.top + viewportPadding - viewportDimensions.scroll + actualHeight
      if (topEdgeOffset < viewportDimensions.top) { // top overflow
        delta.top = viewportDimensions.top - topEdgeOffset
      } else if (bottomEdgeOffset > viewportDimensions.top + viewportDimensions.height) { // bottom overflow
        delta.top = viewportDimensions.top + viewportDimensions.height - bottomEdgeOffset
      }
    } else {
      var leftEdgeOffset  = pos.left - viewportPadding
      var rightEdgeOffset = pos.left + viewportPadding + actualWidth
      if (leftEdgeOffset < viewportDimensions.left) { // left overflow
        delta.left = viewportDimensions.left - leftEdgeOffset
      } else if (rightEdgeOffset > viewportDimensions.right) { // right overflow
        delta.left = viewportDimensions.left + viewportDimensions.width - rightEdgeOffset
      }
    }

    return delta
  }

  Tooltip.prototype.getTitle = function () {
    var title
    var $e = this.$element
    var o  = this.options

    title = $e.attr('data-original-title')
      || (typeof o.title == 'function' ? o.title.call($e[0]) :  o.title)

    return title
  }

  Tooltip.prototype.getUID = function (prefix) {
    do prefix += ~~(Math.random() * 1000000)
    while (document.getElementById(prefix))
    return prefix
  }

  Tooltip.prototype.tip = function () {
    if (!this.$tip) {
      this.$tip = $(this.options.template)
      if (this.$tip.length != 1) {
        throw new Error(this.type + ' `template` option must consist of exactly 1 top-level element!')
      }
    }
    return this.$tip
  }

  Tooltip.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.tooltip-arrow'))
  }

  Tooltip.prototype.enable = function () {
    this.enabled = true
  }

  Tooltip.prototype.disable = function () {
    this.enabled = false
  }

  Tooltip.prototype.toggleEnabled = function () {
    this.enabled = !this.enabled
  }

  Tooltip.prototype.toggle = function (e) {
    var self = this
    if (e) {
      self = $(e.currentTarget).data('bs.' + this.type)
      if (!self) {
        self = new this.constructor(e.currentTarget, this.getDelegateOptions())
        $(e.currentTarget).data('bs.' + this.type, self)
      }
    }

    if (e) {
      self.inState.click = !self.inState.click
      if (self.isInStateTrue()) self.enter(self)
      else self.leave(self)
    } else {
      self.tip().hasClass('in') ? self.leave(self) : self.enter(self)
    }
  }

  Tooltip.prototype.destroy = function () {
    var that = this
    clearTimeout(this.timeout)
    this.hide(function () {
      that.$element.off('.' + that.type).removeData('bs.' + that.type)
      if (that.$tip) {
        that.$tip.detach()
      }
      that.$tip = null
      that.$arrow = null
      that.$viewport = null
      that.$element = null
    })
  }


  // TOOLTIP PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.tooltip')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.tooltip', (data = new Tooltip(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tooltip

  $.fn.tooltip             = Plugin
  $.fn.tooltip.Constructor = Tooltip


  // TOOLTIP NO CONFLICT
  // ===================

  $.fn.tooltip.noConflict = function () {
    $.fn.tooltip = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: popover.js v3.3.7
 * http://getbootstrap.com/javascript/#popovers
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // POPOVER PUBLIC CLASS DEFINITION
  // ===============================

  var Popover = function (element, options) {
    this.init('popover', element, options)
  }

  if (!$.fn.tooltip) throw new Error('Popover requires tooltip.js')

  Popover.VERSION  = '3.3.7'

  Popover.DEFAULTS = $.extend({}, $.fn.tooltip.Constructor.DEFAULTS, {
    placement: 'right',
    trigger: 'click',
    content: '',
    template: '<div class="popover" role="tooltip"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'
  })


  // NOTE: POPOVER EXTENDS tooltip.js
  // ================================

  Popover.prototype = $.extend({}, $.fn.tooltip.Constructor.prototype)

  Popover.prototype.constructor = Popover

  Popover.prototype.getDefaults = function () {
    return Popover.DEFAULTS
  }

  Popover.prototype.setContent = function () {
    var $tip    = this.tip()
    var title   = this.getTitle()
    var content = this.getContent()

    $tip.find('.popover-title')[this.options.html ? 'html' : 'text'](title)
    $tip.find('.popover-content').children().detach().end()[ // we use append for html objects to maintain js events
      this.options.html ? (typeof content == 'string' ? 'html' : 'append') : 'text'
    ](content)

    $tip.removeClass('fade top bottom left right in')

    // IE8 doesn't accept hiding via the `:empty` pseudo selector, we have to do
    // this manually by checking the contents.
    if (!$tip.find('.popover-title').html()) $tip.find('.popover-title').hide()
  }

  Popover.prototype.hasContent = function () {
    return this.getTitle() || this.getContent()
  }

  Popover.prototype.getContent = function () {
    var $e = this.$element
    var o  = this.options

    return $e.attr('data-content')
      || (typeof o.content == 'function' ?
            o.content.call($e[0]) :
            o.content)
  }

  Popover.prototype.arrow = function () {
    return (this.$arrow = this.$arrow || this.tip().find('.arrow'))
  }


  // POPOVER PLUGIN DEFINITION
  // =========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.popover')
      var options = typeof option == 'object' && option

      if (!data && /destroy|hide/.test(option)) return
      if (!data) $this.data('bs.popover', (data = new Popover(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.popover

  $.fn.popover             = Plugin
  $.fn.popover.Constructor = Popover


  // POPOVER NO CONFLICT
  // ===================

  $.fn.popover.noConflict = function () {
    $.fn.popover = old
    return this
  }

}(jQuery);

/* ========================================================================
 * Bootstrap: scrollspy.js v3.3.7
 * http://getbootstrap.com/javascript/#scrollspy
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // SCROLLSPY CLASS DEFINITION
  // ==========================

  function ScrollSpy(element, options) {
    this.$body          = $(document.body)
    this.$scrollElement = $(element).is(document.body) ? $(window) : $(element)
    this.options        = $.extend({}, ScrollSpy.DEFAULTS, options)
    this.selector       = (this.options.target || '') + ' .nav li > a'
    this.offsets        = []
    this.targets        = []
    this.activeTarget   = null
    this.scrollHeight   = 0

    this.$scrollElement.on('scroll.bs.scrollspy', $.proxy(this.process, this))
    this.refresh()
    this.process()
  }

  ScrollSpy.VERSION  = '3.3.7'

  ScrollSpy.DEFAULTS = {
    offset: 10
  }

  ScrollSpy.prototype.getScrollHeight = function () {
    return this.$scrollElement[0].scrollHeight || Math.max(this.$body[0].scrollHeight, document.documentElement.scrollHeight)
  }

  ScrollSpy.prototype.refresh = function () {
    var that          = this
    var offsetMethod  = 'offset'
    var offsetBase    = 0

    this.offsets      = []
    this.targets      = []
    this.scrollHeight = this.getScrollHeight()

    if (!$.isWindow(this.$scrollElement[0])) {
      offsetMethod = 'position'
      offsetBase   = this.$scrollElement.scrollTop()
    }

    this.$body
      .find(this.selector)
      .map(function () {
        var $el   = $(this)
        var href  = $el.data('target') || $el.attr('href')
        var $href = /^#./.test(href) && $(href)

        return ($href
          && $href.length
          && $href.is(':visible')
          && [[$href[offsetMethod]().top + offsetBase, href]]) || null
      })
      .sort(function (a, b) { return a[0] - b[0] })
      .each(function () {
        that.offsets.push(this[0])
        that.targets.push(this[1])
      })
  }

  ScrollSpy.prototype.process = function () {
    var scrollTop    = this.$scrollElement.scrollTop() + this.options.offset
    var scrollHeight = this.getScrollHeight()
    var maxScroll    = this.options.offset + scrollHeight - this.$scrollElement.height()
    var offsets      = this.offsets
    var targets      = this.targets
    var activeTarget = this.activeTarget
    var i

    if (this.scrollHeight != scrollHeight) {
      this.refresh()
    }

    if (scrollTop >= maxScroll) {
      return activeTarget != (i = targets[targets.length - 1]) && this.activate(i)
    }

    if (activeTarget && scrollTop < offsets[0]) {
      this.activeTarget = null
      return this.clear()
    }

    for (i = offsets.length; i--;) {
      activeTarget != targets[i]
        && scrollTop >= offsets[i]
        && (offsets[i + 1] === undefined || scrollTop < offsets[i + 1])
        && this.activate(targets[i])
    }
  }

  ScrollSpy.prototype.activate = function (target) {
    this.activeTarget = target

    this.clear()

    var selector = this.selector +
      '[data-target="' + target + '"],' +
      this.selector + '[href="' + target + '"]'

    var active = $(selector)
      .parents('li')
      .addClass('active')

    if (active.parent('.dropdown-menu').length) {
      active = active
        .closest('li.dropdown')
        .addClass('active')
    }

    active.trigger('activate.bs.scrollspy')
  }

  ScrollSpy.prototype.clear = function () {
    $(this.selector)
      .parentsUntil(this.options.target, '.active')
      .removeClass('active')
  }


  // SCROLLSPY PLUGIN DEFINITION
  // ===========================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.scrollspy')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.scrollspy', (data = new ScrollSpy(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.scrollspy

  $.fn.scrollspy             = Plugin
  $.fn.scrollspy.Constructor = ScrollSpy


  // SCROLLSPY NO CONFLICT
  // =====================

  $.fn.scrollspy.noConflict = function () {
    $.fn.scrollspy = old
    return this
  }


  // SCROLLSPY DATA-API
  // ==================

  $(window).on('load.bs.scrollspy.data-api', function () {
    $('[data-spy="scroll"]').each(function () {
      var $spy = $(this)
      Plugin.call($spy, $spy.data())
    })
  })

}(jQuery);

/* ========================================================================
 * Bootstrap: tab.js v3.3.7
 * http://getbootstrap.com/javascript/#tabs
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // TAB CLASS DEFINITION
  // ====================

  var Tab = function (element) {
    // jscs:disable requireDollarBeforejQueryAssignment
    this.element = $(element)
    // jscs:enable requireDollarBeforejQueryAssignment
  }

  Tab.VERSION = '3.3.7'

  Tab.TRANSITION_DURATION = 150

  Tab.prototype.show = function () {
    var $this    = this.element
    var $ul      = $this.closest('ul:not(.dropdown-menu)')
    var selector = $this.data('target')

    if (!selector) {
      selector = $this.attr('href')
      selector = selector && selector.replace(/.*(?=#[^\s]*$)/, '') // strip for ie7
    }

    if ($this.parent('li').hasClass('active')) return

    var $previous = $ul.find('.active:last a')
    var hideEvent = $.Event('hide.bs.tab', {
      relatedTarget: $this[0]
    })
    var showEvent = $.Event('show.bs.tab', {
      relatedTarget: $previous[0]
    })

    $previous.trigger(hideEvent)
    $this.trigger(showEvent)

    if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return

    var $target = $(selector)

    this.activate($this.closest('li'), $ul)
    this.activate($target, $target.parent(), function () {
      $previous.trigger({
        type: 'hidden.bs.tab',
        relatedTarget: $this[0]
      })
      $this.trigger({
        type: 'shown.bs.tab',
        relatedTarget: $previous[0]
      })
    })
  }

  Tab.prototype.activate = function (element, container, callback) {
    var $active    = container.find('> .active')
    var transition = callback
      && $.support.transition
      && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)

    function next() {
      $active
        .removeClass('active')
        .find('> .dropdown-menu > .active')
          .removeClass('active')
        .end()
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', false)

      element
        .addClass('active')
        .find('[data-toggle="tab"]')
          .attr('aria-expanded', true)

      if (transition) {
        element[0].offsetWidth // reflow for transition
        element.addClass('in')
      } else {
        element.removeClass('fade')
      }

      if (element.parent('.dropdown-menu').length) {
        element
          .closest('li.dropdown')
            .addClass('active')
          .end()
          .find('[data-toggle="tab"]')
            .attr('aria-expanded', true)
      }

      callback && callback()
    }

    $active.length && transition ?
      $active
        .one('bsTransitionEnd', next)
        .emulateTransitionEnd(Tab.TRANSITION_DURATION) :
      next()

    $active.removeClass('in')
  }


  // TAB PLUGIN DEFINITION
  // =====================

  function Plugin(option) {
    return this.each(function () {
      var $this = $(this)
      var data  = $this.data('bs.tab')

      if (!data) $this.data('bs.tab', (data = new Tab(this)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.tab

  $.fn.tab             = Plugin
  $.fn.tab.Constructor = Tab


  // TAB NO CONFLICT
  // ===============

  $.fn.tab.noConflict = function () {
    $.fn.tab = old
    return this
  }


  // TAB DATA-API
  // ============

  var clickHandler = function (e) {
    e.preventDefault()
    Plugin.call($(this), 'show')
  }

  $(document)
    .on('click.bs.tab.data-api', '[data-toggle="tab"]', clickHandler)
    .on('click.bs.tab.data-api', '[data-toggle="pill"]', clickHandler)

}(jQuery);

/* ========================================================================
 * Bootstrap: affix.js v3.3.7
 * http://getbootstrap.com/javascript/#affix
 * ========================================================================
 * Copyright 2011-2016 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * ======================================================================== */


+function ($) {
  'use strict';

  // AFFIX CLASS DEFINITION
  // ======================

  var Affix = function (element, options) {
    this.options = $.extend({}, Affix.DEFAULTS, options)

    this.$target = $(this.options.target)
      .on('scroll.bs.affix.data-api', $.proxy(this.checkPosition, this))
      .on('click.bs.affix.data-api',  $.proxy(this.checkPositionWithEventLoop, this))

    this.$element     = $(element)
    this.affixed      = null
    this.unpin        = null
    this.pinnedOffset = null

    this.checkPosition()
  }

  Affix.VERSION  = '3.3.7'

  Affix.RESET    = 'affix affix-top affix-bottom'

  Affix.DEFAULTS = {
    offset: 0,
    target: window
  }

  Affix.prototype.getState = function (scrollHeight, height, offsetTop, offsetBottom) {
    var scrollTop    = this.$target.scrollTop()
    var position     = this.$element.offset()
    var targetHeight = this.$target.height()

    if (offsetTop != null && this.affixed == 'top') return scrollTop < offsetTop ? 'top' : false

    if (this.affixed == 'bottom') {
      if (offsetTop != null) return (scrollTop + this.unpin <= position.top) ? false : 'bottom'
      return (scrollTop + targetHeight <= scrollHeight - offsetBottom) ? false : 'bottom'
    }

    var initializing   = this.affixed == null
    var colliderTop    = initializing ? scrollTop : position.top
    var colliderHeight = initializing ? targetHeight : height

    if (offsetTop != null && scrollTop <= offsetTop) return 'top'
    if (offsetBottom != null && (colliderTop + colliderHeight >= scrollHeight - offsetBottom)) return 'bottom'

    return false
  }

  Affix.prototype.getPinnedOffset = function () {
    if (this.pinnedOffset) return this.pinnedOffset
    this.$element.removeClass(Affix.RESET).addClass('affix')
    var scrollTop = this.$target.scrollTop()
    var position  = this.$element.offset()
    return (this.pinnedOffset = position.top - scrollTop)
  }

  Affix.prototype.checkPositionWithEventLoop = function () {
    setTimeout($.proxy(this.checkPosition, this), 1)
  }

  Affix.prototype.checkPosition = function () {
    if (!this.$element.is(':visible')) return

    var height       = this.$element.height()
    var offset       = this.options.offset
    var offsetTop    = offset.top
    var offsetBottom = offset.bottom
    var scrollHeight = Math.max($(document).height(), $(document.body).height())

    if (typeof offset != 'object')         offsetBottom = offsetTop = offset
    if (typeof offsetTop == 'function')    offsetTop    = offset.top(this.$element)
    if (typeof offsetBottom == 'function') offsetBottom = offset.bottom(this.$element)

    var affix = this.getState(scrollHeight, height, offsetTop, offsetBottom)

    if (this.affixed != affix) {
      if (this.unpin != null) this.$element.css('top', '')

      var affixType = 'affix' + (affix ? '-' + affix : '')
      var e         = $.Event(affixType + '.bs.affix')

      this.$element.trigger(e)

      if (e.isDefaultPrevented()) return

      this.affixed = affix
      this.unpin = affix == 'bottom' ? this.getPinnedOffset() : null

      this.$element
        .removeClass(Affix.RESET)
        .addClass(affixType)
        .trigger(affixType.replace('affix', 'affixed') + '.bs.affix')
    }

    if (affix == 'bottom') {
      this.$element.offset({
        top: scrollHeight - height - offsetBottom
      })
    }
  }


  // AFFIX PLUGIN DEFINITION
  // =======================

  function Plugin(option) {
    return this.each(function () {
      var $this   = $(this)
      var data    = $this.data('bs.affix')
      var options = typeof option == 'object' && option

      if (!data) $this.data('bs.affix', (data = new Affix(this, options)))
      if (typeof option == 'string') data[option]()
    })
  }

  var old = $.fn.affix

  $.fn.affix             = Plugin
  $.fn.affix.Constructor = Affix


  // AFFIX NO CONFLICT
  // =================

  $.fn.affix.noConflict = function () {
    $.fn.affix = old
    return this
  }


  // AFFIX DATA-API
  // ==============

  $(window).on('load', function () {
    $('[data-spy="affix"]').each(function () {
      var $spy = $(this)
      var data = $spy.data()

      data.offset = data.offset || {}

      if (data.offsetBottom != null) data.offset.bottom = data.offsetBottom
      if (data.offsetTop    != null) data.offset.top    = data.offsetTop

      Plugin.call($spy, data)
    })
  })

}(jQuery);

},{}],94:[function(require,module,exports){
(function (global){
/*! jQuery Validation Plugin - v1.17.0 - 7/29/2017
 * https://jqueryvalidation.org/
 * Copyright (c) 2017 JÃ¶rn Zaefferer; Licensed MIT */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):"object"==typeof module&&module.exports?module.exports=a((typeof window !== "undefined" ? window['jQuery'] : typeof global !== "undefined" ? global['jQuery'] : null)):a(jQuery)}(function(a){a.extend(a.fn,{validate:function(b){if(!this.length)return void(b&&b.debug&&window.console&&console.warn("Nothing selected, can't validate, returning nothing."));var c=a.data(this[0],"validator");return c?c:(this.attr("novalidate","novalidate"),c=new a.validator(b,this[0]),a.data(this[0],"validator",c),c.settings.onsubmit&&(this.on("click.validate",":submit",function(b){c.submitButton=b.currentTarget,a(this).hasClass("cancel")&&(c.cancelSubmit=!0),void 0!==a(this).attr("formnovalidate")&&(c.cancelSubmit=!0)}),this.on("submit.validate",function(b){function d(){var d,e;return c.submitButton&&(c.settings.submitHandler||c.formSubmitted)&&(d=a("<input type='hidden'/>").attr("name",c.submitButton.name).val(a(c.submitButton).val()).appendTo(c.currentForm)),!c.settings.submitHandler||(e=c.settings.submitHandler.call(c,c.currentForm,b),d&&d.remove(),void 0!==e&&e)}return c.settings.debug&&b.preventDefault(),c.cancelSubmit?(c.cancelSubmit=!1,d()):c.form()?c.pendingRequest?(c.formSubmitted=!0,!1):d():(c.focusInvalid(),!1)})),c)},valid:function(){var b,c,d;return a(this[0]).is("form")?b=this.validate().form():(d=[],b=!0,c=a(this[0].form).validate(),this.each(function(){b=c.element(this)&&b,b||(d=d.concat(c.errorList))}),c.errorList=d),b},rules:function(b,c){var d,e,f,g,h,i,j=this[0];if(null!=j&&(!j.form&&j.hasAttribute("contenteditable")&&(j.form=this.closest("form")[0],j.name=this.attr("name")),null!=j.form)){if(b)switch(d=a.data(j.form,"validator").settings,e=d.rules,f=a.validator.staticRules(j),b){case"add":a.extend(f,a.validator.normalizeRule(c)),delete f.messages,e[j.name]=f,c.messages&&(d.messages[j.name]=a.extend(d.messages[j.name],c.messages));break;case"remove":return c?(i={},a.each(c.split(/\s/),function(a,b){i[b]=f[b],delete f[b]}),i):(delete e[j.name],f)}return g=a.validator.normalizeRules(a.extend({},a.validator.classRules(j),a.validator.attributeRules(j),a.validator.dataRules(j),a.validator.staticRules(j)),j),g.required&&(h=g.required,delete g.required,g=a.extend({required:h},g)),g.remote&&(h=g.remote,delete g.remote,g=a.extend(g,{remote:h})),g}}}),a.extend(a.expr.pseudos||a.expr[":"],{blank:function(b){return!a.trim(""+a(b).val())},filled:function(b){var c=a(b).val();return null!==c&&!!a.trim(""+c)},unchecked:function(b){return!a(b).prop("checked")}}),a.validator=function(b,c){this.settings=a.extend(!0,{},a.validator.defaults,b),this.currentForm=c,this.init()},a.validator.format=function(b,c){return 1===arguments.length?function(){var c=a.makeArray(arguments);return c.unshift(b),a.validator.format.apply(this,c)}:void 0===c?b:(arguments.length>2&&c.constructor!==Array&&(c=a.makeArray(arguments).slice(1)),c.constructor!==Array&&(c=[c]),a.each(c,function(a,c){b=b.replace(new RegExp("\\{"+a+"\\}","g"),function(){return c})}),b)},a.extend(a.validator,{defaults:{messages:{},groups:{},rules:{},errorClass:"error",pendingClass:"pending",validClass:"valid",errorElement:"label",focusCleanup:!1,focusInvalid:!0,errorContainer:a([]),errorLabelContainer:a([]),onsubmit:!0,ignore:":hidden",ignoreTitle:!1,onfocusin:function(a){this.lastActive=a,this.settings.focusCleanup&&(this.settings.unhighlight&&this.settings.unhighlight.call(this,a,this.settings.errorClass,this.settings.validClass),this.hideThese(this.errorsFor(a)))},onfocusout:function(a){this.checkable(a)||!(a.name in this.submitted)&&this.optional(a)||this.element(a)},onkeyup:function(b,c){var d=[16,17,18,20,35,36,37,38,39,40,45,144,225];9===c.which&&""===this.elementValue(b)||a.inArray(c.keyCode,d)!==-1||(b.name in this.submitted||b.name in this.invalid)&&this.element(b)},onclick:function(a){a.name in this.submitted?this.element(a):a.parentNode.name in this.submitted&&this.element(a.parentNode)},highlight:function(b,c,d){"radio"===b.type?this.findByName(b.name).addClass(c).removeClass(d):a(b).addClass(c).removeClass(d)},unhighlight:function(b,c,d){"radio"===b.type?this.findByName(b.name).removeClass(c).addClass(d):a(b).removeClass(c).addClass(d)}},setDefaults:function(b){a.extend(a.validator.defaults,b)},messages:{required:"This field is required.",remote:"Please fix this field.",email:"Please enter a valid email address.",url:"Please enter a valid URL.",date:"Please enter a valid date.",dateISO:"Please enter a valid date (ISO).",number:"Please enter a valid number.",digits:"Please enter only digits.",equalTo:"Please enter the same value again.",maxlength:a.validator.format("Please enter no more than {0} characters."),minlength:a.validator.format("Please enter at least {0} characters."),rangelength:a.validator.format("Please enter a value between {0} and {1} characters long."),range:a.validator.format("Please enter a value between {0} and {1}."),max:a.validator.format("Please enter a value less than or equal to {0}."),min:a.validator.format("Please enter a value greater than or equal to {0}."),step:a.validator.format("Please enter a multiple of {0}.")},autoCreateRanges:!1,prototype:{init:function(){function b(b){!this.form&&this.hasAttribute("contenteditable")&&(this.form=a(this).closest("form")[0],this.name=a(this).attr("name"));var c=a.data(this.form,"validator"),d="on"+b.type.replace(/^validate/,""),e=c.settings;e[d]&&!a(this).is(e.ignore)&&e[d].call(c,this,b)}this.labelContainer=a(this.settings.errorLabelContainer),this.errorContext=this.labelContainer.length&&this.labelContainer||a(this.currentForm),this.containers=a(this.settings.errorContainer).add(this.settings.errorLabelContainer),this.submitted={},this.valueCache={},this.pendingRequest=0,this.pending={},this.invalid={},this.reset();var c,d=this.groups={};a.each(this.settings.groups,function(b,c){"string"==typeof c&&(c=c.split(/\s/)),a.each(c,function(a,c){d[c]=b})}),c=this.settings.rules,a.each(c,function(b,d){c[b]=a.validator.normalizeRule(d)}),a(this.currentForm).on("focusin.validate focusout.validate keyup.validate",":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']",b).on("click.validate","select, option, [type='radio'], [type='checkbox']",b),this.settings.invalidHandler&&a(this.currentForm).on("invalid-form.validate",this.settings.invalidHandler)},form:function(){return this.checkForm(),a.extend(this.submitted,this.errorMap),this.invalid=a.extend({},this.errorMap),this.valid()||a(this.currentForm).triggerHandler("invalid-form",[this]),this.showErrors(),this.valid()},checkForm:function(){this.prepareForm();for(var a=0,b=this.currentElements=this.elements();b[a];a++)this.check(b[a]);return this.valid()},element:function(b){var c,d,e=this.clean(b),f=this.validationTargetFor(e),g=this,h=!0;return void 0===f?delete this.invalid[e.name]:(this.prepareElement(f),this.currentElements=a(f),d=this.groups[f.name],d&&a.each(this.groups,function(a,b){b===d&&a!==f.name&&(e=g.validationTargetFor(g.clean(g.findByName(a))),e&&e.name in g.invalid&&(g.currentElements.push(e),h=g.check(e)&&h))}),c=this.check(f)!==!1,h=h&&c,c?this.invalid[f.name]=!1:this.invalid[f.name]=!0,this.numberOfInvalids()||(this.toHide=this.toHide.add(this.containers)),this.showErrors(),a(b).attr("aria-invalid",!c)),h},showErrors:function(b){if(b){var c=this;a.extend(this.errorMap,b),this.errorList=a.map(this.errorMap,function(a,b){return{message:a,element:c.findByName(b)[0]}}),this.successList=a.grep(this.successList,function(a){return!(a.name in b)})}this.settings.showErrors?this.settings.showErrors.call(this,this.errorMap,this.errorList):this.defaultShowErrors()},resetForm:function(){a.fn.resetForm&&a(this.currentForm).resetForm(),this.invalid={},this.submitted={},this.prepareForm(),this.hideErrors();var b=this.elements().removeData("previousValue").removeAttr("aria-invalid");this.resetElements(b)},resetElements:function(a){var b;if(this.settings.unhighlight)for(b=0;a[b];b++)this.settings.unhighlight.call(this,a[b],this.settings.errorClass,""),this.findByName(a[b].name).removeClass(this.settings.validClass);else a.removeClass(this.settings.errorClass).removeClass(this.settings.validClass)},numberOfInvalids:function(){return this.objectLength(this.invalid)},objectLength:function(a){var b,c=0;for(b in a)void 0!==a[b]&&null!==a[b]&&a[b]!==!1&&c++;return c},hideErrors:function(){this.hideThese(this.toHide)},hideThese:function(a){a.not(this.containers).text(""),this.addWrapper(a).hide()},valid:function(){return 0===this.size()},size:function(){return this.errorList.length},focusInvalid:function(){if(this.settings.focusInvalid)try{a(this.findLastActive()||this.errorList.length&&this.errorList[0].element||[]).filter(":visible").focus().trigger("focusin")}catch(b){}},findLastActive:function(){var b=this.lastActive;return b&&1===a.grep(this.errorList,function(a){return a.element.name===b.name}).length&&b},elements:function(){var b=this,c={};return a(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function(){var d=this.name||a(this).attr("name");return!d&&b.settings.debug&&window.console&&console.error("%o has no name assigned",this),this.hasAttribute("contenteditable")&&(this.form=a(this).closest("form")[0],this.name=d),!(d in c||!b.objectLength(a(this).rules()))&&(c[d]=!0,!0)})},clean:function(b){return a(b)[0]},errors:function(){var b=this.settings.errorClass.split(" ").join(".");return a(this.settings.errorElement+"."+b,this.errorContext)},resetInternals:function(){this.successList=[],this.errorList=[],this.errorMap={},this.toShow=a([]),this.toHide=a([])},reset:function(){this.resetInternals(),this.currentElements=a([])},prepareForm:function(){this.reset(),this.toHide=this.errors().add(this.containers)},prepareElement:function(a){this.reset(),this.toHide=this.errorsFor(a)},elementValue:function(b){var c,d,e=a(b),f=b.type;return"radio"===f||"checkbox"===f?this.findByName(b.name).filter(":checked").val():"number"===f&&"undefined"!=typeof b.validity?b.validity.badInput?"NaN":e.val():(c=b.hasAttribute("contenteditable")?e.text():e.val(),"file"===f?"C:\\fakepath\\"===c.substr(0,12)?c.substr(12):(d=c.lastIndexOf("/"),d>=0?c.substr(d+1):(d=c.lastIndexOf("\\"),d>=0?c.substr(d+1):c)):"string"==typeof c?c.replace(/\r/g,""):c)},check:function(b){b=this.validationTargetFor(this.clean(b));var c,d,e,f,g=a(b).rules(),h=a.map(g,function(a,b){return b}).length,i=!1,j=this.elementValue(b);if("function"==typeof g.normalizer?f=g.normalizer:"function"==typeof this.settings.normalizer&&(f=this.settings.normalizer),f){if(j=f.call(b,j),"string"!=typeof j)throw new TypeError("The normalizer should return a string value.");delete g.normalizer}for(d in g){e={method:d,parameters:g[d]};try{if(c=a.validator.methods[d].call(this,j,b,e.parameters),"dependency-mismatch"===c&&1===h){i=!0;continue}if(i=!1,"pending"===c)return void(this.toHide=this.toHide.not(this.errorsFor(b)));if(!c)return this.formatAndAdd(b,e),!1}catch(k){throw this.settings.debug&&window.console&&console.log("Exception occurred when checking element "+b.id+", check the '"+e.method+"' method.",k),k instanceof TypeError&&(k.message+=".  Exception occurred when checking element "+b.id+", check the '"+e.method+"' method."),k}}if(!i)return this.objectLength(g)&&this.successList.push(b),!0},customDataMessage:function(b,c){return a(b).data("msg"+c.charAt(0).toUpperCase()+c.substring(1).toLowerCase())||a(b).data("msg")},customMessage:function(a,b){var c=this.settings.messages[a];return c&&(c.constructor===String?c:c[b])},findDefined:function(){for(var a=0;a<arguments.length;a++)if(void 0!==arguments[a])return arguments[a]},defaultMessage:function(b,c){"string"==typeof c&&(c={method:c});var d=this.findDefined(this.customMessage(b.name,c.method),this.customDataMessage(b,c.method),!this.settings.ignoreTitle&&b.title||void 0,a.validator.messages[c.method],"<strong>Warning: No message defined for "+b.name+"</strong>"),e=/\$?\{(\d+)\}/g;return"function"==typeof d?d=d.call(this,c.parameters,b):e.test(d)&&(d=a.validator.format(d.replace(e,"{$1}"),c.parameters)),d},formatAndAdd:function(a,b){var c=this.defaultMessage(a,b);this.errorList.push({message:c,element:a,method:b.method}),this.errorMap[a.name]=c,this.submitted[a.name]=c},addWrapper:function(a){return this.settings.wrapper&&(a=a.add(a.parent(this.settings.wrapper))),a},defaultShowErrors:function(){var a,b,c;for(a=0;this.errorList[a];a++)c=this.errorList[a],this.settings.highlight&&this.settings.highlight.call(this,c.element,this.settings.errorClass,this.settings.validClass),this.showLabel(c.element,c.message);if(this.errorList.length&&(this.toShow=this.toShow.add(this.containers)),this.settings.success)for(a=0;this.successList[a];a++)this.showLabel(this.successList[a]);if(this.settings.unhighlight)for(a=0,b=this.validElements();b[a];a++)this.settings.unhighlight.call(this,b[a],this.settings.errorClass,this.settings.validClass);this.toHide=this.toHide.not(this.toShow),this.hideErrors(),this.addWrapper(this.toShow).show()},validElements:function(){return this.currentElements.not(this.invalidElements())},invalidElements:function(){return a(this.errorList).map(function(){return this.element})},showLabel:function(b,c){var d,e,f,g,h=this.errorsFor(b),i=this.idOrName(b),j=a(b).attr("aria-describedby");h.length?(h.removeClass(this.settings.validClass).addClass(this.settings.errorClass),h.html(c)):(h=a("<"+this.settings.errorElement+">").attr("id",i+"-error").addClass(this.settings.errorClass).html(c||""),d=h,this.settings.wrapper&&(d=h.hide().show().wrap("<"+this.settings.wrapper+"/>").parent()),this.labelContainer.length?this.labelContainer.append(d):this.settings.errorPlacement?this.settings.errorPlacement.call(this,d,a(b)):d.insertAfter(b),h.is("label")?h.attr("for",i):0===h.parents("label[for='"+this.escapeCssMeta(i)+"']").length&&(f=h.attr("id"),j?j.match(new RegExp("\\b"+this.escapeCssMeta(f)+"\\b"))||(j+=" "+f):j=f,a(b).attr("aria-describedby",j),e=this.groups[b.name],e&&(g=this,a.each(g.groups,function(b,c){c===e&&a("[name='"+g.escapeCssMeta(b)+"']",g.currentForm).attr("aria-describedby",h.attr("id"))})))),!c&&this.settings.success&&(h.text(""),"string"==typeof this.settings.success?h.addClass(this.settings.success):this.settings.success(h,b)),this.toShow=this.toShow.add(h)},errorsFor:function(b){var c=this.escapeCssMeta(this.idOrName(b)),d=a(b).attr("aria-describedby"),e="label[for='"+c+"'], label[for='"+c+"'] *";return d&&(e=e+", #"+this.escapeCssMeta(d).replace(/\s+/g,", #")),this.errors().filter(e)},escapeCssMeta:function(a){return a.replace(/([\\!"#$%&'()*+,.\/:;<=>?@\[\]^`{|}~])/g,"\\$1")},idOrName:function(a){return this.groups[a.name]||(this.checkable(a)?a.name:a.id||a.name)},validationTargetFor:function(b){return this.checkable(b)&&(b=this.findByName(b.name)),a(b).not(this.settings.ignore)[0]},checkable:function(a){return/radio|checkbox/i.test(a.type)},findByName:function(b){return a(this.currentForm).find("[name='"+this.escapeCssMeta(b)+"']")},getLength:function(b,c){switch(c.nodeName.toLowerCase()){case"select":return a("option:selected",c).length;case"input":if(this.checkable(c))return this.findByName(c.name).filter(":checked").length}return b.length},depend:function(a,b){return!this.dependTypes[typeof a]||this.dependTypes[typeof a](a,b)},dependTypes:{"boolean":function(a){return a},string:function(b,c){return!!a(b,c.form).length},"function":function(a,b){return a(b)}},optional:function(b){var c=this.elementValue(b);return!a.validator.methods.required.call(this,c,b)&&"dependency-mismatch"},startRequest:function(b){this.pending[b.name]||(this.pendingRequest++,a(b).addClass(this.settings.pendingClass),this.pending[b.name]=!0)},stopRequest:function(b,c){this.pendingRequest--,this.pendingRequest<0&&(this.pendingRequest=0),delete this.pending[b.name],a(b).removeClass(this.settings.pendingClass),c&&0===this.pendingRequest&&this.formSubmitted&&this.form()?(a(this.currentForm).submit(),this.submitButton&&a("input:hidden[name='"+this.submitButton.name+"']",this.currentForm).remove(),this.formSubmitted=!1):!c&&0===this.pendingRequest&&this.formSubmitted&&(a(this.currentForm).triggerHandler("invalid-form",[this]),this.formSubmitted=!1)},previousValue:function(b,c){return c="string"==typeof c&&c||"remote",a.data(b,"previousValue")||a.data(b,"previousValue",{old:null,valid:!0,message:this.defaultMessage(b,{method:c})})},destroy:function(){this.resetForm(),a(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur")}},classRuleSettings:{required:{required:!0},email:{email:!0},url:{url:!0},date:{date:!0},dateISO:{dateISO:!0},number:{number:!0},digits:{digits:!0},creditcard:{creditcard:!0}},addClassRules:function(b,c){b.constructor===String?this.classRuleSettings[b]=c:a.extend(this.classRuleSettings,b)},classRules:function(b){var c={},d=a(b).attr("class");return d&&a.each(d.split(" "),function(){this in a.validator.classRuleSettings&&a.extend(c,a.validator.classRuleSettings[this])}),c},normalizeAttributeRule:function(a,b,c,d){/min|max|step/.test(c)&&(null===b||/number|range|text/.test(b))&&(d=Number(d),isNaN(d)&&(d=void 0)),d||0===d?a[c]=d:b===c&&"range"!==b&&(a[c]=!0)},attributeRules:function(b){var c,d,e={},f=a(b),g=b.getAttribute("type");for(c in a.validator.methods)"required"===c?(d=b.getAttribute(c),""===d&&(d=!0),d=!!d):d=f.attr(c),this.normalizeAttributeRule(e,g,c,d);return e.maxlength&&/-1|2147483647|524288/.test(e.maxlength)&&delete e.maxlength,e},dataRules:function(b){var c,d,e={},f=a(b),g=b.getAttribute("type");for(c in a.validator.methods)d=f.data("rule"+c.charAt(0).toUpperCase()+c.substring(1).toLowerCase()),this.normalizeAttributeRule(e,g,c,d);return e},staticRules:function(b){var c={},d=a.data(b.form,"validator");return d.settings.rules&&(c=a.validator.normalizeRule(d.settings.rules[b.name])||{}),c},normalizeRules:function(b,c){return a.each(b,function(d,e){if(e===!1)return void delete b[d];if(e.param||e.depends){var f=!0;switch(typeof e.depends){case"string":f=!!a(e.depends,c.form).length;break;case"function":f=e.depends.call(c,c)}f?b[d]=void 0===e.param||e.param:(a.data(c.form,"validator").resetElements(a(c)),delete b[d])}}),a.each(b,function(d,e){b[d]=a.isFunction(e)&&"normalizer"!==d?e(c):e}),a.each(["minlength","maxlength"],function(){b[this]&&(b[this]=Number(b[this]))}),a.each(["rangelength","range"],function(){var c;b[this]&&(a.isArray(b[this])?b[this]=[Number(b[this][0]),Number(b[this][1])]:"string"==typeof b[this]&&(c=b[this].replace(/[\[\]]/g,"").split(/[\s,]+/),b[this]=[Number(c[0]),Number(c[1])]))}),a.validator.autoCreateRanges&&(null!=b.min&&null!=b.max&&(b.range=[b.min,b.max],delete b.min,delete b.max),null!=b.minlength&&null!=b.maxlength&&(b.rangelength=[b.minlength,b.maxlength],delete b.minlength,delete b.maxlength)),b},normalizeRule:function(b){if("string"==typeof b){var c={};a.each(b.split(/\s/),function(){c[this]=!0}),b=c}return b},addMethod:function(b,c,d){a.validator.methods[b]=c,a.validator.messages[b]=void 0!==d?d:a.validator.messages[b],c.length<3&&a.validator.addClassRules(b,a.validator.normalizeRule(b))},methods:{required:function(b,c,d){if(!this.depend(d,c))return"dependency-mismatch";if("select"===c.nodeName.toLowerCase()){var e=a(c).val();return e&&e.length>0}return this.checkable(c)?this.getLength(b,c)>0:b.length>0},email:function(a,b){return this.optional(b)||/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(a)},url:function(a,b){return this.optional(b)||/^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)(?:\.(?:[a-z\u00a1-\uffff0-9]-*)*[a-z\u00a1-\uffff0-9]+)*(?:\.(?:[a-z\u00a1-\uffff]{2,})).?)(?::\d{2,5})?(?:[\/?#]\S*)?$/i.test(a)},date:function(a,b){return this.optional(b)||!/Invalid|NaN/.test(new Date(a).toString())},dateISO:function(a,b){return this.optional(b)||/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(a)},number:function(a,b){return this.optional(b)||/^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(a)},digits:function(a,b){return this.optional(b)||/^\d+$/.test(a)},minlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e>=d},maxlength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e<=d},rangelength:function(b,c,d){var e=a.isArray(b)?b.length:this.getLength(b,c);return this.optional(c)||e>=d[0]&&e<=d[1]},min:function(a,b,c){return this.optional(b)||a>=c},max:function(a,b,c){return this.optional(b)||a<=c},range:function(a,b,c){return this.optional(b)||a>=c[0]&&a<=c[1]},step:function(b,c,d){var e,f=a(c).attr("type"),g="Step attribute on input type "+f+" is not supported.",h=["text","number","range"],i=new RegExp("\\b"+f+"\\b"),j=f&&!i.test(h.join()),k=function(a){var b=(""+a).match(/(?:\.(\d+))?$/);return b&&b[1]?b[1].length:0},l=function(a){return Math.round(a*Math.pow(10,e))},m=!0;if(j)throw new Error(g);return e=k(d),(k(b)>e||l(b)%l(d)!==0)&&(m=!1),this.optional(c)||m},equalTo:function(b,c,d){var e=a(d);return this.settings.onfocusout&&e.not(".validate-equalTo-blur").length&&e.addClass("validate-equalTo-blur").on("blur.validate-equalTo",function(){a(c).valid()}),b===e.val()},remote:function(b,c,d,e){if(this.optional(c))return"dependency-mismatch";e="string"==typeof e&&e||"remote";var f,g,h,i=this.previousValue(c,e);return this.settings.messages[c.name]||(this.settings.messages[c.name]={}),i.originalMessage=i.originalMessage||this.settings.messages[c.name][e],this.settings.messages[c.name][e]=i.message,d="string"==typeof d&&{url:d}||d,h=a.param(a.extend({data:b},d.data)),i.old===h?i.valid:(i.old=h,f=this,this.startRequest(c),g={},g[c.name]=b,a.ajax(a.extend(!0,{mode:"abort",port:"validate"+c.name,dataType:"json",data:g,context:f.currentForm,success:function(a){var d,g,h,j=a===!0||"true"===a;f.settings.messages[c.name][e]=i.originalMessage,j?(h=f.formSubmitted,f.resetInternals(),f.toHide=f.errorsFor(c),f.formSubmitted=h,f.successList.push(c),f.invalid[c.name]=!1,f.showErrors()):(d={},g=a||f.defaultMessage(c,{method:e,parameters:b}),d[c.name]=i.message=g,f.invalid[c.name]=!0,f.showErrors(d)),i.valid=j,f.stopRequest(c,j)}},d)),"pending")}}});var b,c={};return a.ajaxPrefilter?a.ajaxPrefilter(function(a,b,d){var e=a.port;"abort"===a.mode&&(c[e]&&c[e].abort(),c[e]=d)}):(b=a.ajax,a.ajax=function(d){var e=("mode"in d?d:a.ajaxSettings).mode,f=("port"in d?d:a.ajaxSettings).port;return"abort"===e?(c[f]&&c[f].abort(),c[f]=b.apply(this,arguments),c[f]):b.apply(this,arguments)}),a});
}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})

},{}],95:[function(require,module,exports){
  'use strict';(function(){(function(){function e(a){for(var b=[a];a=a.parentNode||a.host||a.defaultView;)b.push(a);return b}function f(a){return function(b){var c="undefined"!==typeof b.getAttribute?b.getAttribute("class")||"":void 0;"undefined"!==typeof c&&-1===c.indexOf(a)&&b.setAttribute("class",c.concat(" ",a).trim())}}function g(a){return function(b){var c="undefined"!==typeof b.getAttribute?b.getAttribute("class")||"":void 0;if(c){var d=c.indexOf(a);0<=d&&(0===d||0<=h.indexOf(c.charAt(d-1)))&&
  (c=c.replace(a,"").trim(),""===c?b.removeAttribute("class"):b.setAttribute("class",c))}}}function k(){var a=function(a){function c(){b=!1;"blur"===a.type&&Array.prototype.slice.call(e(a.target)).forEach(g("focus-within"));"focus"===a.type&&Array.prototype.slice.call(e(a.target)).forEach(f("focus-within"))}if(!b){window.requestAnimationFrame(c);var b=!0}};document.addEventListener("focus",a,!0);document.addEventListener("blur",a,!0);f("js-focus-within")(document.body);return!0}var h=["\n","\t"," ",
  "\r"];try{return"undefined"!==typeof window&&!document.querySelector(":focus-within")}catch(a){return k()}})()})();
  

},{}],96:[function(require,module,exports){
/**
 * Owl Carousel v2.2.0
 * Copyright 2013-2016 David Deutsch
 * Licensed under MIT (https://github.com/OwlCarousel2/OwlCarousel2/blob/master/LICENSE)
 */
/**
 * Owl carousel
 * @version 2.1.6
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 * @todo Lazy Load Icon
 * @todo prevent animationend bubling
 * @todo itemsScaleUp
 * @todo Test Zepto
 * @todo stagePadding calculate wrong active classes
 */
;(function($, window, document, undefined) {

	/**
	 * Creates a carousel.
	 * @class The Owl Carousel.
	 * @public
	 * @param {HTMLElement|jQuery} element - The element to create the carousel for.
	 * @param {Object} [options] - The options
	 */
	function Owl(element, options) {

		/**
		 * Current settings for the carousel.
		 * @public
		 */
		this.settings = null;

		/**
		 * Current options set by the caller including defaults.
		 * @public
		 */
		this.options = $.extend({}, Owl.Defaults, options);

		/**
		 * Plugin element.
		 * @public
		 */
		this.$element = $(element);

		/**
		 * Proxied event handlers.
		 * @protected
		 */
		this._handlers = {};

		/**
		 * References to the running plugins of this carousel.
		 * @protected
		 */
		this._plugins = {};

		/**
		 * Currently suppressed events to prevent them from beeing retriggered.
		 * @protected
		 */
		this._supress = {};

		/**
		 * Absolute current position.
		 * @protected
		 */
		this._current = null;

		/**
		 * Animation speed in milliseconds.
		 * @protected
		 */
		this._speed = null;

		/**
		 * Coordinates of all items in pixel.
		 * @todo The name of this member is missleading.
		 * @protected
		 */
		this._coordinates = [];

		/**
		 * Current breakpoint.
		 * @todo Real media queries would be nice.
		 * @protected
		 */
		this._breakpoint = null;

		/**
		 * Current width of the plugin element.
		 */
		this._width = null;

		/**
		 * All real items.
		 * @protected
		 */
		this._items = [];

		/**
		 * All cloned items.
		 * @protected
		 */
		this._clones = [];

		/**
		 * Merge values of all items.
		 * @todo Maybe this could be part of a plugin.
		 * @protected
		 */
		this._mergers = [];

		/**
		 * Widths of all items.
		 */
		this._widths = [];

		/**
		 * Invalidated parts within the update process.
		 * @protected
		 */
		this._invalidated = {};

		/**
		 * Ordered list of workers for the update process.
		 * @protected
		 */
		this._pipe = [];

		/**
		 * Current state information for the drag operation.
		 * @todo #261
		 * @protected
		 */
		this._drag = {
			time: null,
			target: null,
			pointer: null,
			stage: {
				start: null,
				current: null
			},
			direction: null
		};

		/**
		 * Current state information and their tags.
		 * @type {Object}
		 * @protected
		 */
		this._states = {
			current: {},
			tags: {
				'initializing': [ 'busy' ],
				'animating': [ 'busy' ],
				'dragging': [ 'interacting' ]
			}
		};

		$.each([ 'onResize', 'onThrottledResize' ], $.proxy(function(i, handler) {
			this._handlers[handler] = $.proxy(this[handler], this);
		}, this));

		$.each(Owl.Plugins, $.proxy(function(key, plugin) {
			this._plugins[key.charAt(0).toLowerCase() + key.slice(1)]
				= new plugin(this);
		}, this));

		$.each(Owl.Workers, $.proxy(function(priority, worker) {
			this._pipe.push({
				'filter': worker.filter,
				'run': $.proxy(worker.run, this)
			});
		}, this));

		this.setup();
		this.initialize();
	}

	/**
	 * Default options for the carousel.
	 * @public
	 */
	Owl.Defaults = {
		items: 3,
		loop: false,
		center: false,
		rewind: false,

		mouseDrag: true,
		touchDrag: true,
		pullDrag: true,
		freeDrag: false,

		margin: 0,
		stagePadding: 0,

		merge: false,
		mergeFit: true,
		autoWidth: false,

		startPosition: 0,
		rtl: false,

		smartSpeed: 250,
		fluidSpeed: false,
		dragEndSpeed: false,

		responsive: {},
		responsiveRefreshRate: 200,
		responsiveBaseElement: window,

		fallbackEasing: 'swing',

		info: false,

		nestedItemSelector: false,
		itemElement: 'div',
		stageElement: 'div',

		refreshClass: 'owl-refresh',
		loadedClass: 'owl-loaded',
		loadingClass: 'owl-loading',
		rtlClass: 'owl-rtl',
		responsiveClass: 'owl-responsive',
		dragClass: 'owl-drag',
		itemClass: 'owl-item',
		stageClass: 'owl-stage',
		stageOuterClass: 'owl-stage-outer',
		grabClass: 'owl-grab'
	};

	/**
	 * Enumeration for width.
	 * @public
	 * @readonly
	 * @enum {String}
	 */
	Owl.Width = {
		Default: 'default',
		Inner: 'inner',
		Outer: 'outer'
	};

	/**
	 * Enumeration for types.
	 * @public
	 * @readonly
	 * @enum {String}
	 */
	Owl.Type = {
		Event: 'event',
		State: 'state'
	};

	/**
	 * Contains all registered plugins.
	 * @public
	 */
	Owl.Plugins = {};

	/**
	 * List of workers involved in the update process.
	 */
	Owl.Workers = [ {
		filter: [ 'width', 'settings' ],
		run: function() {
			this._width = this.$element.width();
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			cache.current = this._items && this._items[this.relative(this._current)];
		}
	}, {
		filter: [ 'items', 'settings' ],
		run: function() {
			this.$stage.children('.cloned').remove();
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			var margin = this.settings.margin || '',
				grid = !this.settings.autoWidth,
				rtl = this.settings.rtl,
				css = {
					'width': 'auto',
					'margin-left': rtl ? margin : '',
					'margin-right': rtl ? '' : margin
				};

			!grid && this.$stage.children().css(css);

			cache.css = css;
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			var width = (this.width() / this.settings.items).toFixed(3) - this.settings.margin,
				merge = null,
				iterator = this._items.length,
				grid = !this.settings.autoWidth,
				widths = [];

			cache.items = {
				merge: false,
				width: width
			};

			while (iterator--) {
				merge = this._mergers[iterator];
				merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;

				cache.items.merge = merge > 1 || cache.items.merge;

				widths[iterator] = !grid ? this._items[iterator].width() : width * merge;
			}

			this._widths = widths;
		}
	}, {
		filter: [ 'items', 'settings' ],
		run: function() {
			var clones = [],
				items = this._items,
				settings = this.settings,
				view = Math.max(settings.items * 2, 4),
				size = Math.ceil(items.length / 2) * 2,
				repeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0,
				append = '',
				prepend = '';

			repeat /= 2;

			while (repeat--) {
				clones.push(this.normalize(clones.length / 2, true));
				append = append + items[clones[clones.length - 1]][0].outerHTML;
				clones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));
				prepend = items[clones[clones.length - 1]][0].outerHTML + prepend;
			}

			this._clones = clones;

			$(append).addClass('cloned').appendTo(this.$stage);
			$(prepend).addClass('cloned').prependTo(this.$stage);
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function() {
			var rtl = this.settings.rtl ? 1 : -1,
				size = this._clones.length + this._items.length,
				iterator = -1,
				previous = 0,
				current = 0,
				coordinates = [];

			while (++iterator < size) {
				previous = coordinates[iterator - 1] || 0;
				current = this._widths[this.relative(iterator)] + this.settings.margin;
				coordinates.push(previous + current * rtl);
			}

			this._coordinates = coordinates;
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function() {
			var padding = this.settings.stagePadding,
				coordinates = this._coordinates,
				css = {
					'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,
					'padding-left': padding || '',
					'padding-right': padding || ''
				};

			this.$stage.css(css);
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			var iterator = this._coordinates.length,
				grid = !this.settings.autoWidth,
				items = this.$stage.children();

			if (grid && cache.items.merge) {
				while (iterator--) {
					cache.css.width = this._widths[this.relative(iterator)];
					items.eq(iterator).css(cache.css);
				}
			} else if (grid) {
				cache.css.width = cache.items.width;
				items.css(cache.css);
			}
		}
	}, {
		filter: [ 'items' ],
		run: function() {
			this._coordinates.length < 1 && this.$stage.removeAttr('style');
		}
	}, {
		filter: [ 'width', 'items', 'settings' ],
		run: function(cache) {
			cache.current = cache.current ? this.$stage.children().index(cache.current) : 0;
			cache.current = Math.max(this.minimum(), Math.min(this.maximum(), cache.current));
			this.reset(cache.current);
		}
	}, {
		filter: [ 'position' ],
		run: function() {
			this.animate(this.coordinates(this._current));
		}
	}, {
		filter: [ 'width', 'position', 'items', 'settings' ],
		run: function() {
			var rtl = this.settings.rtl ? 1 : -1,
				padding = this.settings.stagePadding * 2,
				begin = this.coordinates(this.current()) + padding,
				end = begin + this.width() * rtl,
				inner, outer, matches = [], i, n;

			for (i = 0, n = this._coordinates.length; i < n; i++) {
				inner = this._coordinates[i - 1] || 0;
				outer = Math.abs(this._coordinates[i]) + padding * rtl;

				if ((this.op(inner, '<=', begin) && (this.op(inner, '>', end)))
					|| (this.op(outer, '<', begin) && this.op(outer, '>', end))) {
					matches.push(i);
				}
			}

			this.$stage.children('.active').removeClass('active');
			this.$stage.children(':eq(' + matches.join('), :eq(') + ')').addClass('active');

			if (this.settings.center) {
				this.$stage.children('.center').removeClass('center');
				this.$stage.children().eq(this.current()).addClass('center');
			}
		}
	} ];

	/**
	 * Initializes the carousel.
	 * @protected
	 */
	Owl.prototype.initialize = function() {
		this.enter('initializing');
		this.trigger('initialize');

		this.$element.toggleClass(this.settings.rtlClass, this.settings.rtl);

		if (this.settings.autoWidth && !this.is('pre-loading')) {
			var imgs, nestedSelector, width;
			imgs = this.$element.find('img');
			nestedSelector = this.settings.nestedItemSelector ? '.' + this.settings.nestedItemSelector : undefined;
			width = this.$element.children(nestedSelector).width();

			if (imgs.length && width <= 0) {
				this.preloadAutoWidthImages(imgs);
			}
		}

		this.$element.addClass(this.options.loadingClass);

		// create stage
		this.$stage = $('<' + this.settings.stageElement + ' class="' + this.settings.stageClass + '"/>')
			.wrap('<div class="' + this.settings.stageOuterClass + '"/>');

		// append stage
		this.$element.append(this.$stage.parent());

		// append content
		this.replace(this.$element.children().not(this.$stage.parent()));

		// check visibility
		if (this.$element.is(':visible')) {
			// update view
			this.refresh();
		} else {
			// invalidate width
			this.invalidate('width');
		}

		this.$element
			.removeClass(this.options.loadingClass)
			.addClass(this.options.loadedClass);

		// register event handlers
		this.registerEventHandlers();

		this.leave('initializing');
		this.trigger('initialized');
	};

	/**
	 * Setups the current settings.
	 * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?
	 * @todo Support for media queries by using `matchMedia` would be nice.
	 * @public
	 */
	Owl.prototype.setup = function() {
		var viewport = this.viewport(),
			overwrites = this.options.responsive,
			match = -1,
			settings = null;

		if (!overwrites) {
			settings = $.extend({}, this.options);
		} else {
			$.each(overwrites, function(breakpoint) {
				if (breakpoint <= viewport && breakpoint > match) {
					match = Number(breakpoint);
				}
			});

			settings = $.extend({}, this.options, overwrites[match]);
			if (typeof settings.stagePadding === 'function') {
				settings.stagePadding = settings.stagePadding();
			}
			delete settings.responsive;

			// responsive class
			if (settings.responsiveClass) {
				this.$element.attr('class',
					this.$element.attr('class').replace(new RegExp('(' + this.options.responsiveClass + '-)\\S+\\s', 'g'), '$1' + match)
				);
			}
		}

		this.trigger('change', { property: { name: 'settings', value: settings } });
		this._breakpoint = match;
		this.settings = settings;
		this.invalidate('settings');
		this.trigger('changed', { property: { name: 'settings', value: this.settings } });
	};

	/**
	 * Updates option logic if necessery.
	 * @protected
	 */
	Owl.prototype.optionsLogic = function() {
		if (this.settings.autoWidth) {
			this.settings.stagePadding = false;
			this.settings.merge = false;
		}
	};

	/**
	 * Prepares an item before add.
	 * @todo Rename event parameter `content` to `item`.
	 * @protected
	 * @returns {jQuery|HTMLElement} - The item container.
	 */
	Owl.prototype.prepare = function(item) {
		var event = this.trigger('prepare', { content: item });

		if (!event.data) {
			event.data = $('<' + this.settings.itemElement + '/>')
				.addClass(this.options.itemClass).append(item)
		}

		this.trigger('prepared', { content: event.data });

		return event.data;
	};

	/**
	 * Updates the view.
	 * @public
	 */
	Owl.prototype.update = function() {
		var i = 0,
			n = this._pipe.length,
			filter = $.proxy(function(p) { return this[p] }, this._invalidated),
			cache = {};

		while (i < n) {
			if (this._invalidated.all || $.grep(this._pipe[i].filter, filter).length > 0) {
				this._pipe[i].run(cache);
			}
			i++;
		}

		this._invalidated = {};

		!this.is('valid') && this.enter('valid');
	};

	/**
	 * Gets the width of the view.
	 * @public
	 * @param {Owl.Width} [dimension=Owl.Width.Default] - The dimension to return.
	 * @returns {Number} - The width of the view in pixel.
	 */
	Owl.prototype.width = function(dimension) {
		dimension = dimension || Owl.Width.Default;
		switch (dimension) {
			case Owl.Width.Inner:
			case Owl.Width.Outer:
				return this._width;
			default:
				return this._width - this.settings.stagePadding * 2 + this.settings.margin;
		}
	};

	/**
	 * Refreshes the carousel primarily for adaptive purposes.
	 * @public
	 */
	Owl.prototype.refresh = function() {
		this.enter('refreshing');
		this.trigger('refresh');

		this.setup();

		this.optionsLogic();

		this.$element.addClass(this.options.refreshClass);

		this.update();

		this.$element.removeClass(this.options.refreshClass);

		this.leave('refreshing');
		this.trigger('refreshed');
	};

	/**
	 * Checks window `resize` event.
	 * @protected
	 */
	Owl.prototype.onThrottledResize = function() {
		window.clearTimeout(this.resizeTimer);
		this.resizeTimer = window.setTimeout(this._handlers.onResize, this.settings.responsiveRefreshRate);
	};

	/**
	 * Checks window `resize` event.
	 * @protected
	 */
	Owl.prototype.onResize = function() {
		if (!this._items.length) {
			return false;
		}

		if (this._width === this.$element.width()) {
			return false;
		}

		if (!this.$element.is(':visible')) {
			return false;
		}

		this.enter('resizing');

		if (this.trigger('resize').isDefaultPrevented()) {
			this.leave('resizing');
			return false;
		}

		this.invalidate('width');

		this.refresh();

		this.leave('resizing');
		this.trigger('resized');
	};

	/**
	 * Registers event handlers.
	 * @todo Check `msPointerEnabled`
	 * @todo #261
	 * @protected
	 */
	Owl.prototype.registerEventHandlers = function() {
		if ($.support.transition) {
			this.$stage.on($.support.transition.end + '.owl.core', $.proxy(this.onTransitionEnd, this));
		}

		if (this.settings.responsive !== false) {
			this.on(window, 'resize', this._handlers.onThrottledResize);
		}

		if (this.settings.mouseDrag) {
			this.$element.addClass(this.options.dragClass);
			this.$stage.on('mousedown.owl.core', $.proxy(this.onDragStart, this));
			this.$stage.on('dragstart.owl.core selectstart.owl.core', function() { return false });
		}

		if (this.settings.touchDrag){
			this.$stage.on('touchstart.owl.core', $.proxy(this.onDragStart, this));
			this.$stage.on('touchcancel.owl.core', $.proxy(this.onDragEnd, this));
		}
	};

	/**
	 * Handles `touchstart` and `mousedown` events.
	 * @todo Horizontal swipe threshold as option
	 * @todo #261
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
	Owl.prototype.onDragStart = function(event) {
		var stage = null;

		if (event.which === 3) {
			return;
		}

		if ($.support.transform) {
			stage = this.$stage.css('transform').replace(/.*\(|\)| /g, '').split(',');
			stage = {
				x: stage[stage.length === 16 ? 12 : 4],
				y: stage[stage.length === 16 ? 13 : 5]
			};
		} else {
			stage = this.$stage.position();
			stage = {
				x: this.settings.rtl ?
					stage.left + this.$stage.width() - this.width() + this.settings.margin :
					stage.left,
				y: stage.top
			};
		}

		if (this.is('animating')) {
			$.support.transform ? this.animate(stage.x) : this.$stage.stop()
			this.invalidate('position');
		}

		this.$element.toggleClass(this.options.grabClass, event.type === 'mousedown');

		this.speed(0);

		this._drag.time = new Date().getTime();
		this._drag.target = $(event.target);
		this._drag.stage.start = stage;
		this._drag.stage.current = stage;
		this._drag.pointer = this.pointer(event);

		$(document).on('mouseup.owl.core touchend.owl.core', $.proxy(this.onDragEnd, this));

		$(document).one('mousemove.owl.core touchmove.owl.core', $.proxy(function(event) {
			var delta = this.difference(this._drag.pointer, this.pointer(event));

			$(document).on('mousemove.owl.core touchmove.owl.core', $.proxy(this.onDragMove, this));

			if (Math.abs(delta.x) < Math.abs(delta.y) && this.is('valid')) {
				return;
			}

			event.preventDefault();

			this.enter('dragging');
			this.trigger('drag');
		}, this));
	};

	/**
	 * Handles the `touchmove` and `mousemove` events.
	 * @todo #261
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
	Owl.prototype.onDragMove = function(event) {
		var minimum = null,
			maximum = null,
			pull = null,
			delta = this.difference(this._drag.pointer, this.pointer(event)),
			stage = this.difference(this._drag.stage.start, delta);

		if (!this.is('dragging')) {
			return;
		}

		event.preventDefault();

		if (this.settings.loop) {
			minimum = this.coordinates(this.minimum());
			maximum = this.coordinates(this.maximum() + 1) - minimum;
			stage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;
		} else {
			minimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());
			maximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());
			pull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;
			stage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);
		}

		this._drag.stage.current = stage;

		this.animate(stage.x);
	};

	/**
	 * Handles the `touchend` and `mouseup` events.
	 * @todo #261
	 * @todo Threshold for click event
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
	Owl.prototype.onDragEnd = function(event) {
		var delta = this.difference(this._drag.pointer, this.pointer(event)),
			stage = this._drag.stage.current,
			direction = delta.x > 0 ^ this.settings.rtl ? 'left' : 'right';

		$(document).off('.owl.core');

		this.$element.removeClass(this.options.grabClass);

		if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {
			this.speed(this.settings.dragEndSpeed || this.settings.smartSpeed);
			this.current(this.closest(stage.x, delta.x !== 0 ? direction : this._drag.direction));
			this.invalidate('position');
			this.update();

			this._drag.direction = direction;

			if (Math.abs(delta.x) > 3 || new Date().getTime() - this._drag.time > 300) {
				this._drag.target.one('click.owl.core', function() { return false; });
			}
		}

		if (!this.is('dragging')) {
			return;
		}

		this.leave('dragging');
		this.trigger('dragged');
	};

	/**
	 * Gets absolute position of the closest item for a coordinate.
	 * @todo Setting `freeDrag` makes `closest` not reusable. See #165.
	 * @protected
	 * @param {Number} coordinate - The coordinate in pixel.
	 * @param {String} direction - The direction to check for the closest item. Ether `left` or `right`.
	 * @return {Number} - The absolute position of the closest item.
	 */
	Owl.prototype.closest = function(coordinate, direction) {
		var position = -1,
			pull = 30,
			width = this.width(),
			coordinates = this.coordinates();

		if (!this.settings.freeDrag) {
			// check closest item
			$.each(coordinates, $.proxy(function(index, value) {
				// on a left pull, check on current index
				if (direction === 'left' && coordinate > value - pull && coordinate < value + pull) {
					position = index;
				// on a right pull, check on previous index
				// to do so, subtract width from value and set position = index + 1
				} else if (direction === 'right' && coordinate > value - width - pull && coordinate < value - width + pull) {
					position = index + 1;
				} else if (this.op(coordinate, '<', value)
					&& this.op(coordinate, '>', coordinates[index + 1] || value - width)) {
					position = direction === 'left' ? index + 1 : index;
				}
				return position === -1;
			}, this));
		}

		if (!this.settings.loop) {
			// non loop boundries
			if (this.op(coordinate, '>', coordinates[this.minimum()])) {
				position = coordinate = this.minimum();
			} else if (this.op(coordinate, '<', coordinates[this.maximum()])) {
				position = coordinate = this.maximum();
			}
		}

		return position;
	};

	/**
	 * Animates the stage.
	 * @todo #270
	 * @public
	 * @param {Number} coordinate - The coordinate in pixels.
	 */
	Owl.prototype.animate = function(coordinate) {
		var animate = this.speed() > 0;

		this.is('animating') && this.onTransitionEnd();

		if (animate) {
			this.enter('animating');
			this.trigger('translate');
		}

		if ($.support.transform3d && $.support.transition) {
			this.$stage.css({
				transform: 'translate3d(' + coordinate + 'px,0px,0px)',
				transition: (this.speed() / 1000) + 's'
			});
		} else if (animate) {
			this.$stage.animate({
				left: coordinate + 'px'
			}, this.speed(), this.settings.fallbackEasing, $.proxy(this.onTransitionEnd, this));
		} else {
			this.$stage.css({
				left: coordinate + 'px'
			});
		}
	};

	/**
	 * Checks whether the carousel is in a specific state or not.
	 * @param {String} state - The state to check.
	 * @returns {Boolean} - The flag which indicates if the carousel is busy.
	 */
	Owl.prototype.is = function(state) {
		return this._states.current[state] && this._states.current[state] > 0;
	};

	/**
	 * Sets the absolute position of the current item.
	 * @public
	 * @param {Number} [position] - The new absolute position or nothing to leave it unchanged.
	 * @returns {Number} - The absolute position of the current item.
	 */
	Owl.prototype.current = function(position) {
		if (position === undefined) {
			return this._current;
		}

		if (this._items.length === 0) {
			return undefined;
		}

		position = this.normalize(position);

		if (this._current !== position) {
			var event = this.trigger('change', { property: { name: 'position', value: position } });

			if (event.data !== undefined) {
				position = this.normalize(event.data);
			}

			this._current = position;

			this.invalidate('position');

			this.trigger('changed', { property: { name: 'position', value: this._current } });
		}

		return this._current;
	};

	/**
	 * Invalidates the given part of the update routine.
	 * @param {String} [part] - The part to invalidate.
	 * @returns {Array.<String>} - The invalidated parts.
	 */
	Owl.prototype.invalidate = function(part) {
		if ($.type(part) === 'string') {
			this._invalidated[part] = true;
			this.is('valid') && this.leave('valid');
		}
		return $.map(this._invalidated, function(v, i) { return i });
	};

	/**
	 * Resets the absolute position of the current item.
	 * @public
	 * @param {Number} position - The absolute position of the new item.
	 */
	Owl.prototype.reset = function(position) {
		position = this.normalize(position);

		if (position === undefined) {
			return;
		}

		this._speed = 0;
		this._current = position;

		this.suppress([ 'translate', 'translated' ]);

		this.animate(this.coordinates(position));

		this.release([ 'translate', 'translated' ]);
	};

	/**
	 * Normalizes an absolute or a relative position of an item.
	 * @public
	 * @param {Number} position - The absolute or relative position to normalize.
	 * @param {Boolean} [relative=false] - Whether the given position is relative or not.
	 * @returns {Number} - The normalized position.
	 */
	Owl.prototype.normalize = function(position, relative) {
		var n = this._items.length,
			m = relative ? 0 : this._clones.length;

		if (!this.isNumeric(position) || n < 1) {
			position = undefined;
		} else if (position < 0 || position >= n + m) {
			position = ((position - m / 2) % n + n) % n + m / 2;
		}

		return position;
	};

	/**
	 * Converts an absolute position of an item into a relative one.
	 * @public
	 * @param {Number} position - The absolute position to convert.
	 * @returns {Number} - The converted position.
	 */
	Owl.prototype.relative = function(position) {
		position -= this._clones.length / 2;
		return this.normalize(position, true);
	};

	/**
	 * Gets the maximum position for the current item.
	 * @public
	 * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.
	 * @returns {Number}
	 */
	Owl.prototype.maximum = function(relative) {
		var settings = this.settings,
			maximum = this._coordinates.length,
			iterator,
			reciprocalItemsWidth,
			elementWidth;

		if (settings.loop) {
			maximum = this._clones.length / 2 + this._items.length - 1;
		} else if (settings.autoWidth || settings.merge) {
			iterator = this._items.length;
			reciprocalItemsWidth = this._items[--iterator].width();
			elementWidth = this.$element.width();
			while (iterator--) {
				reciprocalItemsWidth += this._items[iterator].width() + this.settings.margin;
				if (reciprocalItemsWidth > elementWidth) {
					break;
				}
			}
			maximum = iterator + 1;
		} else if (settings.center) {
			maximum = this._items.length - 1;
		} else {
			maximum = this._items.length - settings.items;
		}

		if (relative) {
			maximum -= this._clones.length / 2;
		}

		return Math.max(maximum, 0);
	};

	/**
	 * Gets the minimum position for the current item.
	 * @public
	 * @param {Boolean} [relative=false] - Whether to return an absolute position or a relative position.
	 * @returns {Number}
	 */
	Owl.prototype.minimum = function(relative) {
		return relative ? 0 : this._clones.length / 2;
	};

	/**
	 * Gets an item at the specified relative position.
	 * @public
	 * @param {Number} [position] - The relative position of the item.
	 * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.
	 */
	Owl.prototype.items = function(position) {
		if (position === undefined) {
			return this._items.slice();
		}

		position = this.normalize(position, true);
		return this._items[position];
	};

	/**
	 * Gets an item at the specified relative position.
	 * @public
	 * @param {Number} [position] - The relative position of the item.
	 * @return {jQuery|Array.<jQuery>} - The item at the given position or all items if no position was given.
	 */
	Owl.prototype.mergers = function(position) {
		if (position === undefined) {
			return this._mergers.slice();
		}

		position = this.normalize(position, true);
		return this._mergers[position];
	};

	/**
	 * Gets the absolute positions of clones for an item.
	 * @public
	 * @param {Number} [position] - The relative position of the item.
	 * @returns {Array.<Number>} - The absolute positions of clones for the item or all if no position was given.
	 */
	Owl.prototype.clones = function(position) {
		var odd = this._clones.length / 2,
			even = odd + this._items.length,
			map = function(index) { return index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2 };

		if (position === undefined) {
			return $.map(this._clones, function(v, i) { return map(i) });
		}

		return $.map(this._clones, function(v, i) { return v === position ? map(i) : null });
	};

	/**
	 * Sets the current animation speed.
	 * @public
	 * @param {Number} [speed] - The animation speed in milliseconds or nothing to leave it unchanged.
	 * @returns {Number} - The current animation speed in milliseconds.
	 */
	Owl.prototype.speed = function(speed) {
		if (speed !== undefined) {
			this._speed = speed;
		}

		return this._speed;
	};

	/**
	 * Gets the coordinate of an item.
	 * @todo The name of this method is missleanding.
	 * @public
	 * @param {Number} position - The absolute position of the item within `minimum()` and `maximum()`.
	 * @returns {Number|Array.<Number>} - The coordinate of the item in pixel or all coordinates.
	 */
	Owl.prototype.coordinates = function(position) {
		var multiplier = 1,
			newPosition = position - 1,
			coordinate;

		if (position === undefined) {
			return $.map(this._coordinates, $.proxy(function(coordinate, index) {
				return this.coordinates(index);
			}, this));
		}

		if (this.settings.center) {
			if (this.settings.rtl) {
				multiplier = -1;
				newPosition = position + 1;
			}

			coordinate = this._coordinates[position];
			coordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;
		} else {
			coordinate = this._coordinates[newPosition] || 0;
		}

		coordinate = Math.ceil(coordinate);

		return coordinate;
	};

	/**
	 * Calculates the speed for a translation.
	 * @protected
	 * @param {Number} from - The absolute position of the start item.
	 * @param {Number} to - The absolute position of the target item.
	 * @param {Number} [factor=undefined] - The time factor in milliseconds.
	 * @returns {Number} - The time in milliseconds for the translation.
	 */
	Owl.prototype.duration = function(from, to, factor) {
		if (factor === 0) {
			return 0;
		}

		return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((factor || this.settings.smartSpeed));
	};

	/**
	 * Slides to the specified item.
	 * @public
	 * @param {Number} position - The position of the item.
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 */
	Owl.prototype.to = function(position, speed) {
		var current = this.current(),
			revert = null,
			distance = position - this.relative(current),
			direction = (distance > 0) - (distance < 0),
			items = this._items.length,
			minimum = this.minimum(),
			maximum = this.maximum();

		if (this.settings.loop) {
			if (!this.settings.rewind && Math.abs(distance) > items / 2) {
				distance += direction * -1 * items;
			}

			position = current + distance;
			revert = ((position - minimum) % items + items) % items + minimum;

			if (revert !== position && revert - distance <= maximum && revert - distance > 0) {
				current = revert - distance;
				position = revert;
				this.reset(current);
			}
		} else if (this.settings.rewind) {
			maximum += 1;
			position = (position % maximum + maximum) % maximum;
		} else {
			position = Math.max(minimum, Math.min(maximum, position));
		}

		this.speed(this.duration(current, position, speed));
		this.current(position);

		if (this.$element.is(':visible')) {
			this.update();
		}
	};

	/**
	 * Slides to the next item.
	 * @public
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 */
	Owl.prototype.next = function(speed) {
		speed = speed || false;
		this.to(this.relative(this.current()) + 1, speed);
	};

	/**
	 * Slides to the previous item.
	 * @public
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 */
	Owl.prototype.prev = function(speed) {
		speed = speed || false;
		this.to(this.relative(this.current()) - 1, speed);
	};

	/**
	 * Handles the end of an animation.
	 * @protected
	 * @param {Event} event - The event arguments.
	 */
	Owl.prototype.onTransitionEnd = function(event) {

		// if css2 animation then event object is undefined
		if (event !== undefined) {
			event.stopPropagation();

			// Catch only owl-stage transitionEnd event
			if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)) {
				return false;
			}
		}

		this.leave('animating');
		this.trigger('translated');
	};

	/**
	 * Gets viewport width.
	 * @protected
	 * @return {Number} - The width in pixel.
	 */
	Owl.prototype.viewport = function() {
		var width;
		if (this.options.responsiveBaseElement !== window) {
			width = $(this.options.responsiveBaseElement).width();
		} else if (window.innerWidth) {
			width = window.innerWidth;
		} else if (document.documentElement && document.documentElement.clientWidth) {
			width = document.documentElement.clientWidth;
		} else {
			throw 'Can not detect viewport width.';
		}
		return width;
	};

	/**
	 * Replaces the current content.
	 * @public
	 * @param {HTMLElement|jQuery|String} content - The new content.
	 */
	Owl.prototype.replace = function(content) {
		this.$stage.empty();
		this._items = [];

		if (content) {
			content = (content instanceof jQuery) ? content : $(content);
		}

		if (this.settings.nestedItemSelector) {
			content = content.find('.' + this.settings.nestedItemSelector);
		}

		content.filter(function() {
			return this.nodeType === 1;
		}).each($.proxy(function(index, item) {
			item = this.prepare(item);
			this.$stage.append(item);
			this._items.push(item);
			this._mergers.push(item.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);
		}, this));

		this.reset(this.isNumeric(this.settings.startPosition) ? this.settings.startPosition : 0);

		this.invalidate('items');
	};

	/**
	 * Adds an item.
	 * @todo Use `item` instead of `content` for the event arguments.
	 * @public
	 * @param {HTMLElement|jQuery|String} content - The item content to add.
	 * @param {Number} [position] - The relative position at which to insert the item otherwise the item will be added to the end.
	 */
	Owl.prototype.add = function(content, position) {
		var current = this.relative(this._current);

		position = position === undefined ? this._items.length : this.normalize(position, true);
		content = content instanceof jQuery ? content : $(content);

		this.trigger('add', { content: content, position: position });

		content = this.prepare(content);

		if (this._items.length === 0 || position === this._items.length) {
			this._items.length === 0 && this.$stage.append(content);
			this._items.length !== 0 && this._items[position - 1].after(content);
			this._items.push(content);
			this._mergers.push(content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);
		} else {
			this._items[position].before(content);
			this._items.splice(position, 0, content);
			this._mergers.splice(position, 0, content.find('[data-merge]').addBack('[data-merge]').attr('data-merge') * 1 || 1);
		}

		this._items[current] && this.reset(this._items[current].index());

		this.invalidate('items');

		this.trigger('added', { content: content, position: position });
	};

	/**
	 * Removes an item by its position.
	 * @todo Use `item` instead of `content` for the event arguments.
	 * @public
	 * @param {Number} position - The relative position of the item to remove.
	 */
	Owl.prototype.remove = function(position) {
		position = this.normalize(position, true);

		if (position === undefined) {
			return;
		}

		this.trigger('remove', { content: this._items[position], position: position });

		this._items[position].remove();
		this._items.splice(position, 1);
		this._mergers.splice(position, 1);

		this.invalidate('items');

		this.trigger('removed', { content: null, position: position });
	};

	/**
	 * Preloads images with auto width.
	 * @todo Replace by a more generic approach
	 * @protected
	 */
	Owl.prototype.preloadAutoWidthImages = function(images) {
		images.each($.proxy(function(i, element) {
			this.enter('pre-loading');
			element = $(element);
			$(new Image()).one('load', $.proxy(function(e) {
				element.attr('src', e.target.src);
				element.css('opacity', 1);
				this.leave('pre-loading');
				!this.is('pre-loading') && !this.is('initializing') && this.refresh();
			}, this)).attr('src', element.attr('src') || element.attr('data-src') || element.attr('data-src-retina'));
		}, this));
	};

	/**
	 * Destroys the carousel.
	 * @public
	 */
	Owl.prototype.destroy = function() {

		this.$element.off('.owl.core');
		this.$stage.off('.owl.core');
		$(document).off('.owl.core');

		if (this.settings.responsive !== false) {
			window.clearTimeout(this.resizeTimer);
			this.off(window, 'resize', this._handlers.onThrottledResize);
		}

		for (var i in this._plugins) {
			this._plugins[i].destroy();
		}

		this.$stage.children('.cloned').remove();

		this.$stage.unwrap();
		this.$stage.children().contents().unwrap();
		this.$stage.children().unwrap();

		this.$element
			.removeClass(this.options.refreshClass)
			.removeClass(this.options.loadingClass)
			.removeClass(this.options.loadedClass)
			.removeClass(this.options.rtlClass)
			.removeClass(this.options.dragClass)
			.removeClass(this.options.grabClass)
			.attr('class', this.$element.attr('class').replace(new RegExp(this.options.responsiveClass + '-\\S+\\s', 'g'), ''))
			.removeData('owl.carousel');
	};

	/**
	 * Operators to calculate right-to-left and left-to-right.
	 * @protected
	 * @param {Number} [a] - The left side operand.
	 * @param {String} [o] - The operator.
	 * @param {Number} [b] - The right side operand.
	 */
	Owl.prototype.op = function(a, o, b) {
		var rtl = this.settings.rtl;
		switch (o) {
			case '<':
				return rtl ? a > b : a < b;
			case '>':
				return rtl ? a < b : a > b;
			case '>=':
				return rtl ? a <= b : a >= b;
			case '<=':
				return rtl ? a >= b : a <= b;
			default:
				break;
		}
	};

	/**
	 * Attaches to an internal event.
	 * @protected
	 * @param {HTMLElement} element - The event source.
	 * @param {String} event - The event name.
	 * @param {Function} listener - The event handler to attach.
	 * @param {Boolean} capture - Wether the event should be handled at the capturing phase or not.
	 */
	Owl.prototype.on = function(element, event, listener, capture) {
		if (element.addEventListener) {
			element.addEventListener(event, listener, capture);
		} else if (element.attachEvent) {
			element.attachEvent('on' + event, listener);
		}
	};

	/**
	 * Detaches from an internal event.
	 * @protected
	 * @param {HTMLElement} element - The event source.
	 * @param {String} event - The event name.
	 * @param {Function} listener - The attached event handler to detach.
	 * @param {Boolean} capture - Wether the attached event handler was registered as a capturing listener or not.
	 */
	Owl.prototype.off = function(element, event, listener, capture) {
		if (element.removeEventListener) {
			element.removeEventListener(event, listener, capture);
		} else if (element.detachEvent) {
			element.detachEvent('on' + event, listener);
		}
	};

	/**
	 * Triggers a public event.
	 * @todo Remove `status`, `relatedTarget` should be used instead.
	 * @protected
	 * @param {String} name - The event name.
	 * @param {*} [data=null] - The event data.
	 * @param {String} [namespace=carousel] - The event namespace.
	 * @param {String} [state] - The state which is associated with the event.
	 * @param {Boolean} [enter=false] - Indicates if the call enters the specified state or not.
	 * @returns {Event} - The event arguments.
	 */
	Owl.prototype.trigger = function(name, data, namespace, state, enter) {
		var status = {
			item: { count: this._items.length, index: this.current() }
		}, handler = $.camelCase(
			$.grep([ 'on', name, namespace ], function(v) { return v })
				.join('-').toLowerCase()
		), event = $.Event(
			[ name, 'owl', namespace || 'carousel' ].join('.').toLowerCase(),
			$.extend({ relatedTarget: this }, status, data)
		);

		if (!this._supress[name]) {
			$.each(this._plugins, function(name, plugin) {
				if (plugin.onTrigger) {
					plugin.onTrigger(event);
				}
			});

			this.register({ type: Owl.Type.Event, name: name });
			this.$element.trigger(event);

			if (this.settings && typeof this.settings[handler] === 'function') {
				this.settings[handler].call(this, event);
			}
		}

		return event;
	};

	/**
	 * Enters a state.
	 * @param name - The state name.
	 */
	Owl.prototype.enter = function(name) {
		$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {
			if (this._states.current[name] === undefined) {
				this._states.current[name] = 0;
			}

			this._states.current[name]++;
		}, this));
	};

	/**
	 * Leaves a state.
	 * @param name - The state name.
	 */
	Owl.prototype.leave = function(name) {
		$.each([ name ].concat(this._states.tags[name] || []), $.proxy(function(i, name) {
			this._states.current[name]--;
		}, this));
	};

	/**
	 * Registers an event or state.
	 * @public
	 * @param {Object} object - The event or state to register.
	 */
	Owl.prototype.register = function(object) {
		if (object.type === Owl.Type.Event) {
			if (!$.event.special[object.name]) {
				$.event.special[object.name] = {};
			}

			if (!$.event.special[object.name].owl) {
				var _default = $.event.special[object.name]._default;
				$.event.special[object.name]._default = function(e) {
					if (_default && _default.apply && (!e.namespace || e.namespace.indexOf('owl') === -1)) {
						return _default.apply(this, arguments);
					}
					return e.namespace && e.namespace.indexOf('owl') > -1;
				};
				$.event.special[object.name].owl = true;
			}
		} else if (object.type === Owl.Type.State) {
			if (!this._states.tags[object.name]) {
				this._states.tags[object.name] = object.tags;
			} else {
				this._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);
			}

			this._states.tags[object.name] = $.grep(this._states.tags[object.name], $.proxy(function(tag, i) {
				return $.inArray(tag, this._states.tags[object.name]) === i;
			}, this));
		}
	};

	/**
	 * Suppresses events.
	 * @protected
	 * @param {Array.<String>} events - The events to suppress.
	 */
	Owl.prototype.suppress = function(events) {
		$.each(events, $.proxy(function(index, event) {
			this._supress[event] = true;
		}, this));
	};

	/**
	 * Releases suppressed events.
	 * @protected
	 * @param {Array.<String>} events - The events to release.
	 */
	Owl.prototype.release = function(events) {
		$.each(events, $.proxy(function(index, event) {
			delete this._supress[event];
		}, this));
	};

	/**
	 * Gets unified pointer coordinates from event.
	 * @todo #261
	 * @protected
	 * @param {Event} - The `mousedown` or `touchstart` event.
	 * @returns {Object} - Contains `x` and `y` coordinates of current pointer position.
	 */
	Owl.prototype.pointer = function(event) {
		var result = { x: null, y: null };

		event = event.originalEvent || event || window.event;

		event = event.touches && event.touches.length ?
			event.touches[0] : event.changedTouches && event.changedTouches.length ?
				event.changedTouches[0] : event;

		if (event.pageX) {
			result.x = event.pageX;
			result.y = event.pageY;
		} else {
			result.x = event.clientX;
			result.y = event.clientY;
		}

		return result;
	};

	/**
	 * Determines if the input is a Number or something that can be coerced to a Number
	 * @protected
	 * @param {Number|String|Object|Array|Boolean|RegExp|Function|Symbol} - The input to be tested
	 * @returns {Boolean} - An indication if the input is a Number or can be coerced to a Number
	 */
	Owl.prototype.isNumeric = function(number) {
		return !isNaN(parseFloat(number));
	};

	/**
	 * Gets the difference of two vectors.
	 * @todo #261
	 * @protected
	 * @param {Object} - The first vector.
	 * @param {Object} - The second vector.
	 * @returns {Object} - The difference.
	 */
	Owl.prototype.difference = function(first, second) {
		return {
			x: first.x - second.x,
			y: first.y - second.y
		};
	};

	/**
	 * The jQuery Plugin for the Owl Carousel
	 * @todo Navigation plugin `next` and `prev`
	 * @public
	 */
	$.fn.owlCarousel = function(option) {
		var args = Array.prototype.slice.call(arguments, 1);

		return this.each(function() {
			var $this = $(this),
				data = $this.data('owl.carousel');

			if (!data) {
				data = new Owl(this, typeof option == 'object' && option);
				$this.data('owl.carousel', data);

				$.each([
					'next', 'prev', 'to', 'destroy', 'refresh', 'replace', 'add', 'remove'
				], function(i, event) {
					data.register({ type: Owl.Type.Event, name: event });
					data.$element.on(event + '.owl.carousel.core', $.proxy(function(e) {
						if (e.namespace && e.relatedTarget !== this) {
							this.suppress([ event ]);
							data[event].apply(this, [].slice.call(arguments, 1));
							this.release([ event ]);
						}
					}, data));
				});
			}

			if (typeof option == 'string' && option.charAt(0) !== '_') {
				data[option].apply(data, args);
			}
		});
	};

	/**
	 * The constructor for the jQuery Plugin
	 * @public
	 */
	$.fn.owlCarousel.Constructor = Owl;

})(window.Zepto || window.jQuery, window, document);

/**
 * AutoRefresh Plugin
 * @version 2.1.0
 * @author Artus Kolanowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the auto refresh plugin.
	 * @class The Auto Refresh Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var AutoRefresh = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Refresh interval.
		 * @protected
		 * @type {number}
		 */
		this._interval = null;

		/**
		 * Whether the element is currently visible or not.
		 * @protected
		 * @type {Boolean}
		 */
		this._visible = null;

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoRefresh) {
					this.watch();
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, AutoRefresh.Defaults, this._core.options);

		// register event handlers
		this._core.$element.on(this._handlers);
	};

	/**
	 * Default options.
	 * @public
	 */
	AutoRefresh.Defaults = {
		autoRefresh: true,
		autoRefreshInterval: 500
	};

	/**
	 * Watches the element.
	 */
	AutoRefresh.prototype.watch = function() {
		if (this._interval) {
			return;
		}

		this._visible = this._core.$element.is(':visible');
		this._interval = window.setInterval($.proxy(this.refresh, this), this._core.settings.autoRefreshInterval);
	};

	/**
	 * Refreshes the element.
	 */
	AutoRefresh.prototype.refresh = function() {
		if (this._core.$element.is(':visible') === this._visible) {
			return;
		}

		this._visible = !this._visible;

		this._core.$element.toggleClass('owl-hidden', !this._visible);

		this._visible && (this._core.invalidate('width') && this._core.refresh());
	};

	/**
	 * Destroys the plugin.
	 */
	AutoRefresh.prototype.destroy = function() {
		var handler, property;

		window.clearInterval(this._interval);

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.AutoRefresh = AutoRefresh;

})(window.Zepto || window.jQuery, window, document);

/**
 * Lazy Plugin
 * @version 2.1.0
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the lazy plugin.
	 * @class The Lazy Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var Lazy = function(carousel) {

		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Already loaded items.
		 * @protected
		 * @type {Array.<jQuery>}
		 */
		this._loaded = [];

		/**
		 * Event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel change.owl.carousel resized.owl.carousel': $.proxy(function(e) {
				if (!e.namespace) {
					return;
				}

				if (!this._core.settings || !this._core.settings.lazyLoad) {
					return;
				}

				if ((e.property && e.property.name == 'position') || e.type == 'initialized') {
					var settings = this._core.settings,
						n = (settings.center && Math.ceil(settings.items / 2) || settings.items),
						i = ((settings.center && n * -1) || 0),
						position = (e.property && e.property.value !== undefined ? e.property.value : this._core.current()) + i,
						clones = this._core.clones().length,
						load = $.proxy(function(i, v) { this.load(v) }, this);

					while (i++ < n) {
						this.load(clones / 2 + this._core.relative(position));
						clones && $.each(this._core.clones(this._core.relative(position)), load);
						position++;
					}
				}
			}, this)
		};

		// set the default options
		this._core.options = $.extend({}, Lazy.Defaults, this._core.options);

		// register event handler
		this._core.$element.on(this._handlers);
	};

	/**
	 * Default options.
	 * @public
	 */
	Lazy.Defaults = {
		lazyLoad: false
	};

	/**
	 * Loads all resources of an item at the specified position.
	 * @param {Number} position - The absolute position of the item.
	 * @protected
	 */
	Lazy.prototype.load = function(position) {
		var $item = this._core.$stage.children().eq(position),
			$elements = $item && $item.find('.owl-lazy');

		if (!$elements || $.inArray($item.get(0), this._loaded) > -1) {
			return;
		}

		$elements.each($.proxy(function(index, element) {
			var $element = $(element), image,
				url = (window.devicePixelRatio > 1 && $element.attr('data-src-retina')) || $element.attr('data-src');

			this._core.trigger('load', { element: $element, url: url }, 'lazy');

			if ($element.is('img')) {
				$element.one('load.owl.lazy', $.proxy(function() {
					$element.css('opacity', 1);
					this._core.trigger('loaded', { element: $element, url: url }, 'lazy');
				}, this)).attr('src', url);
			} else {
				image = new Image();
				image.onload = $.proxy(function() {
					$element.css({
						'background-image': 'url(' + url + ')',
						'opacity': '1'
					});
					this._core.trigger('loaded', { element: $element, url: url }, 'lazy');
				}, this);
				image.src = url;
			}
		}, this));

		this._loaded.push($item.get(0));
	};

	/**
	 * Destroys the plugin.
	 * @public
	 */
	Lazy.prototype.destroy = function() {
		var handler, property;

		for (handler in this.handlers) {
			this._core.$element.off(handler, this.handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Lazy = Lazy;

})(window.Zepto || window.jQuery, window, document);

/**
 * AutoHeight Plugin
 * @version 2.1.0
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the auto height plugin.
	 * @class The Auto Height Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var AutoHeight = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel refreshed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoHeight) {
					this.update();
				}
			}, this),
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoHeight && e.property.name == 'position'){
					this.update();
				}
			}, this),
			'loaded.owl.lazy': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoHeight
					&& e.element.closest('.' + this._core.settings.itemClass).index() === this._core.current()) {
					this.update();
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, AutoHeight.Defaults, this._core.options);

		// register event handlers
		this._core.$element.on(this._handlers);
	};

	/**
	 * Default options.
	 * @public
	 */
	AutoHeight.Defaults = {
		autoHeight: false,
		autoHeightClass: 'owl-height'
	};

	/**
	 * Updates the view.
	 */
	AutoHeight.prototype.update = function() {
		var start = this._core._current,
			end = start + this._core.settings.items,
			visible = this._core.$stage.children().toArray().slice(start, end),
			heights = [],
			maxheight = 0;

		$.each(visible, function(index, item) {
			heights.push($(item).height());
		});

		maxheight = Math.max.apply(null, heights);

		this._core.$stage.parent()
			.height(maxheight)
			.addClass(this._core.settings.autoHeightClass);
	};

	AutoHeight.prototype.destroy = function() {
		var handler, property;

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.AutoHeight = AutoHeight;

})(window.Zepto || window.jQuery, window, document);

/**
 * Video Plugin
 * @version 2.1.0
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the video plugin.
	 * @class The Video Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var Video = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Cache all video URLs.
		 * @protected
		 * @type {Object}
		 */
		this._videos = {};

		/**
		 * Current playing item.
		 * @protected
		 * @type {jQuery}
		 */
		this._playing = null;

		/**
		 * All event handlers.
		 * @todo The cloned content removale is too late
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace) {
					this._core.register({ type: 'state', name: 'playing', tags: [ 'interacting' ] });
				}
			}, this),
			'resize.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.video && this.isInFullScreen()) {
					e.preventDefault();
				}
			}, this),
			'refreshed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.is('resizing')) {
					this._core.$stage.find('.cloned .owl-video-frame').remove();
				}
			}, this),
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name === 'position' && this._playing) {
					this.stop();
				}
			}, this),
			'prepared.owl.carousel': $.proxy(function(e) {
				if (!e.namespace) {
					return;
				}

				var $element = $(e.content).find('.owl-video');

				if ($element.length) {
					$element.css('display', 'none');
					this.fetch($element, $(e.content));
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, Video.Defaults, this._core.options);

		// register event handlers
		this._core.$element.on(this._handlers);

		this._core.$element.on('click.owl.video', '.owl-video-play-icon', $.proxy(function(e) {
			this.play(e);
		}, this));
	};

	/**
	 * Default options.
	 * @public
	 */
	Video.Defaults = {
		video: false,
		videoHeight: false,
		videoWidth: false
	};

	/**
	 * Gets the video ID and the type (YouTube/Vimeo/vzaar only).
	 * @protected
	 * @param {jQuery} target - The target containing the video data.
	 * @param {jQuery} item - The item containing the video.
	 */
	Video.prototype.fetch = function(target, item) {
			var type = (function() {
					if (target.attr('data-vimeo-id')) {
						return 'vimeo';
					} else if (target.attr('data-vzaar-id')) {
						return 'vzaar'
					} else {
						return 'youtube';
					}
				})(),
				id = target.attr('data-vimeo-id') || target.attr('data-youtube-id') || target.attr('data-vzaar-id'),
				width = target.attr('data-width') || this._core.settings.videoWidth,
				height = target.attr('data-height') || this._core.settings.videoHeight,
				url = target.attr('href');

		if (url) {

			/*
					Parses the id's out of the following urls (and probably more):
					https://www.youtube.com/watch?v=:id
					https://youtu.be/:id
					https://vimeo.com/:id
					https://vimeo.com/channels/:channel/:id
					https://vimeo.com/groups/:group/videos/:id
					https://app.vzaar.com/videos/:id

					Visual example: https://regexper.com/#(http%3A%7Chttps%3A%7C)%5C%2F%5C%2F(player.%7Cwww.%7Capp.)%3F(vimeo%5C.com%7Cyoutu(be%5C.com%7C%5C.be%7Cbe%5C.googleapis%5C.com)%7Cvzaar%5C.com)%5C%2F(video%5C%2F%7Cvideos%5C%2F%7Cembed%5C%2F%7Cchannels%5C%2F.%2B%5C%2F%7Cgroups%5C%2F.%2B%5C%2F%7Cwatch%5C%3Fv%3D%7Cv%5C%2F)%3F(%5BA-Za-z0-9._%25-%5D*)(%5C%26%5CS%2B)%3F
			*/

			id = url.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/);

			if (id[3].indexOf('youtu') > -1) {
				type = 'youtube';
			} else if (id[3].indexOf('vimeo') > -1) {
				type = 'vimeo';
			} else if (id[3].indexOf('vzaar') > -1) {
				type = 'vzaar';
			} else {
				throw new Error('Video URL not supported.');
			}
			id = id[6];
		} else {
			throw new Error('Missing video URL.');
		}

		this._videos[url] = {
			type: type,
			id: id,
			width: width,
			height: height
		};

		item.attr('data-video', url);

		this.thumbnail(target, this._videos[url]);
	};

	/**
	 * Creates video thumbnail.
	 * @protected
	 * @param {jQuery} target - The target containing the video data.
	 * @param {Object} info - The video info object.
	 * @see `fetch`
	 */
	Video.prototype.thumbnail = function(target, video) {
		var tnLink,
			icon,
			path,
			dimensions = video.width && video.height ? 'style="width:' + video.width + 'px;height:' + video.height + 'px;"' : '',
			customTn = target.find('img'),
			srcType = 'src',
			lazyClass = '',
			settings = this._core.settings,
			create = function(path) {
				icon = '<div class="owl-video-play-icon"></div>';

				if (settings.lazyLoad) {
					tnLink = '<div class="owl-video-tn ' + lazyClass + '" ' + srcType + '="' + path + '"></div>';
				} else {
					tnLink = '<div class="owl-video-tn" style="opacity:1;background-image:url(' + path + ')"></div>';
				}
				target.after(tnLink);
				target.after(icon);
			};

		// wrap video content into owl-video-wrapper div
		target.wrap('<div class="owl-video-wrapper"' + dimensions + '></div>');

		if (this._core.settings.lazyLoad) {
			srcType = 'data-src';
			lazyClass = 'owl-lazy';
		}

		// custom thumbnail
		if (customTn.length) {
			create(customTn.attr(srcType));
			customTn.remove();
			return false;
		}

		if (video.type === 'youtube') {
			path = "//img.youtube.com/vi/" + video.id + "/hqdefault.jpg";
			create(path);
		} else if (video.type === 'vimeo') {
			$.ajax({
				type: 'GET',
				url: '//vimeo.com/api/v2/video/' + video.id + '.json',
				jsonp: 'callback',
				dataType: 'jsonp',
				success: function(data) {
					path = data[0].thumbnail_large;
					create(path);
				}
			});
		} else if (video.type === 'vzaar') {
			$.ajax({
				type: 'GET',
				url: '//vzaar.com/api/videos/' + video.id + '.json',
				jsonp: 'callback',
				dataType: 'jsonp',
				success: function(data) {
					path = data.framegrab_url;
					create(path);
				}
			});
		}
	};

	/**
	 * Stops the current video.
	 * @public
	 */
	Video.prototype.stop = function() {
		this._core.trigger('stop', null, 'video');
		this._playing.find('.owl-video-frame').remove();
		this._playing.removeClass('owl-video-playing');
		this._playing = null;
		this._core.leave('playing');
		this._core.trigger('stopped', null, 'video');
	};

	/**
	 * Starts the current video.
	 * @public
	 * @param {Event} event - The event arguments.
	 */
	Video.prototype.play = function(event) {
		var target = $(event.target),
			item = target.closest('.' + this._core.settings.itemClass),
			video = this._videos[item.attr('data-video')],
			width = video.width || '100%',
			height = video.height || this._core.$stage.height(),
			html;

		if (this._playing) {
			return;
		}

		this._core.enter('playing');
		this._core.trigger('play', null, 'video');

		item = this._core.items(this._core.relative(item.index()));

		this._core.reset(item.index());

		if (video.type === 'youtube') {
			html = '<iframe width="' + width + '" height="' + height + '" src="//www.youtube.com/embed/' +
				video.id + '?autoplay=1&v=' + video.id + '" frameborder="0" allowfullscreen></iframe>';
		} else if (video.type === 'vimeo') {
			html = '<iframe src="//player.vimeo.com/video/' + video.id +
				'?autoplay=1" width="' + width + '" height="' + height +
				'" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>';
		} else if (video.type === 'vzaar') {
			html = '<iframe frameborder="0"' + 'height="' + height + '"' + 'width="' + width +
				'" allowfullscreen mozallowfullscreen webkitAllowFullScreen ' +
				'src="//view.vzaar.com/' + video.id + '/player?autoplay=true"></iframe>';
		}

		$('<div class="owl-video-frame">' + html + '</div>').insertAfter(item.find('.owl-video'));

		this._playing = item.addClass('owl-video-playing');
	};

	/**
	 * Checks whether an video is currently in full screen mode or not.
	 * @todo Bad style because looks like a readonly method but changes members.
	 * @protected
	 * @returns {Boolean}
	 */
	Video.prototype.isInFullScreen = function() {
		var element = document.fullscreenElement || document.mozFullScreenElement ||
				document.webkitFullscreenElement;

		return element && $(element).parent().hasClass('owl-video-frame');
	};

	/**
	 * Destroys the plugin.
	 */
	Video.prototype.destroy = function() {
		var handler, property;

		this._core.$element.off('click.owl.video');

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Video = Video;

})(window.Zepto || window.jQuery, window, document);

/**
 * Animate Plugin
 * @version 2.1.0
 * @author Bartosz Wojciechowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the animate plugin.
	 * @class The Navigation Plugin
	 * @param {Owl} scope - The Owl Carousel
	 */
	var Animate = function(scope) {
		this.core = scope;
		this.core.options = $.extend({}, Animate.Defaults, this.core.options);
		this.swapping = true;
		this.previous = undefined;
		this.next = undefined;

		this.handlers = {
			'change.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name == 'position') {
					this.previous = this.core.current();
					this.next = e.property.value;
				}
			}, this),
			'drag.owl.carousel dragged.owl.carousel translated.owl.carousel': $.proxy(function(e) {
				if (e.namespace) {
					this.swapping = e.type == 'translated';
				}
			}, this),
			'translate.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this.swapping && (this.core.options.animateOut || this.core.options.animateIn)) {
					this.swap();
				}
			}, this)
		};

		this.core.$element.on(this.handlers);
	};

	/**
	 * Default options.
	 * @public
	 */
	Animate.Defaults = {
		animateOut: false,
		animateIn: false
	};

	/**
	 * Toggles the animation classes whenever an translations starts.
	 * @protected
	 * @returns {Boolean|undefined}
	 */
	Animate.prototype.swap = function() {

		if (this.core.settings.items !== 1) {
			return;
		}

		if (!$.support.animation || !$.support.transition) {
			return;
		}

		this.core.speed(0);

		var left,
			clear = $.proxy(this.clear, this),
			previous = this.core.$stage.children().eq(this.previous),
			next = this.core.$stage.children().eq(this.next),
			incoming = this.core.settings.animateIn,
			outgoing = this.core.settings.animateOut;

		if (this.core.current() === this.previous) {
			return;
		}

		if (outgoing) {
			left = this.core.coordinates(this.previous) - this.core.coordinates(this.next);
			previous.one($.support.animation.end, clear)
				.css( { 'left': left + 'px' } )
				.addClass('animated owl-animated-out')
				.addClass(outgoing);
		}

		if (incoming) {
			next.one($.support.animation.end, clear)
				.addClass('animated owl-animated-in')
				.addClass(incoming);
		}
	};

	Animate.prototype.clear = function(e) {
		$(e.target).css( { 'left': '' } )
			.removeClass('animated owl-animated-out owl-animated-in')
			.removeClass(this.core.settings.animateIn)
			.removeClass(this.core.settings.animateOut);
		this.core.onTransitionEnd();
	};

	/**
	 * Destroys the plugin.
	 * @public
	 */
	Animate.prototype.destroy = function() {
		var handler, property;

		for (handler in this.handlers) {
			this.core.$element.off(handler, this.handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Animate = Animate;

})(window.Zepto || window.jQuery, window, document);

/**
 * Autoplay Plugin
 * @version 2.1.0
 * @author Bartosz Wojciechowski
 * @author Artus Kolanowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	/**
	 * Creates the autoplay plugin.
	 * @class The Autoplay Plugin
	 * @param {Owl} scope - The Owl Carousel
	 */
	var Autoplay = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * The autoplay timeout.
		 * @type {Timeout}
		 */
		this._timeout = null;

		/**
		 * Indicates whenever the autoplay is paused.
		 * @type {Boolean}
		 */
		this._paused = false;

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name === 'settings') {
					if (this._core.settings.autoplay) {
						this.play();
					} else {
						this.stop();
					}
				} else if (e.namespace && e.property.name === 'position') {
					//console.log('play?', e);
					if (this._core.settings.autoplay) {
						this._setAutoPlayInterval();
					}
				}
			}, this),
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.autoplay) {
					this.play();
				}
			}, this),
			'play.owl.autoplay': $.proxy(function(e, t, s) {
				if (e.namespace) {
					this.play(t, s);
				}
			}, this),
			'stop.owl.autoplay': $.proxy(function(e) {
				if (e.namespace) {
					this.stop();
				}
			}, this),
			'mouseover.owl.autoplay': $.proxy(function() {
				if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
					this.pause();
				}
			}, this),
			'mouseleave.owl.autoplay': $.proxy(function() {
				if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
					this.play();
				}
			}, this),
			'touchstart.owl.core': $.proxy(function() {
				if (this._core.settings.autoplayHoverPause && this._core.is('rotating')) {
					this.pause();
				}
			}, this),
			'touchend.owl.core': $.proxy(function() {
				if (this._core.settings.autoplayHoverPause) {
					this.play();
				}
			}, this)
		};

		// register event handlers
		this._core.$element.on(this._handlers);

		// set default options
		this._core.options = $.extend({}, Autoplay.Defaults, this._core.options);
	};

	/**
	 * Default options.
	 * @public
	 */
	Autoplay.Defaults = {
		autoplay: false,
		autoplayTimeout: 5000,
		autoplayHoverPause: false,
		autoplaySpeed: false
	};

	/**
	 * Starts the autoplay.
	 * @public
	 * @param {Number} [timeout] - The interval before the next animation starts.
	 * @param {Number} [speed] - The animation speed for the animations.
	 */
	Autoplay.prototype.play = function(timeout, speed) {
		this._paused = false;

		if (this._core.is('rotating')) {
			return;
		}

		this._core.enter('rotating');

		this._setAutoPlayInterval();
	};

	/**
	 * Gets a new timeout
	 * @private
	 * @param {Number} [timeout] - The interval before the next animation starts.
	 * @param {Number} [speed] - The animation speed for the animations.
	 * @return {Timeout}
	 */
	Autoplay.prototype._getNextTimeout = function(timeout, speed) {
		if ( this._timeout ) {
			window.clearTimeout(this._timeout);
		}
		return window.setTimeout($.proxy(function() {
			if (this._paused || this._core.is('busy') || this._core.is('interacting') || document.hidden) {
				return;
			}
			this._core.next(speed || this._core.settings.autoplaySpeed);
		}, this), timeout || this._core.settings.autoplayTimeout);
	};

	/**
	 * Sets autoplay in motion.
	 * @private
	 */
	Autoplay.prototype._setAutoPlayInterval = function() {
		this._timeout = this._getNextTimeout();
	};

	/**
	 * Stops the autoplay.
	 * @public
	 */
	Autoplay.prototype.stop = function() {
		if (!this._core.is('rotating')) {
			return;
		}

		window.clearTimeout(this._timeout);
		this._core.leave('rotating');
	};

	/**
	 * Stops the autoplay.
	 * @public
	 */
	Autoplay.prototype.pause = function() {
		if (!this._core.is('rotating')) {
			return;
		}

		this._paused = true;
	};

	/**
	 * Destroys the plugin.
	 */
	Autoplay.prototype.destroy = function() {
		var handler, property;

		this.stop();

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.autoplay = Autoplay;

})(window.Zepto || window.jQuery, window, document);

/**
 * Navigation Plugin
 * @version 2.1.0
 * @author Artus Kolanowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {
	'use strict';

	/**
	 * Creates the navigation plugin.
	 * @class The Navigation Plugin
	 * @param {Owl} carousel - The Owl Carousel.
	 */
	var Navigation = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Indicates whether the plugin is initialized or not.
		 * @protected
		 * @type {Boolean}
		 */
		this._initialized = false;

		/**
		 * The current paging indexes.
		 * @protected
		 * @type {Array}
		 */
		this._pages = [];

		/**
		 * All DOM elements of the user interface.
		 * @protected
		 * @type {Object}
		 */
		this._controls = {};

		/**
		 * Markup for an indicator.
		 * @protected
		 * @type {Array.<String>}
		 */
		this._templates = [];

		/**
		 * The carousel element.
		 * @type {jQuery}
		 */
		this.$element = this._core.$element;

		/**
		 * Overridden methods of the carousel.
		 * @protected
		 * @type {Object}
		 */
		this._overrides = {
			next: this._core.next,
			prev: this._core.prev,
			to: this._core.to
		};

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'prepared.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.dotsData) {
					this._templates.push('<div class="' + this._core.settings.dotClass + '">' +
						$(e.content).find('[data-dot]').addBack('[data-dot]').attr('data-dot') + '</div>');
				}
			}, this),
			'added.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.dotsData) {
					this._templates.splice(e.position, 0, this._templates.pop());
				}
			}, this),
			'remove.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.dotsData) {
					this._templates.splice(e.position, 1);
				}
			}, this),
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name == 'position') {
					this.draw();
				}
			}, this),
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace && !this._initialized) {
					this._core.trigger('initialize', null, 'navigation');
					this.initialize();
					this.update();
					this.draw();
					this._initialized = true;
					this._core.trigger('initialized', null, 'navigation');
				}
			}, this),
			'refreshed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._initialized) {
					this._core.trigger('refresh', null, 'navigation');
					this.update();
					this.draw();
					this._core.trigger('refreshed', null, 'navigation');
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, Navigation.Defaults, this._core.options);

		// register event handlers
		this.$element.on(this._handlers);
	};

	/**
	 * Default options.
	 * @public
	 * @todo Rename `slideBy` to `navBy`
	 */
	Navigation.Defaults = {
		nav: false,
		navText: [ 'prev', 'next' ],
		navSpeed: false,
		navElement: 'div',
		navContainer: false,
		navContainerClass: 'owl-nav',
		navClass: [ 'owl-prev', 'owl-next' ],
		slideBy: 1,
		dotClass: 'owl-dot',
		dotsClass: 'owl-dots',
		dots: true,
		dotsEach: false,
		dotsData: false,
		dotsSpeed: false,
		dotsContainer: false
	};

	/**
	 * Initializes the layout of the plugin and extends the carousel.
	 * @protected
	 */
	Navigation.prototype.initialize = function() {
		var override,
			settings = this._core.settings;

		// create DOM structure for relative navigation
		this._controls.$relative = (settings.navContainer ? $(settings.navContainer)
			: $('<div>').addClass(settings.navContainerClass).appendTo(this.$element)).addClass('disabled');

		this._controls.$previous = $('<' + settings.navElement + '>')
			.addClass(settings.navClass[0])
			.html(settings.navText[0])
			.prependTo(this._controls.$relative)
			.on('click', $.proxy(function(e) {
				this.prev(settings.navSpeed);
			}, this));
		this._controls.$next = $('<' + settings.navElement + '>')
			.addClass(settings.navClass[1])
			.html(settings.navText[1])
			.appendTo(this._controls.$relative)
			.on('click', $.proxy(function(e) {
				this.next(settings.navSpeed);
			}, this));

		// create DOM structure for absolute navigation
		if (!settings.dotsData) {
			this._templates = [ $('<div>')
				.addClass(settings.dotClass)
				.append($('<span>'))
				.prop('outerHTML') ];
		}

		this._controls.$absolute = (settings.dotsContainer ? $(settings.dotsContainer)
			: $('<div>').addClass(settings.dotsClass).appendTo(this.$element)).addClass('disabled');

		this._controls.$absolute.on('click', 'div', $.proxy(function(e) {
			var index = $(e.target).parent().is(this._controls.$absolute)
				? $(e.target).index() : $(e.target).parent().index();

			e.preventDefault();

			this.to(index, settings.dotsSpeed);
		}, this));

		// override public methods of the carousel
		for (override in this._overrides) {
			this._core[override] = $.proxy(this[override], this);
		}
	};

	/**
	 * Destroys the plugin.
	 * @protected
	 */
	Navigation.prototype.destroy = function() {
		var handler, control, property, override;

		for (handler in this._handlers) {
			this.$element.off(handler, this._handlers[handler]);
		}
		for (control in this._controls) {
			this._controls[control].remove();
		}
		for (override in this.overides) {
			this._core[override] = this._overrides[override];
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	/**
	 * Updates the internal state.
	 * @protected
	 */
	Navigation.prototype.update = function() {
		var i, j, k,
			lower = this._core.clones().length / 2,
			upper = lower + this._core.items().length,
			maximum = this._core.maximum(true),
			settings = this._core.settings,
			size = settings.center || settings.autoWidth || settings.dotsData
				? 1 : settings.dotsEach || settings.items;

		if (settings.slideBy !== 'page') {
			settings.slideBy = Math.min(settings.slideBy, settings.items);
		}

		if (settings.dots || settings.slideBy == 'page') {
			this._pages = [];

			for (i = lower, j = 0, k = 0; i < upper; i++) {
				if (j >= size || j === 0) {
					this._pages.push({
						start: Math.min(maximum, i - lower),
						end: i - lower + size - 1
					});
					if (Math.min(maximum, i - lower) === maximum) {
						break;
					}
					j = 0, ++k;
				}
				j += this._core.mergers(this._core.relative(i));
			}
		}
	};

	/**
	 * Draws the user interface.
	 * @todo The option `dotsData` wont work.
	 * @protected
	 */
	Navigation.prototype.draw = function() {
		var difference,
			settings = this._core.settings,
			disabled = this._core.items().length <= settings.items,
			index = this._core.relative(this._core.current()),
			loop = settings.loop || settings.rewind;

		this._controls.$relative.toggleClass('disabled', !settings.nav || disabled);

		if (settings.nav) {
			this._controls.$previous.toggleClass('disabled', !loop && index <= this._core.minimum(true));
			this._controls.$next.toggleClass('disabled', !loop && index >= this._core.maximum(true));
		}

		this._controls.$absolute.toggleClass('disabled', !settings.dots || disabled);

		if (settings.dots) {
			difference = this._pages.length - this._controls.$absolute.children().length;

			if (settings.dotsData && difference !== 0) {
				this._controls.$absolute.html(this._templates.join(''));
			} else if (difference > 0) {
				this._controls.$absolute.append(new Array(difference + 1).join(this._templates[0]));
			} else if (difference < 0) {
				this._controls.$absolute.children().slice(difference).remove();
			}

			this._controls.$absolute.find('.active').removeClass('active');
			this._controls.$absolute.children().eq($.inArray(this.current(), this._pages)).addClass('active');
		}
	};

	/**
	 * Extends event data.
	 * @protected
	 * @param {Event} event - The event object which gets thrown.
	 */
	Navigation.prototype.onTrigger = function(event) {
		var settings = this._core.settings;

		event.page = {
			index: $.inArray(this.current(), this._pages),
			count: this._pages.length,
			size: settings && (settings.center || settings.autoWidth || settings.dotsData
				? 1 : settings.dotsEach || settings.items)
		};
	};

	/**
	 * Gets the current page position of the carousel.
	 * @protected
	 * @returns {Number}
	 */
	Navigation.prototype.current = function() {
		var current = this._core.relative(this._core.current());
		return $.grep(this._pages, $.proxy(function(page, index) {
			return page.start <= current && page.end >= current;
		}, this)).pop();
	};

	/**
	 * Gets the current succesor/predecessor position.
	 * @protected
	 * @returns {Number}
	 */
	Navigation.prototype.getPosition = function(successor) {
		var position, length,
			settings = this._core.settings;

		if (settings.slideBy == 'page') {
			position = $.inArray(this.current(), this._pages);
			length = this._pages.length;
			successor ? ++position : --position;
			position = this._pages[((position % length) + length) % length].start;
		} else {
			position = this._core.relative(this._core.current());
			length = this._core.items().length;
			successor ? position += settings.slideBy : position -= settings.slideBy;
		}

		return position;
	};

	/**
	 * Slides to the next item or page.
	 * @public
	 * @param {Number} [speed=false] - The time in milliseconds for the transition.
	 */
	Navigation.prototype.next = function(speed) {
		$.proxy(this._overrides.to, this._core)(this.getPosition(true), speed);
	};

	/**
	 * Slides to the previous item or page.
	 * @public
	 * @param {Number} [speed=false] - The time in milliseconds for the transition.
	 */
	Navigation.prototype.prev = function(speed) {
		$.proxy(this._overrides.to, this._core)(this.getPosition(false), speed);
	};

	/**
	 * Slides to the specified item or page.
	 * @public
	 * @param {Number} position - The position of the item or page.
	 * @param {Number} [speed] - The time in milliseconds for the transition.
	 * @param {Boolean} [standard=false] - Whether to use the standard behaviour or not.
	 */
	Navigation.prototype.to = function(position, speed, standard) {
		var length;

		if (!standard && this._pages.length) {
			length = this._pages.length;
			$.proxy(this._overrides.to, this._core)(this._pages[((position % length) + length) % length].start, speed);
		} else {
			$.proxy(this._overrides.to, this._core)(position, speed);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Navigation = Navigation;

})(window.Zepto || window.jQuery, window, document);

/**
 * Hash Plugin
 * @version 2.1.0
 * @author Artus Kolanowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {
	'use strict';

	/**
	 * Creates the hash plugin.
	 * @class The Hash Plugin
	 * @param {Owl} carousel - The Owl Carousel
	 */
	var Hash = function(carousel) {
		/**
		 * Reference to the core.
		 * @protected
		 * @type {Owl}
		 */
		this._core = carousel;

		/**
		 * Hash index for the items.
		 * @protected
		 * @type {Object}
		 */
		this._hashes = {};

		/**
		 * The carousel element.
		 * @type {jQuery}
		 */
		this.$element = this._core.$element;

		/**
		 * All event handlers.
		 * @protected
		 * @type {Object}
		 */
		this._handlers = {
			'initialized.owl.carousel': $.proxy(function(e) {
				if (e.namespace && this._core.settings.startPosition === 'URLHash') {
					$(window).trigger('hashchange.owl.navigation');
				}
			}, this),
			'prepared.owl.carousel': $.proxy(function(e) {
				if (e.namespace) {
					var hash = $(e.content).find('[data-hash]').addBack('[data-hash]').attr('data-hash');

					if (!hash) {
						return;
					}

					this._hashes[hash] = e.content;
				}
			}, this),
			'changed.owl.carousel': $.proxy(function(e) {
				if (e.namespace && e.property.name === 'position') {
					var current = this._core.items(this._core.relative(this._core.current())),
						hash = $.map(this._hashes, function(item, hash) {
							return item === current ? hash : null;
						}).join();

					if (!hash || window.location.hash.slice(1) === hash) {
						return;
					}

					window.location.hash = hash;
				}
			}, this)
		};

		// set default options
		this._core.options = $.extend({}, Hash.Defaults, this._core.options);

		// register the event handlers
		this.$element.on(this._handlers);

		// register event listener for hash navigation
		$(window).on('hashchange.owl.navigation', $.proxy(function(e) {
			var hash = window.location.hash.substring(1),
				items = this._core.$stage.children(),
				position = this._hashes[hash] && items.index(this._hashes[hash]);

			if (position === undefined || position === this._core.current()) {
				return;
			}

			this._core.to(this._core.relative(position), false, true);
		}, this));
	};

	/**
	 * Default options.
	 * @public
	 */
	Hash.Defaults = {
		URLhashListener: false
	};

	/**
	 * Destroys the plugin.
	 * @public
	 */
	Hash.prototype.destroy = function() {
		var handler, property;

		$(window).off('hashchange.owl.navigation');

		for (handler in this._handlers) {
			this._core.$element.off(handler, this._handlers[handler]);
		}
		for (property in Object.getOwnPropertyNames(this)) {
			typeof this[property] != 'function' && (this[property] = null);
		}
	};

	$.fn.owlCarousel.Constructor.Plugins.Hash = Hash;

})(window.Zepto || window.jQuery, window, document);

/**
 * Support Plugin
 *
 * @version 2.1.0
 * @author Vivid Planet Software GmbH
 * @author Artus Kolanowski
 * @author David Deutsch
 * @license The MIT License (MIT)
 */
;(function($, window, document, undefined) {

	var style = $('<support>').get(0).style,
		prefixes = 'Webkit Moz O ms'.split(' '),
		events = {
			transition: {
				end: {
					WebkitTransition: 'webkitTransitionEnd',
					MozTransition: 'transitionend',
					OTransition: 'oTransitionEnd',
					transition: 'transitionend'
				}
			},
			animation: {
				end: {
					WebkitAnimation: 'webkitAnimationEnd',
					MozAnimation: 'animationend',
					OAnimation: 'oAnimationEnd',
					animation: 'animationend'
				}
			}
		},
		tests = {
			csstransforms: function() {
				return !!test('transform');
			},
			csstransforms3d: function() {
				return !!test('perspective');
			},
			csstransitions: function() {
				return !!test('transition');
			},
			cssanimations: function() {
				return !!test('animation');
			}
		};

	function test(property, prefixed) {
		var result = false,
			upper = property.charAt(0).toUpperCase() + property.slice(1);

		$.each((property + ' ' + prefixes.join(upper + ' ') + upper).split(' '), function(i, property) {
			if (style[property] !== undefined) {
				result = prefixed ? property : true;
				return false;
			}
		});

		return result;
	}

	function prefixed(property) {
		return test(property, true);
	}

	if (tests.csstransitions()) {
		/* jshint -W053 */
		$.support.transition = new String(prefixed('transition'))
		$.support.transition.end = events.transition.end[ $.support.transition ];
	}

	if (tests.cssanimations()) {
		/* jshint -W053 */
		$.support.animation = new String(prefixed('animation'))
		$.support.animation.end = events.animation.end[ $.support.animation ];
	}

	if (tests.csstransforms()) {
		/* jshint -W053 */
		$.support.transform = new String(prefixed('transform'));
		$.support.transform3d = tests.csstransforms3d();
	}

})(window.Zepto || window.jQuery, window, document);

},{}]},{},[6]);
